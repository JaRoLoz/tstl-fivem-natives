/* Generated by https://github.com/JaRoLoz/tstl-fivem-natives */
declare global {
    const source: number;
}
type Vector2 = {
    x: number,
    y: number
};
declare function vector2(x: number, y: number): Vector2;
type Vector3 = {
    x: number,
    y: number,
    z: number
};
declare function vector3(x: number, y: number, z: number): Vector3;
type Vector4 = {
    x: number,
    y: number,
    z: number,
    w: number   
};
declare function vector4(x: number, y: number, z: number, w: number): Vector4;
declare function CreateThread(callback: () => void): void;
declare function AddEventHandler(eventName: string, cb: (...args: any[]) => void): void;
declare function RegisterNetEvent(eventName: string, cb: (...args: any[]) => void): void;
declare function TriggerClientEvent(eventName: string, ...args: any[]): void;
declare function TriggerServerEvent(eventName: string, ...args: any[]): void;
declare function TriggerEvent(eventName: string, ...args: any[]): void;
declare function SendNUIMessage(data: object): void;
declare function Absf(value: number): number;
declare function Absi(value: number): number;
declare function Acos(p0: number): number;
declare function ActivateAudioSlowmoMode(p0: string): void;
declare function N_0xd01005d2ba2eb778(p0: string): void;
declare function ActivateDamageTrackerOnNetworkId(netID: number, toggle: boolean): void;
declare function ActivateDamageTrackerOnPlayer(player: number, toggle: boolean): void;
declare function N_0xbec0816ff5acbcda(player: number, toggle: boolean): void;
declare function ActivateFrontendMenu(menuhash: number, togglePause: boolean, component: number): void;
declare function ActivateInteriorEntitySet(interior: number, entitySetName: string): void;
declare function N_0x55e86af2712b36a1(interior: number, entitySetName: string): void;
declare function EnableInteriorProp(interior: number, entitySetName: string): void;
declare function ActivatePhysics(entity: number): void;
declare function ActivateRockstarEditor(): void;
declare function N_0x49da8145672b2725(): void;
declare function ActivateTimecycleEditor(): void;
declare function AddAmmoToPed(ped: number, weaponHash: number, ammo: number): void;
declare function AddAmmoToPedByType(ped: number, ammoType: number, ammo: number): void;
declare function N_0x2472622ce1f2d45f(ped: number, ammoType: number, ammo: number): void;
declare function AddPedAmmo(ped: number, ammoType: number, ammo: number): void;
declare function AddArmourToPed(ped: number, amount: number): void;
declare function AddAudioSubmixOutput(submixId: number, outputSubmixId: number): void;
declare function AddBlipForArea(x: number, y: number, z: number, width: number, height: number): number;
declare function N_0xce5d0e5e315db238(x: number, y: number, z: number, width: number, height: number): number;
declare function AddBlipForCoord(x: number, y: number, z: number): number;
declare function AddBlipForEntity(entity: number): number;
declare function AddBlipForPickup(pickup: number): number;
declare function AddBlipForRadius(posX: number, posY: number, posZ: number, radius: number): number;
declare function AddCamSplineNode(camera: number, x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, length: number, p8: number, transitionType: number): void;
declare function AddCamSplineNodeUsingCamera(cam: number, cam2: number, length: number, p3: number): void;
declare function N_0x0fb82563989cf4fb(cam: number, cam2: number, length: number, p3: number): void;
declare function AddCamSplineNodeUsingCameraFrame(cam: number, cam2: number, p2: number, p3: number): void;
declare function N_0x0a9f2a468b328e74(cam: number, cam2: number, p2: number, p3: number): void;
declare function AddCamSplineNodeUsingGameplayFrame(cam: number, p1: number, p2: number): void;
declare function N_0x609278246a29ca34(cam: number, p1: number, p2: number): void;
declare function AddCoverBlockingArea(playerX: number, playerY: number, playerZ: number, radiusX: number, radiusY: number, radiusZ: number, p6: boolean, p7: boolean, p8: boolean, p9: boolean): void;
declare function AddCoverPoint(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: boolean): number;
declare function AddDecal(decalType: number, posX: number, posY: number, posZ: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, width: number, height: number, rCoef: number, gCoef: number, bCoef: number, opacity: number, timeout: number, p17: boolean, p18: boolean, p19: boolean): number;
declare function AddDispatchSpawnBlockingAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): number;
declare function N_0x918c7b2d2ff3928b(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): number;
declare function AddDispatchSpawnBlockingArea(x1: number, y1: number, x2: number, y2: number): number;
declare function N_0x2d4259f1feb81da9(x1: number, y1: number, x2: number, y2: number): number;
declare function AddDoorToSystem(doorHash: number, modelHash: number, x: number, y: number, z: number, p5: boolean, scriptDoor: boolean, isLocal: boolean): void;
declare function AddEntityIcon(entity: number, icon: string): number;
declare function AddEntityToAudioMixGroup(entity: number, groupName: string, p2: number): void;
declare function N_0x153973ab99fe8980(entity: number, groupName: string, p2: number): void;
declare function DynamicMixerRelatedFn(entity: number, groupName: string, p2: number): void;
declare function AddExplosion(x: number, y: number, z: number, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
declare function AddExplosionWithUserVfx(x: number, y: number, z: number, explosionType: number, explosionFx: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
declare function AddSpecfxExplosion(x: number, y: number, z: number, explosionType: number, explosionFx: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
declare function AddExtraCalmingQuad(xLow: number, yLow: number, xHigh: number, yHigh: number, height: number): number;
declare function N_0xfdbf4cdbc07e1706(xLow: number, yLow: number, xHigh: number, yHigh: number, height: number): number;
declare function AddCurrentRise(xLow: number, yLow: number, xHigh: number, yHigh: number, height: number): number;
declare function AddHospitalRestart(x: number, y: number, z: number, p3: number, p4: number): number;
declare function AddLineToConversation(index: number, p1: string, p2: string, p3: number, p4: number, p5: boolean, p6: boolean, p7: boolean, p8: boolean, p9: number, p10: boolean, p11: boolean, p12: boolean): void;
declare function AddMinimapOverlay(name: string): number;
declare function AddMinimapOverlayWithDepth(name: string, depth: number): number;
declare function AddModelToCreatorBudget(modelHash: number): boolean;
declare function N_0x0bc3144deb678666(modelHash: number): boolean;
declare function AddNavmeshBlockingObject(x: number, y: number, z: number, width: number, length: number, height: number, heading: number, p7: boolean, p8: number): number;
declare function AddNavmeshRequiredRegion(x: number, y: number, radius: number): void;
declare function AddNextMessageToPreviousBriefs(p0: boolean): void;
declare function AddOilDecal(x: number, y: number, z: number, groundLvl: number, width: number, transparency: number): number;
declare function AddOwnedExplosion(ped: number, x: number, y: number, z: number, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
declare function AddPatrolRouteLink(id1: number, id2: number): void;
declare function AddPatrolRouteNode(id: number, guardScenario: string, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, waitTime: number): void;
declare function AddPedDecorationFromHashes(ped: number, collection: number, overlay: number): void;
declare function ApplyPedOverlay(ped: number, collection: number, overlay: number): void;
declare function SetPedDecoration(ped: number, collection: number, overlay: number): void;
declare function AddPedDecorationFromHashesInCorona(ped: number, collection: number, overlay: number): void;
declare function N_0x5619bfa07cfd7833(ped: number, collection: number, overlay: number): void;
declare function SetPedFacialDecoration(ped: number, collection: number, overlay: number): void;
declare function AddPedToConversation(index: number, ped: number, p2: string): void;
declare function AddPetrolDecal(x: number, y: number, z: number, groundLvl: number, width: number, transparency: number): number;
declare function AddPetrolTrailDecalInfo(x: number, y: number, z: number, p3: number): void;
declare function N_0x967278682cb6967a(x: number, y: number, z: number, p3: number): void;
declare function AddPickupToInteriorRoomByName(pickup: number, roomName: string): void;
declare function AddPointToGpsCustomRoute(x: number, y: number, z: number): void;
declare function N_0x311438a071dd9b1a(x: number, y: number, z: number): void;
declare function AddPointToGpsMultiRoute(x: number, y: number, z: number): void;
declare function N_0xa905192a6781c41b(x: number, y: number, z: number): void;
declare function AddPoliceRestart(p0: number, p1: number, p2: number, p3: number, p4: number): number;
declare function AddPopMultiplierArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: number, p7: number, p8: boolean): number;
declare function N_0x67f6413d3220e18d(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: number, p7: number, p8: boolean): number;
declare function AddPopMultiplierSphere(x: number, y: number, z: number, radius: number, pedMultiplier: number, vehicleMultiplier: number, p6: boolean, p7: boolean): number;
declare function N_0x32c7a7e8c43a1f80(x: number, y: number, z: number, radius: number, pedMultiplier: number, vehicleMultiplier: number, p6: boolean, p7: boolean): number;
declare function AddRelationshipGroup(name: string, groupHash: number): LuaMultiReturn<[number, number]>;
declare function AddReplaceTexture(origTxd: string, origTxn: string, newTxd: string, newTxn: string): void;
declare function AddReplayStatValue(value: number): void;
declare function N_0x69fe6dc87bd2a5e9(value: number): void;
declare function AddRoadNodeSpeedZone(x: number, y: number, z: number, radius: number, speed: number, p5: boolean): number;
declare function N_0x2ce544c68fb812a0(x: number, y: number, z: number, radius: number, speed: number, p5: boolean): number;
declare function AddSpeedZoneForCoord(x: number, y: number, z: number, radius: number, speed: number, p5: boolean): number;
declare function AddRope(x: number, y: number, z: number, rotX: number, rotY: number, rotZ: number, maxLength: number, ropeType: number, initLength: number, minLength: number, lengthChangeRate: number, onlyPPU: boolean, collisionOn: boolean, lockFromFront: boolean, timeMultiplier: number, breakable: boolean, unkPtr: number): LuaMultiReturn<[number, number]>;
declare function AddScenarioBlockingArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: boolean, p7: boolean, p8: boolean, p9: boolean): number;
declare function AddScriptToRandomPed(name: string, model: number, p2: number, p3: number): void;
declare function AddShockingEventAtPosition(eventType: number, x: number, y: number, z: number, duration: number): number;
declare function AddShockingEventForEntity(eventType: number, entity: number, duration: number): number;
declare function AddStateBagChangeHandler(keyFilter: string, bagFilter: string, handler: any): number;
declare function AddStuntJump(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, x4: number, y4: number, z4: number, camX: number, camY: number, camZ: number, unk1: number, unk2: number, unk3: number): number;
declare function AddStuntJumpAngled(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius1: number, x3: number, y3: number, z3: number, x4: number, y4: number, z4: number, radius2: number, camX: number, camY: number, camZ: number, unk1: number, unk2: number, unk3: number): number;
declare function AddTacticalAnalysisPoint(x: number, y: number, z: number): void;
declare function N_0xb8721407ee9c3ff6(x: number, y: number, z: number): void;
declare function AddTcmodifierOverride(modifierName1: string, modifierName2: string): void;
declare function N_0x1a8e2c8b9cf4549c(modifierName1: string, modifierName2: string): void;
declare function AddTextComponentFloat(value: number, decimalPlaces: number): void;
declare function AddTextComponentFormattedInteger(value: number, commaSeparated: boolean): void;
declare function N_0x0e4c749ff9de9cc4(value: number, commaSeparated: boolean): void;
declare function AddTextComponentInteger(value: number): void;
declare function AddTextComponentSubstringBlipName(blip: number): void;
declare function N_0x80ead8e2e1d5d52e(blip: number): void;
declare function AddTextComponentSubstringKeyboardDisplay(_string: string): void;
declare function AddTextComponentString3(_string: string): void;
declare function AddTextComponentScaleform(_string: string): void;
declare function AddTextComponentSubstringPhoneNumber(p0: string, p1: number): void;
declare function N_0x761b77454205a61d(p0: string, p1: number): void;
declare function AddTextComponentAppTitle(p0: string, p1: number): void;
declare function AddTextComponentSubstringPlayerName(text: string): void;
declare function AddTextComponentString(text: string): void;
declare function AddTextComponentSubstringTextLabel(labelName: string): void;
declare function AddTextComponentItemString(labelName: string): void;
declare function AddTextComponentSubstringTextLabelHashKey(gxtEntryHash: number): void;
declare function N_0x17299b63c7683a2b(gxtEntryHash: number): void;
declare function AddTextComponentSubstringTime(timestamp: number, flags: number): void;
declare function AddTextComponentSubstringWebsite(website: string): void;
declare function AddTextComponentString2(website: string): void;
declare function AddTextEntry(entryKey: string, entryText: string): void;
declare function AddTextEntryByHash(entryKey: number, entryText: string): void;
declare function AddToClockTime(hours: number, minutes: number, seconds: number): void;
declare function AddToItemset(p0: number, p1: number): boolean;
declare function AddVehicleCombatAngledAvoidanceArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;
declare function N_0x54b0f614960f4a5f(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;
declare function AddVehicleCombatAvoidanceArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;
declare function AddVehicleCrewEmblem(vehicle: number, ped: number, boneIndex: number, x1: number, x2: number, x3: number, y1: number, y2: number, y3: number, z1: number, z2: number, z3: number, scale: number, p13: number, alpha: number): boolean;
declare function AddClanDecalToVehicle(vehicle: number, ped: number, boneIndex: number, x1: number, x2: number, x3: number, y1: number, y2: number, y3: number, z1: number, z2: number, z3: number, scale: number, p13: number, alpha: number): boolean;
declare function AddVehiclePhoneExplosiveDevice(vehicle: number): void;
declare function N_0x99ad4cccb128cbc9(vehicle: number): void;
declare function AddVehicleStuckCheckWithWarp(p0: number, p1: number, p2: number, p3: boolean, p4: boolean, p5: boolean, p6: number): void;
declare function AddVehicleSubtaskAttackCoord(ped: number, x: number, y: number, z: number): void;
declare function AddVehicleSubtaskAttackPed(ped: number, ped2: number): void;
declare function AddVehicleUpsidedownCheck(vehicle: number): void;
declare function AdvanceClockTimeTo(hour: number, minute: number, second: number): void;
declare function AllowAmbientVehiclesToAvoidAdverseConditions(vehicle: number): void;
declare function N_0xb264c4d2f2b0a78b(vehicle: number): void;
declare function AllowMissionCreatorWarp(toggle: boolean): void;
declare function N_0xdea36202fc3382df(toggle: boolean): void;
declare function AllowPauseMenuWhenDeadThisFrame(): void;
declare function N_0xcc3fdded67bcfc63(): void;
declare function AllowPlayerSwitchAscent(): void;
declare function N_0x8e2a065abdae6994(): void;
declare function AllowPlayerSwitchDescent(): void;
declare function N_0xad5fdf34b81bfe79(): void;
declare function AllowPlayerSwitchOutro(): void;
declare function N_0x74de2e8739086740(): void;
declare function AllowPlayerSwitchPan(): void;
declare function N_0x43d1680c6d19a8e9(): void;
declare function AllowSonarBlips(toggle: boolean): void;
declare function N_0x60734cc207c9833c(toggle: boolean): void;
declare function AnimateGameplayCamZoom(p0: number, distance: number): void;
declare function AnimatedShakeCam(cam: number, p1: string, p2: string, p3: string, amplitude: number): void;
declare function AnimatedShakeScriptGlobal(p0: string, p1: string, p2: string, p3: number): void;
declare function N_0xc2eae3fb8cdbed31(p0: string, p1: string, p2: string, p3: number): void;
declare function AnimpostfxGetUnk(effectName: string): number;
declare function N_0xe35b38a27e8e7179(effectName: string): number;
declare function AnimpostfxIsRunning(effectName: string): boolean;
declare function GetScreenEffectIsActive(effectName: string): boolean;
declare function AnimpostfxPlay(effectName: string, duration: number, looped: boolean): void;
declare function StartScreenEffect(effectName: string, duration: number, looped: boolean): void;
declare function AnimpostfxStop(effectName: string): void;
declare function StopScreenEffect(effectName: string): void;
declare function AnimpostfxStopAll(): void;
declare function StopAllScreenEffects(): void;
declare function AnimpostfxStopAndDoUnk(effectName: string): void;
declare function N_0xd2209be128b5418c(effectName: string): void;
declare function AppClearBlock(): void;
declare function AppCloseApp(): void;
declare function AppCloseBlock(): void;
declare function AppDataValid(): boolean;
declare function AppDeleteAppData(appName: string): boolean;
declare function AppGetDeletedFileStatus(): number;
declare function AppGetFloat(property: string): number;
declare function AppGetInt(property: string): number;
declare function AppGetString(property: string): string;
declare function AppHasLinkedSocialClubAccount(): boolean;
declare function AppHasSyncedData(appName: string): boolean;
declare function AppSaveData(): void;
declare function AppSetApp(appName: string): void;
declare function AppSetBlock(blockName: string): void;
declare function AppSetFloat(property: string, value: number): void;
declare function AppSetInt(property: string, value: number): void;
declare function AppSetString(property: string, value: string): void;
declare function ApplyDamageToPed(ped: number, damageAmount: number, armorFirst: boolean): void;
declare function ApplyForceToEntity(entity: number, forceType: number, x: number, y: number, z: number, offX: number, offY: number, offZ: number, boneIndex: number, isDirectionRel: boolean, ignoreUpVec: boolean, isForceRel: boolean, p12: boolean, p13: boolean): void;
declare function ApplyForceToEntityCenterOfMass(entity: number, forceType: number, x: number, y: number, z: number, p5: boolean, isDirectionRel: boolean, isForceRel: boolean, p8: boolean): void;
declare function ApplyImpulseToCloth(posX: number, posY: number, posZ: number, vecX: number, vecY: number, vecZ: number, impulse: number): void;
declare function ApplyPedBlood(ped: number, boneIndex: number, xRot: number, yRot: number, zRot: number, woundType: string): void;
declare function ApplyPedBloodByZone(ped: number, p1: number, p2: number, p3: number, p4: number): number;
declare function N_0x3311e47b91edcbbc(ped: number, p1: number, p2: number, p3: number, p4: number): number;
declare function ApplyPedBloodDamageByZone(ped: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x816f6981c60bf53b(ped: number, p1: number, p2: number, p3: number, p4: number): void;
declare function ApplyPedBloodSpecific(ped: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): number;
declare function N_0xef0d582cbf2d9b0f(ped: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): number;
declare function ApplyPedDamageDecal(ped: number, damageZone: number, xOffset: number, yOffset: number, heading: number, scale: number, alpha: number, variation: number, fadeIn: boolean, decalName: string): void;
declare function ApplyPedDamagePack(ped: number, damagePack: string, damage: number, mult: number): void;
declare function AreAllNavmeshRegionsLoaded(): boolean;
declare function AreAllVehicleWindowsIntact(vehicle: number): boolean;
declare function AreAnyVehicleSeatsFree(vehicle: number): boolean;
declare function IsAnyVehicleSeatEmpty(vehicle: number): boolean;
declare function AreBombBayDoorsOpen(aircraft: number): boolean;
declare function N_0xd0917a423314bba8(aircraft: number): boolean;
declare function GetAreBombBayDoorsOpen(aircraft: number): boolean;
declare function AreEntitiesEntirelyInsideGarage(garageHash: number, p1: boolean, p2: boolean, p3: boolean, p4: number): boolean;
declare function N_0x85b6c850546fdde2(garageHash: number, p1: boolean, p2: boolean, p3: boolean, p4: number): boolean;
declare function AreHeliStubWingsDeployed(vehicle: number): boolean;
declare function N_0xaef12960fa943792(vehicle: number): boolean;
declare function AreNodesLoadedForArea(x1: number, y1: number, x2: number, y2: number): boolean;
declare function N_0xf7b79a50b905a30d(x1: number, y1: number, x2: number, y2: number): boolean;
declare function ArePathNodesLoadedInArea(x1: number, y1: number, x2: number, y2: number): boolean;
declare function AreOutriggerLegsDeployed(vehicle: number): boolean;
declare function N_0x3a9128352eac9e85(vehicle: number): boolean;
declare function ArePlanePropellersIntact(plane: number): boolean;
declare function N_0x755d6d5267cbbd7e(plane: number): boolean;
declare function ArePropellersUndamaged(plane: number): boolean;
declare function ArePlaneWingsIntact(plane: number): boolean;
declare function N_0x5991a01434ce9677(plane: number): boolean;
declare function AddAMarkerOverVehicle(plane: number): boolean;
declare function AreVehicleWingsIntact(plane: number): boolean;
declare function ArePlayerFlashingStarsAboutToDrop(player: number): boolean;
declare function ArePlayerStarsGreyedOut(player: number): boolean;
declare function AreProfileSettingsValid(): boolean;
declare function N_0x5aa3befa29f03ad4(): boolean;
declare function AreStringsEqual(string1: string, string2: string): boolean;
declare function Asin(p0: number): number;
declare function AssistedMovementCloseRoute(): void;
declare function AssistedMovementFlushRoute(): void;
declare function AssistedMovementIsRouteLoaded(route: string): boolean;
declare function AssistedMovementOverrideLoadDistanceThisFrame(dist: number): void;
declare function AssistedMovementRemoveRoute(route: string): void;
declare function AssistedMovementRequestRoute(route: string): void;
declare function AssistedMovementSetRouteProperties(route: string, props: number): void;
declare function Atan(p0: number): number;
declare function Atan2(p0: number, p1: number): number;
declare function AttachCamToEntity(cam: number, entity: number, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
declare function AttachCamToPedBone(cam: number, ped: number, boneIndex: number, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
declare function AttachCamToPedBone_2(cam: number, ped: number, boneIndex: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: boolean): void;
declare function AttachCamToVehicleBone(cam: number, vehicle: number, boneIndex: number, relativeRotation: boolean, rotX: number, rotY: number, rotZ: number, offX: number, offY: number, offZ: number, fixedDirection: boolean): void;
declare function N_0x8db3f12a02caef72(cam: number, vehicle: number, boneIndex: number, relativeRotation: boolean, rotX: number, rotY: number, rotZ: number, offX: number, offY: number, offZ: number, fixedDirection: boolean): void;
declare function AttachContainerToHandlerFrame(handler: number, container: number): void;
declare function AttachEntitiesToRope(ropeId: number, ent1: number, ent2: number, ent1_x: number, ent1_y: number, ent1_z: number, ent2_x: number, ent2_y: number, ent2_z: number, length: number, p10: boolean, p11: boolean, boneName1: string, boneName2: string): void;
declare function AttachEntityBoneToEntityBone(entity1: number, entity2: number, entityBone: number, entityBone2: number, p4: boolean, p5: boolean): void;
declare function N_0x5c48b75732c8456c(entity1: number, entity2: number, entityBone: number, entityBone2: number, p4: boolean, p5: boolean): void;
declare function AttachEntityBoneToEntityBonePhysically(entity1: number, entity2: number, entityBone: number, entityBone2: number, p4: boolean, p5: boolean): void;
declare function N_0xfd1695c5d3b05439(entity1: number, entity2: number, entityBone: number, entityBone2: number, p4: boolean, p5: boolean): void;
declare function AttachEntityToCargobob(vehicle: number, entity: number, p2: number, x: number, y: number, z: number): void;
declare function N_0xa1dd82f3ccf9a01e(vehicle: number, entity: number, p2: number, x: number, y: number, z: number): void;
declare function AttachEntityToEntity(entity1: number, entity2: number, boneIndex: number, xPos: number, yPos: number, zPos: number, xRot: number, yRot: number, zRot: number, p9: boolean, useSoftPinning: boolean, collision: boolean, isPed: boolean, rotationOrder: number, syncRot: boolean): void;
declare function AttachEntityToEntityPhysically(entity1: number, entity2: number, boneIndex1: number, boneIndex2: number, xPos1: number, yPos1: number, zPos1: number, xPos2: number, yPos2: number, zPos2: number, xRot: number, yRot: number, zRot: number, breakForce: number, fixedRot: boolean, p15: boolean, collision: boolean, teleport: boolean, p18: number): void;
declare function AttachPortablePickupToPed(pickupObject: number, ped: number): void;
declare function AttachRopeToEntity(ropeId: number, entity: number, x: number, y: number, z: number, p5: boolean): void;
declare function AttachSynchronizedSceneToEntity(sceneID: number, entity: number, boneIndex: number): void;
declare function AttachTvAudioToEntity(entity: number): void;
declare function AttachVehicleOnToTrailer(vehicle: number, trailer: number, offsetX: number, offsetY: number, offsetZ: number, coordsX: number, coordsY: number, coordsZ: number, rotationX: number, rotationY: number, rotationZ: number, disableColls: number): void;
declare function N_0x16b5e274bde402f8(vehicle: number, trailer: number, offsetX: number, offsetY: number, offsetZ: number, coordsX: number, coordsY: number, coordsZ: number, rotationX: number, rotationY: number, rotationZ: number, disableColls: number): void;
declare function AttachVehicleToCargobob(cargobob: number, vehicle: number, vehicleBoneIndex: number, x: number, y: number, z: number): void;
declare function AttachVehicleToTowTruck(towTruck: number, vehicle: number, rear: boolean, hookOffsetX: number, hookOffsetY: number, hookOffsetZ: number): void;
declare function AttachVehicleToTrailer(vehicle: number, trailer: number, radius: number): void;
declare function AudioIsScriptedMusicPlaying(): boolean;
declare function N_0x3d120012440e6683(): boolean;
declare function BadSportPlayerLeftDetected(event: number, amountReceived: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xec5e3af5289dca81(event: number, amountReceived: number): LuaMultiReturn<[boolean, number]>;
declare function BeginReplayStats(p0: number, p1: number): void;
declare function BeginScaleformMovieMethod(scaleform: number, methodName: string): boolean;
declare function PushScaleformMovieFunction(scaleform: number, methodName: string): boolean;
declare function BeginScaleformMovieMethodOnFrontend(functionName: string): boolean;
declare function N_0xab58c27c2e6123c6(functionName: string): boolean;
declare function PushScaleformMovieFunctionN(functionName: string): boolean;
declare function BeginScaleformMovieMethodN(functionName: string): boolean;
declare function BeginScaleformMovieMethodOnFrontendHeader(functionName: string): boolean;
declare function N_0xb9449845f73f5e9c(functionName: string): boolean;
declare function BeginScaleformMovieMethodV(functionName: string): boolean;
declare function BeginScaleformScriptHudMovieMethod(hudComponent: number, methodName: string): boolean;
declare function PushScaleformMovieFunctionFromHudComponent(hudComponent: number, methodName: string): boolean;
declare function BeginScaleformMovieMethodHudComponent(hudComponent: number, methodName: string): boolean;
declare function BeginSrl(): void;
declare function BeginTakeHighQualityPhoto(): boolean;
declare function N_0xa67c35c56eb1bd9d(): boolean;
declare function BeginTakeMissionCreatorPhoto(): boolean;
declare function N_0x1dd2139a9a20dce8(): boolean;
declare function BeginTextCommandBusyspinnerOn(_string: string): void;
declare function N_0xaba17d7ce615adbf(_string: string): void;
declare function SetLoadingPromptTextEntry(_string: string): void;
declare function BeginTextCommandBusyString(_string: string): void;
declare function BeginTextCommandClearPrint(text: string): void;
declare function N_0xe124fa80a759019c(text: string): void;
declare function BeginTextCommandDisplayHelp(inputType: string): void;
declare function SetTextComponentFormat(inputType: string): void;
declare function BeginTextCommandDisplayText(text: string): void;
declare function SetTextEntry(text: string): void;
declare function BeginTextCommandGetWidth(text: string): void;
declare function SetTextEntryForWidth(text: string): void;
declare function BeginTextCommandWidth(text: string): void;
declare function BeginTextCommandIsMessageDisplayed(text: string): void;
declare function N_0x853648fd1063a213(text: string): void;
declare function BeginTextCommandIsThisHelpMessageBeingDisplayed(labelName: string): void;
declare function N_0x0a24da3a41b718f5(labelName: string): void;
declare function BeginTextCommandLineCount(entry: string): void;
declare function SetTextGxtEntry(entry: string): void;
declare function BeginTextCommandObjective(p0: string): void;
declare function N_0x23d69e0465570028(p0: string): void;
declare function BeginTextCommandOverrideButtonText(gxtEntry: string): void;
declare function N_0x8f9ee5687f8eeccd(gxtEntry: string): void;
declare function BeginTextCommandTimer(gxtEntry: string): void;
declare function BeginTextCommandPrint(GxtEntry: string): void;
declare function SetTextEntry_2(GxtEntry: string): void;
declare function BeginTextCommandScaleformString(textLabel: string): void;
declare function BeginTextComponent(textLabel: string): void;
declare function BeginTextCommandSetBlipName(textLabel: string): void;
declare function BeginTextCommandThefeedPost(text: string): void;
declare function SetNotificationTextEntry(text: string): void;
declare function BgEndContext(contextName: string): void;
declare function BgEndContextHash(contextHash: number): void;
declare function BgStartContext(contextName: string): void;
declare function BgStartContextHash(contextHash: number): void;
declare function BlipSiren(vehicle: number): void;
declare function BlockDeathJingle(toggle: boolean): void;
declare function N_0xf154b8d1775b2dec(toggle: boolean): void;
declare function BlockDecisionMakerEvent(name: number, eventType: number): void;
declare function BlockDispatchServiceResourceCreation(dispatchService: number, toggle: boolean): void;
declare function N_0x9b2bd3773123ea2f(dispatchService: number, toggle: boolean): void;
declare function BlockPedDeadBodyShockingEvents(ped: number, toggle: boolean): void;
declare function N_0xe43a13c9e4cccbcf(ped: number, toggle: boolean): void;
declare function BreakEntityGlass(entity: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: boolean): void;
declare function BreakObjectFragmentChild(p0: number, p1: number, p2: boolean): void;
declare function N_0xe7e4c198b0185900(p0: number, p1: number, p2: boolean): void;
declare function BreakOffVehicleWheel(vehicle: number, wheelIndex: number, leaveDebrisTrail: boolean, deleteWheel: boolean, unknownFlag: boolean, putOnFire: boolean): void;
declare function BringVehicleToHalt(vehicle: number, distance: number, duration: number, bControlVerticalVelocity: boolean): void;
declare function N_0x260be8f09e326a20(vehicle: number, distance: number, duration: number, bControlVerticalVelocity: boolean): void;
declare function SetVehicleHalt(vehicle: number, distance: number, duration: number, bControlVerticalVelocity: boolean): void;
declare function BusyspinnerIsDisplaying(): boolean;
declare function N_0xb2a592b04648a9cb(): boolean;
declare function BusyspinnerIsOn(): boolean;
declare function N_0xd422fcc5f239a915(): boolean;
declare function IsLoadingPromptBeingDisplayed(): boolean;
declare function BusyspinnerOff(): void;
declare function N_0x10d373323e5b9c0d(): void;
declare function RemoveLoadingPrompt(): void;
declare function CalculateTravelDistanceBetweenPoints(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
declare function CallMinimapScaleformFunction(miniMap: number, fnName: string): boolean;
declare function CallScaleformMovieMethod(scaleform: number, method: string): void;
declare function CallScaleformMovieFunctionVoid(scaleform: number, method: string): void;
declare function CallScaleformMovieMethodWithNumber(scaleform: number, methodName: string, param1: number, param2: number, param3: number, param4: number, param5: number): void;
declare function CallScaleformMovieFunctionFloatParams(scaleform: number, methodName: string, param1: number, param2: number, param3: number, param4: number, param5: number): void;
declare function CallScaleformMovieMethodWithNumberAndString(scaleform: number, methodName: string, floatParam1: number, floatParam2: number, floatParam3: number, floatParam4: number, floatParam5: number, stringParam1: string, stringParam2: string, stringParam3: string, stringParam4: string, stringParam5: string): void;
declare function CallScaleformMovieFunctionMixedParams(scaleform: number, methodName: string, floatParam1: number, floatParam2: number, floatParam3: number, floatParam4: number, floatParam5: number, stringParam1: string, stringParam2: string, stringParam3: string, stringParam4: string, stringParam5: string): void;
declare function CallScaleformMovieMethodWithString(scaleform: number, methodName: string, param1: string, param2: string, param3: string, param4: string, param5: string): void;
declare function CallScaleformMovieFunctionStringParams(scaleform: number, methodName: string, param1: string, param2: string, param3: string, param4: string, param5: string): void;
declare function CanAnchorBoatHere(vehicle: number): boolean;
declare function N_0x2467a2d807d37ca3(vehicle: number): boolean;
declare function GetBoatAnchor(vehicle: number): boolean;
declare function CanBoatBeAnchored(vehicle: number): boolean;
declare function CanAnchorBoatHere_2(vehicle: number): boolean;
declare function CanBoatBeAnchored_2(vehicle: number): boolean;
declare function CanCreateRandomBikeRider(): boolean;
declare function CanCreateRandomCops(): boolean;
declare function CanCreateRandomDriver(): boolean;
declare function CanCreateRandomPed(unk: boolean): boolean;
declare function CanKnockPedOffVehicle(ped: number): boolean;
declare function CanPayGoon(): boolean;
declare function N_0x9777734dad16992f(): boolean;
declare function CanPedHearPlayer(player: number, ped: number): boolean;
declare function CanPedInCombatSeeTarget(ped: number, target: number): boolean;
declare function CanPedRagdoll(ped: number): boolean;
declare function CanPedSeeHatedPed(ped1: number, ped2: number): boolean;
declare function N_0x6cd5a433374d4cfb(ped1: number, ped2: number): boolean;
declare function CanPedSeePed(ped1: number, ped2: number): boolean;
declare function CanPedSpeak(ped: number, speechName: string, unk: boolean): boolean;
declare function N_0x49b99bf3fda89a7a(ped: number, speechName: string, unk: boolean): boolean;
declare function CanPhoneBeSeenOnScreen(): boolean;
declare function CanPlayerStartMission(player: number): boolean;
declare function CanRegisterMissionEntities(ped_amt: number, vehicle_amt: number, object_amt: number, pickup_amt: number): boolean;
declare function CanRegisterMissionObjects(amount: number): boolean;
declare function CanRegisterMissionPeds(amount: number): boolean;
declare function CanRegisterMissionPickups(amount: number): boolean;
declare function CanRegisterMissionVehicles(amount: number): boolean;
declare function CanRequestAssetsForCutsceneEntity(): boolean;
declare function N_0xb56bbbcc2955d9cb(): boolean;
declare function CanSetEnterStateForRegisteredEntity(cutsceneEntName: string, modelHash: number): boolean;
declare function CanSetExitStateForCamera(p0: boolean): boolean;
declare function CanSetExitStateForRegisteredEntity(cutsceneEntName: string, modelHash: number): boolean;
declare function CanShuffleSeat(vehicle: number, seatIndex: number): boolean;
declare function CanUseWeaponOnParachute(weaponHash: number): boolean;
declare function CancelCurrentPoliceReport(): void;
declare function N_0xb4f90faf7670b16f(): void;
declare function DisablePoliceReports(): void;
declare function CancelEvent(): void;
declare function CancelMusicEvent(eventName: string): boolean;
declare function CancelOnscreenKeyboard(): void;
declare function N_0x58a39be597ce99cd(): void;
declare function CancelStuntJump(): void;
declare function CapInterior(interiorID: number, toggle: boolean): void;
declare function CascadeShadowsClearShadowSampleType(): void;
declare function N_0x27cb772218215325(): void;
declare function CascadeshadowsResetType(): void;
declare function CascadeShadowsEnableEntityTracker(toggle: boolean): void;
declare function SetFarShadowsSuppressed(toggle: boolean): void;
declare function CascadeShadowsInitSession(): void;
declare function N_0x03fc694ae06c5a20(): void;
declare function CascadeShadowsSetAircraftMode(p0: boolean): void;
declare function N_0x6ddbf9dffc4ac080(p0: boolean): void;
declare function CascadeShadowsSetCascadeBounds(p0: number, p1: boolean, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: number): void;
declare function N_0xd2936cab8b58fcbd(p0: number, p1: boolean, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: number): void;
declare function CascadeShadowsSetCascadeBoundsScale(p0: number): void;
declare function N_0x5f0f3f56635809ef(p0: number): void;
declare function CascadeShadowsSetDynamicDepthMode(p0: boolean): void;
declare function N_0xd39d13c9febf0511(p0: boolean): void;
declare function CascadeShadowsSetDynamicDepthValue(p0: number): void;
declare function N_0x02ac28f3a01fa04a(p0: number): void;
declare function CascadeShadowsSetEntityTrackerScale(p0: number): void;
declare function N_0x5e9daf5a20f15908(p0: number): void;
declare function CascadeShadowsSetShadowSampleType(_type: string): void;
declare function N_0xb11d94bc55f41932(_type: string): void;
declare function CascadeshadowsSetType(_type: string): void;
declare function Ceil(value: number): number;
declare function CellCamActivate(p0: boolean, p1: boolean): void;
declare function CellCamDisableThisFrame(toggle: boolean): void;
declare function N_0x015c49a93e3e086e(toggle: boolean): void;
declare function DisablePhoneThisFrame(toggle: boolean): void;
declare function CellCamIsCharVisibleNoFaceCheck(entity: number): boolean;
declare function CellCamMoveFinger(direction: number): void;
declare function MoveFinger(direction: number): void;
declare function CellCamSetDistance(p0: number): void;
declare function N_0x53f4892d18ec90a4(p0: number): void;
declare function CellCamSetHeadHeight(p0: number): void;
declare function N_0x466da42c89865553(p0: number): void;
declare function CellCamSetHeadPitch(p0: number): void;
declare function N_0xd6ade981781fca09(p0: number): void;
declare function CellCamSetHeadRoll(p0: number): void;
declare function N_0xf1e22dc13f5eebad(p0: number): void;
declare function CellCamSetHorizontalOffset(p0: number): void;
declare function N_0x1b0b4aeed5b9b41c(p0: number): void;
declare function CellCamSetLean(toggle: boolean): void;
declare function SetPhoneLean(toggle: boolean): void;
declare function CellCamSetRoll(p0: number): void;
declare function N_0x15e69e2802c24b8d(p0: number): void;
declare function CellCamSetVerticalOffset(p0: number): void;
declare function N_0x3117d84efa60f77b(p0: number): void;
declare function ChangeFakeMpCash(cash: number, bank: number): void;
declare function SetSingleplayerHudCash(cash: number, bank: number): void;
declare function SetPlayerCashChange(cash: number, bank: number): void;
declare function ChangePlayerPed(player: number, ped: number, b2: boolean, resetDamage: boolean): void;
declare function ClampGameplayCamPitch(minimum: number, maximum: number): void;
declare function ClampGameplayCamYaw(minimum: number, maximum: number): void;
declare function CleanItemset(p0: number): void;
declare function CleanupAsyncInstall(): void;
declare function N_0xc79ae21974b01fb2(): void;
declare function ClearAdditionalText(p0: number, p1: boolean): void;
declare function ClearAllBlipRoutes(): void;
declare function N_0xd12882d3ff82bf11(): void;
declare function ClearAllBrokenGlass(): void;
declare function ClearAllHelpMessages(): void;
declare function ClearAllPedProps(ped: number): void;
declare function ClearAllPedVehicleForcedSeatUsage(ped: number): void;
declare function N_0xe6ca85e7259ce16b(ped: number): void;
declare function ClearAmbientZoneListState(p1: boolean): number;
declare function ClearAmbientZoneState(zoneName: string, p1: boolean): void;
declare function ClearAngledAreaOfVehicles(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p7: boolean, p8: boolean, p9: boolean, p10: boolean, p11: boolean): void;
declare function ClearArea(X: number, Y: number, Z: number, radius: number, p4: boolean, ignoreCopCars: boolean, ignoreObjects: boolean, p7: boolean): void;
declare function ClearAreaLeaveVehicleHealth(x: number, y: number, z: number, radius: number, p4: boolean, p5: boolean, p6: boolean, p7: boolean): void;
declare function N_0x957838aaf91bd12d(x: number, y: number, z: number, radius: number, p4: boolean, p5: boolean, p6: boolean, p7: boolean): void;
declare function ClearAreaOfEverything(x: number, y: number, z: number, radius: number, p4: boolean, p5: boolean, p6: boolean, p7: boolean): void;
declare function ClearAreaOfCops(x: number, y: number, z: number, radius: number, createNetEvent: boolean): void;
declare function ClearAreaOfObjects(x: number, y: number, z: number, radius: number, flags: number): void;
declare function ClearAreaOfPeds(x: number, y: number, z: number, radius: number, createNetEvent: boolean): void;
declare function ClearAreaOfProjectiles(x: number, y: number, z: number, radius: number, createNetEvent: boolean): void;
declare function ClearAreaOfVehicles(x: number, y: number, z: number, radius: number, p4: boolean, p5: boolean, p6: boolean, p7: boolean, p8: boolean): void;
declare function ClearBit(offset: number): number;
declare function ClearBrief(): void;
declare function ClearCloudHat(): void;
declare function ClearCustomRadioTrackList(radioStation: string): void;
declare function N_0x1654f24a88a8e3fe(radioStation: string): void;
declare function ClearDecisionMakerEventResponse(name: number, eventType: number): void;
declare function ClearDrawOrigin(): void;
declare function ClearDrivebyTaskUnderneathDrivingTask(ped: number): void;
declare function ClearDynamicPauseMenuErrorMessage(): void;
declare function N_0x7792424aa0eac32e(): void;
declare function ClearEntityLastDamageEntity(entity: number): void;
declare function ClearEntityLastWeaponDamage(entity: number): void;
declare function ClearExtraTimecycleModifier(): void;
declare function N_0x92ccc17a7a2285da(): void;
declare function ClearFacialClipsetOverride(ped: number): void;
declare function N_0x637822dc2afeebf8(ped: number): void;
declare function ClearFacialIdleAnimOverride(ped: number): void;
declare function ClearFloatingHelp(hudIndex: number, p1: boolean): void;
declare function ClearFocus(): void;
declare function ClearGarageArea(garageHash: number, isNetwork: boolean): void;
declare function N_0xda05194260cdcdf9(garageHash: number, isNetwork: boolean): void;
declare function ClearGpsCustomRoute(): void;
declare function N_0xe6de0561d9232a64(): void;
declare function ClearGpsDisabledZoneAtIndex(index: number): void;
declare function N_0x2801d0012266df07(index: number): void;
declare function ClearGpsFlags(): void;
declare function ClearGpsMultiRoute(): void;
declare function N_0x67eedea1b9bafd94(): void;
declare function ClearGpsPlayerWaypoint(): void;
declare function ClearGpsRaceTrack(): void;
declare function ClearHdArea(): void;
declare function ClearHelp(toggle: boolean): void;
declare function ClearInteriorForEntity(entity: number): void;
declare function ClearLastDrivenVehicle(): void;
declare function N_0xe01903c47c7ac89e(): void;
declare function ClearLaunchParams(): void;
declare function N_0x966dd84fb6a46017(): void;
declare function ClearObjectsInsideGarage(garageHash: number, vehicles: boolean, peds: boolean, objects: boolean, isNetwork: boolean): void;
declare function N_0x190428512b240692(garageHash: number, vehicles: boolean, peds: boolean, objects: boolean, isNetwork: boolean): void;
declare function ClearOverrideWeather(): void;
declare function ClearPedAlternateMovementAnim(ped: number, stance: number, p2: number): void;
declare function ClearPedAlternateWalkAnim(ped: number, p1: number): void;
declare function ClearPedBloodDamage(ped: number): void;
declare function ClearPedBloodDamageByZone(ped: number, p1: number): void;
declare function N_0x56e3b78c5408d9f4(ped: number, p1: number): void;
declare function ClearPedCoverClipsetOverride(ped: number): void;
declare function N_0xc79196dcb36f6121(ped: number): void;
declare function ClearPedDamageDecalByZone(ped: number, p1: number, p2: string): void;
declare function N_0x523c79aeefcc4a2a(ped: number, p1: number, p2: string): void;
declare function ClearPedDecorations(ped: number): void;
declare function ClearPedDecorationsLeaveScars(ped: number): void;
declare function N_0xe3b27e70ceab9f0c(ped: number): void;
declare function ClearPedFacialDecorations(ped: number): void;
declare function ClearPedDriveByClipsetOverride(ped: number): void;
declare function ClearPedEnvDirt(ped: number): void;
declare function N_0x6585d955a68452a5(ped: number): void;
declare function ClearPedInPauseMenu(): void;
declare function ClearPedLastDamageBone(ped: number): void;
declare function ClearPedLastWeaponDamage(ped: number): void;
declare function ClearPedNonCreationArea(): void;
declare function ClearPedParachutePackVariation(ped: number): void;
declare function N_0x1280804f7cfd2d6c(ped: number): void;
declare function ClearPedProp(ped: number, propId: number): void;
declare function ClearPedScubaGearVariation(ped: number): void;
declare function N_0xb50eb4ccb29704ac(ped: number): void;
declare function RemovePedScubaGearNow(ped: number): void;
declare function ClearPedSecondaryTask(ped: number): void;
declare function ClearPedStoredHatProp(ped: number): void;
declare function N_0x687c0b594907d2e8(ped: number): void;
declare function ClearPedTasks(ped: number): void;
declare function ClearPedTasksImmediately(ped: number): void;
declare function ClearPedWetness(ped: number): void;
declare function ClearPlayerHasDamagedAtLeastOneNonAnimalPed(player: number): void;
declare function ClearPlayerHasDamagedAtLeastOnePed(player: number): void;
declare function ClearPlayerParachuteModelOverride(player: number): void;
declare function ClearPlayerParachutePackModelOverride(player: number): void;
declare function ClearPlayerParachuteVariationOverride(player: number): void;
declare function ClearPlayerReserveParachuteModelOverride(player: number): void;
declare function ClearPlayerWantedLevel(player: number): void;
declare function ClearPopscheduleOverrideVehicleModel(scheduleId: number): void;
declare function ClearPrints(): void;
declare function ClearRaceGalleryBlips(): void;
declare function N_0x2708fc083123f9ff(): void;
declare function ClearRagdollBlockingFlags(ped: number, flags: number): void;
declare function N_0xd86d101fcfd00a4b(ped: number, flags: number): void;
declare function ResetPedRagdollBlockingFlags(ped: number, flags: number): void;
declare function ClearRelationshipBetweenGroups(relationship: number, group1: number, group2: number): void;
declare function ClearReminderMessage(): void;
declare function N_0xb57d8dd645cfa2cf(): void;
declare function ClearReplayStats(): void;
declare function ClearRestartCustomPosition(): void;
declare function N_0xa2716d40842eaf79(): void;
declare function SetNextRespawnToCustom(): void;
declare function ClearRoomForEntity(entity: number): void;
declare function ClearRoomForGameViewport(): void;
declare function N_0x23b59d8912f94246(): void;
declare function ClearSequenceTask(taskSequenceId: number): void;
declare function ClearSmallPrints(): void;
declare function ClearTacticalAnalysisPoints(): void;
declare function N_0xb3cd58cca6cda852(): void;
declare function ClearThisPrint(p0: string): void;
declare function ClearTimecycleModifier(): void;
declare function ClearTvChannelPlaylist(tvChannel: number): void;
declare function N_0xbeb3d46bb7f043c0(tvChannel: number): void;
declare function ClearVehicleCustomPrimaryColour(vehicle: number): void;
declare function ClearVehicleCustomSecondaryColour(vehicle: number): void;
declare function ClearVehiclePhoneExplosiveDevice(): void;
declare function N_0xaa3f739abddcf21f(): void;
declare function ClearVehicleRouteHistory(vehicle: number): void;
declare function N_0x6d6af961b72728ae(vehicle: number): void;
declare function ClearVehicleTasks(vehicle: number): void;
declare function N_0xdbbc7a2432524127(vehicle: number): void;
declare function ClearVehicleXenonLightsCustomColor(vehicle: number): void;
declare function ClearWeatherTypeNowPersistNetwork(transitionTimeInMs: number): void;
declare function N_0x0cf97f497fe7d048(transitionTimeInMs: number): void;
declare function ClearWeatherTypePersist(): void;
declare function ClonePed(ped: number, isNetwork: boolean, bScriptHostPed: boolean, copyHeadBlendFlag: boolean): number;
declare function ClonePedEx(ped: number, heading: number, isNetwork: boolean, bScriptHostPed: boolean, p4: number): number;
declare function N_0x668fd40bcba5de48(ped: number, heading: number, isNetwork: boolean, bScriptHostPed: boolean, p4: number): number;
declare function ClonePed_2(ped: number, heading: number, isNetwork: boolean, bScriptHostPed: boolean, p4: number): number;
declare function ClonePedToTarget(ped: number, targetPed: number): void;
declare function AssignPlayerToPed(ped: number, targetPed: number): void;
declare function ClonePedToTargetEx(ped: number, targetPed: number, p2: number): void;
declare function N_0x148b08c2d2acb884(ped: number, targetPed: number, p2: number): void;
declare function CloneTimecycleModifier(sourceModifierName: string, clonedModifierName: string): number;
declare function CloseBombBayDoors(vehicle: number): void;
declare function N_0x3556041742a0dc74(vehicle: number): void;
declare function CloseMultiplayerChat(): void;
declare function AbortTextChat(): void;
declare function ClosePatrolRoute(): void;
declare function CloseSequenceTask(taskSequenceId: number): void;
declare function CloseSocialClubMenu(): void;
declare function N_0xd2b32be3fc1626c6(): void;
declare function CloudCheckAvailability(): void;
declare function N_0x4f18196c8d38768d(): void;
declare function DownloadCheck(): void;
declare function CloudDeleteMemberFile(p0: string): number;
declare function N_0xc64ded7ef0d2fe37(p0: string): number;
declare function CloudDidRequestSucceed(handle: number): boolean;
declare function N_0x3a3d5568af297cd5(handle: number): boolean;
declare function CloudGetAvailabilityCheckResult(): boolean;
declare function NetworkEnableMotionDrugged(): boolean;
declare function N_0x0b0cc10720653f3b(): boolean;
declare function CloudHasRequestCompleted(handle: number): boolean;
declare function N_0x4c61b39930d045da(handle: number): boolean;
declare function CloudIsCheckingAvailability(): boolean;
declare function N_0xc7abac5de675ee3b(): boolean;
declare function CommitRuntimeTexture(tex: number): void;
declare function CompareStrings(str1: string, str2: string, matchCase: boolean, maxLength: number): number;
declare function ControlLandingGear(vehicle: number, state: number): void;
declare function SetVehicleLandingGear(vehicle: number, state: number): void;
declare function ControlMountedWeapon(ped: number): boolean;
declare function ConvertPosixTime(posixTime: number, timeStructure: number): number;
declare function GetDateAndTimeFromUnixEpoch(posixTime: number, timeStructure: number): number;
declare function CopyMemory(src: number, size: number): number;
declare function N_0x213aeb2b90cba7ac(src: number, size: number): number;
declare function CopyVehicleDamages(sourceVehicle: number, targetVehicle: number): void;
declare function N_0xe44a982368a4af23(sourceVehicle: number, targetVehicle: number): void;
declare function Cos(value: number): number;
declare function CreateAirDefenseArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, weaponHash: number): number;
declare function N_0x9da58cdbf6bdbc08(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, weaponHash: number): number;
declare function CreateAirDefenseSphere(x: number, y: number, z: number, radius: number, p4: number, p5: number, p6: number, weaponHash: number): number;
declare function N_0x91ef34584710be99(x: number, y: number, z: number, radius: number, p4: number, p5: number, p6: number, weaponHash: number): number;
declare function CreateAmbientPickup(pickupHash: number, posX: number, posY: number, posZ: number, flags: number, value: number, modelHash: number, returnHandle: boolean, p8: boolean): number;
declare function CreateAudioSubmix(name: string): number;
declare function CreateCam(camName: string, active: boolean): number;
declare function CreateCamWithParams(camName: string, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, fov: number, active: boolean, rotationOrder: number): number;
declare function CreateCamera(camHash: number, active: boolean): number;
declare function CreateCameraWithParams(camHash: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, fov: number, active: boolean, rotationOrder: number): number;
declare function CreateCheckpoint(_type: number, posX1: number, posY1: number, posZ1: number, posX2: number, posY2: number, posZ2: number, diameter: number, red: number, green: number, blue: number, alpha: number, reserved: number): number;
declare function CreateCinematicShot(p0: number, p1: number, p2: number, entity: number): void;
declare function CreateDryVolume(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number): number;
declare function CreateDui(url: string, width: number, height: number): number;
declare function CreateFakeMpGamerTag(ped: number, username: string, crewIsPrivate: boolean, crewIsRockstar: boolean, crewName: string, crewRank: number): number;
declare function N_0xbfefe3321a3f5015(ped: number, username: string, crewIsPrivate: boolean, crewIsRockstar: boolean, crewName: string, crewRank: number): number;
declare function CreateMpGamerTag(ped: number, username: string, crewIsPrivate: boolean, crewIsRockstar: boolean, crewName: string, crewRank: number): number;
declare function CreateForcedObject(x: number, y: number, z: number, p3: number, modelHash: number, p5: boolean): void;
declare function CreateGroup(unused: number): number;
declare function CreateIncident(dispatchService: number, x: number, y: number, z: number, numUnits: number, radius: number, outIncidentID: number): LuaMultiReturn<[boolean, number]>;
declare function CreateIncidentWithEntity(dispatchService: number, ped: number, numUnits: number, radius: number, outIncidentID: number): LuaMultiReturn<[boolean, number]>;
declare function CreateItemset(distri: boolean): number;
declare function CreateMissionTrain(variation: number, x: number, y: number, z: number, direction: boolean): number;
declare function CreateMobilePhone(phoneType: number): void;
declare function CreateModelHide(x: number, y: number, z: number, radius: number, model: number, p5: boolean): void;
declare function CreateModelHideExcludingScriptObjects(x: number, y: number, z: number, radius: number, model: number, p5: boolean): void;
declare function CreateModelSwap(x: number, y: number, z: number, radius: number, originalModel: number, newModel: number, p6: boolean): void;
declare function CreateMoneyPickups(x: number, y: number, z: number, value: number, amount: number, model: number): void;
declare function CreateMpGamerTagWithCrewColor(player: number, username: string, crewIsPrivate: boolean, crewIsRockstar: boolean, crewName: string, crewRank: number, crewR: number, crewG: number, crewB: number): void;
declare function N_0x6dd05e9d83efa4c9(player: number, username: string, crewIsPrivate: boolean, crewIsRockstar: boolean, crewName: string, crewRank: number, crewR: number, crewG: number, crewB: number): void;
declare function CreateMpGamerTagColor(player: number, username: string, crewIsPrivate: boolean, crewIsRockstar: boolean, crewName: string, crewRank: number, crewR: number, crewG: number, crewB: number): void;
declare function SetMpGamerTagColor(player: number, username: string, crewIsPrivate: boolean, crewIsRockstar: boolean, crewName: string, crewRank: number, crewR: number, crewG: number, crewB: number): void;
declare function CreateMpGamerTagForNetPlayer(player: number, username: string, crewIsPrivate: boolean, crewIsRockstar: boolean, crewName: string, crewRank: number, crewR: number, crewG: number, crewB: number): void;
declare function CreateNewScriptedConversation(): void;
declare function CreateNmMessage(startImmediately: boolean, messageId: number): void;
declare function CreateNonNetworkedAmbientPickup(pickupHash: number, posX: number, posY: number, posZ: number, flags: number, value: number, modelHash: number, p7: boolean, p8: boolean): number;
declare function N_0x9c93764223e29c50(pickupHash: number, posX: number, posY: number, posZ: number, flags: number, value: number, modelHash: number, p7: boolean, p8: boolean): number;
declare function CreateNonNetworkedPortablePickup(pickupHash: number, x: number, y: number, z: number, placeOnGround: boolean, modelHash: number): number;
declare function N_0x125494b98a21aaf7(pickupHash: number, x: number, y: number, z: number, placeOnGround: boolean, modelHash: number): number;
declare function CreatePortablePickup_2(pickupHash: number, x: number, y: number, z: number, placeOnGround: boolean, modelHash: number): number;
declare function CreateObject(modelHash: number, x: number, y: number, z: number, isNetwork: boolean, netMissionEntity: boolean, doorFlag: boolean): number;
declare function CreateObjectNoOffset(modelHash: number, x: number, y: number, z: number, isNetwork: boolean, netMissionEntity: boolean, doorFlag: boolean): number;
declare function CreateParachuteBagObject(ped: number, p1: boolean, p2: boolean): number;
declare function N_0x8c4f3bf23b6237db(ped: number, p1: boolean, p2: boolean): number;
declare function CreateParachuteObject(ped: number, p1: boolean, p2: boolean): number;
declare function CreatePatrolRoute(): void;
declare function CreatePed(pedType: number, modelHash: number, x: number, y: number, z: number, heading: number, isNetwork: boolean, bScriptHostPed: boolean): number;
declare function CreatePedInsideVehicle(vehicle: number, pedType: number, modelHash: number, seat: number, isNetwork: boolean, bScriptHostPed: boolean): number;
declare function CreatePickUpRopeForCargobob(cargobob: number, state: number): void;
declare function EnableCargobobHook(cargobob: number, state: number): void;
declare function CreatePickup(pickupHash: number, posX: number, posY: number, posZ: number, p4: number, value: number, p6: boolean, modelHash: number): number;
declare function CreatePickupRotate(pickupHash: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, flag: number, amount: number, p9: number, p10: boolean, modelHash: number): number;
declare function CreatePortablePickup(pickupHash: number, x: number, y: number, z: number, placeOnGround: boolean, modelHash: number): number;
declare function CreateRandomPed(posX: number, posY: number, posZ: number): number;
declare function CreateRandomPedAsDriver(vehicle: number, returnHandle: boolean): number;
declare function CreateRuntimeTexture(txd: number, txn: string, width: number, height: number): number;
declare function CreateRuntimeTextureFromDuiHandle(txd: number, txn: string, duiHandle: string): number;
declare function CreateRuntimeTextureFromImage(txd: number, txn: string, fileName: string): number;
declare function CreateRuntimeTxd(name: string): number;
declare function CreateScriptVehicleGenerator(x: number, y: number, z: number, heading: number, p4: number, p5: number, modelHash: number, p7: number, p8: number, p9: number, p10: number, p11: boolean, p12: boolean, p13: boolean, p14: boolean, p15: boolean, p16: number): number;
declare function CreateSynchronizedScene(x: number, y: number, z: number, roll: number, pitch: number, yaw: number, p6: number): number;
declare function CreateSynchronizedScene_2(x: number, y: number, z: number, radius: number, object: number): number;
declare function N_0x62ec273d00187dca(x: number, y: number, z: number, radius: number, object: number): number;
declare function CreateTimecycleModifier(modifierName: string): number;
declare function CreateTrackedPoint(): number;
declare function CreateVehicle(modelHash: number, x: number, y: number, z: number, heading: number, isNetwork: boolean, netMissionEntity: boolean): number;
declare function CreateWeaponObject(weaponHash: number, ammoCount: number, x: number, y: number, z: number, showWorldModel: boolean, scale: number, p7: number): number;
declare function CustomMenuCoordinates(p0: number): void;
declare function N_0x487a82c650eb7799(p0: number): void;
declare function DataarrayAddBool(value: boolean): number;
declare function ArrayValueAddBoolean(value: boolean): number;
declare function DataarrayAddDict(arrayData: number): LuaMultiReturn<[number, number]>;
declare function ArrayValueAddObject(arrayData: number): LuaMultiReturn<[number, number]>;
declare function DataarrayAddFloat(value: number): number;
declare function ArrayValueAddFloat(value: number): number;
declare function DataarrayAddInt(value: number): number;
declare function ArrayValueAddInteger(value: number): number;
declare function DataarrayAddString(value: string): number;
declare function ArrayValueAddString(value: string): number;
declare function DataarrayAddVector(valueX: number, valueY: number, valueZ: number): number;
declare function ArrayValueAddVector3(valueX: number, valueY: number, valueZ: number): number;
declare function DataarrayGetBool(arrayIndex: number): LuaMultiReturn<[boolean, number]>;
declare function ArrayValueGetBoolean(arrayIndex: number): LuaMultiReturn<[boolean, number]>;
declare function DataarrayGetCount(arrayData: number): LuaMultiReturn<[number, number]>;
declare function ArrayValueGetSize(arrayData: number): LuaMultiReturn<[number, number]>;
declare function DataarrayGetDict(arrayIndex: number): LuaMultiReturn<[number, number]>;
declare function ArrayValueGetObject(arrayIndex: number): LuaMultiReturn<[number, number]>;
declare function DataarrayGetFloat(arrayIndex: number): LuaMultiReturn<[number, number]>;
declare function ArrayValueGetFloat(arrayIndex: number): LuaMultiReturn<[number, number]>;
declare function DataarrayGetInt(arrayIndex: number): LuaMultiReturn<[number, number]>;
declare function ArrayValueGetInteger(arrayIndex: number): LuaMultiReturn<[number, number]>;
declare function DataarrayGetString(arrayIndex: number): LuaMultiReturn<[string, number]>;
declare function ArrayValueGetString(arrayIndex: number): LuaMultiReturn<[string, number]>;
declare function DataarrayGetType(arrayIndex: number): LuaMultiReturn<[number, number]>;
declare function ArrayValueGetType(arrayIndex: number): LuaMultiReturn<[number, number]>;
declare function DataarrayGetVector(arrayIndex: number): LuaMultiReturn<[number, number]>;
declare function ArrayValueGetVector3(arrayIndex: number): LuaMultiReturn<[number, number]>;
declare function DatadictCreateArray(key: string): LuaMultiReturn<[number, number]>;
declare function ObjectValueAddArray(key: string): LuaMultiReturn<[number, number]>;
declare function DatadictCreateDict(key: string): LuaMultiReturn<[number, number]>;
declare function ObjectValueAddObject(key: string): LuaMultiReturn<[number, number]>;
declare function DatadictGetArray(key: string): LuaMultiReturn<[number, number]>;
declare function ObjectValueGetArray(key: string): LuaMultiReturn<[number, number]>;
declare function DatadictGetBool(key: string): LuaMultiReturn<[boolean, number]>;
declare function ObjectValueGetBoolean(key: string): LuaMultiReturn<[boolean, number]>;
declare function DatadictGetDict(key: string): LuaMultiReturn<[number, number]>;
declare function ObjectValueGetObject(key: string): LuaMultiReturn<[number, number]>;
declare function DatadictGetFloat(key: string): LuaMultiReturn<[number, number]>;
declare function ObjectValueGetFloat(key: string): LuaMultiReturn<[number, number]>;
declare function DatadictGetInt(key: string): LuaMultiReturn<[number, number]>;
declare function ObjectValueGetInteger(key: string): LuaMultiReturn<[number, number]>;
declare function DatadictGetString(key: string): LuaMultiReturn<[string, number]>;
declare function ObjectValueGetString(key: string): LuaMultiReturn<[string, number]>;
declare function DatadictGetType(key: string): LuaMultiReturn<[number, number]>;
declare function ObjectValueGetType(key: string): LuaMultiReturn<[number, number]>;
declare function DatadictGetVector(key: string): LuaMultiReturn<[number, number]>;
declare function ObjectValueGetVector3(key: string): LuaMultiReturn<[number, number]>;
declare function DatadictSetBool(key: string, value: boolean): number;
declare function ObjectValueAddBoolean(key: string, value: boolean): number;
declare function DatadictSetFloat(key: string, value: number): number;
declare function ObjectValueAddFloat(key: string, value: number): number;
declare function DatadictSetInt(key: string, value: number): number;
declare function ObjectValueAddInteger(key: string, value: number): number;
declare function DatadictSetString(key: string, value: string): number;
declare function ObjectValueAddString(key: string, value: string): number;
declare function DatadictSetVector(key: string, valueX: number, valueY: number, valueZ: number): number;
declare function ObjectValueAddVector3(key: string, valueX: number, valueY: number, valueZ: number): number;
declare function DatafileClearWatchList(): void;
declare function N_0x6cc86e78358d5119(): void;
declare function DatafileCreate(): void;
declare function DatafileDelete(): void;
declare function DatafileDeleteRequestedFile(p0: number): boolean;
declare function N_0x8f5ea1c01d65a100(p0: number): boolean;
declare function DatafileFlushMissionHeader(): void;
declare function N_0xc55854c7d7274882(): void;
declare function DatafileGetFileDict(): string;
declare function N_0x906b778ca1dc72b6(): string;
declare function DatafileHasLoadedFileData(p0: number): boolean;
declare function N_0x15ff52b809db2353(p0: number): boolean;
declare function DatafileHasValidFileData(p0: number): boolean;
declare function N_0xf8cc1ebe0b62e29f(p0: number): boolean;
declare function DatafileIsSavePending(): boolean;
declare function N_0xbedb96a7584aa8cf(): boolean;
declare function DatafileIsValidRequestId(index: number): boolean;
declare function N_0xfccae5b92a830878(index: number): boolean;
declare function DatafileLoadOfflineUgc(filename: string): boolean;
declare function LoadUgcFile(filename: string): boolean;
declare function DatafileSelectActiveFile(p0: number): boolean;
declare function N_0x22da66936e0fff37(p0: number): boolean;
declare function DatafileSelectCreatorStats(p0: number): boolean;
declare function N_0x01095c95cd46b624(p0: number): boolean;
declare function DatafileSelectUgcData(p0: number): boolean;
declare function N_0xa69ac4ade82b57a4(p0: number): boolean;
declare function DatafileSelectUgcPlayerData(p0: number): boolean;
declare function N_0x52818819057f2b40(p0: number): boolean;
declare function DatafileSelectUgcStats(p0: number, p1: boolean): boolean;
declare function N_0x9cb0bfa7a9342c3d(p0: number, p1: boolean): boolean;
declare function DatafileStartSaveToCloud(filename: string): boolean;
declare function N_0x83bcce3224735f05(filename: string): boolean;
declare function DatafileStoreMissionHeader(): void;
declare function N_0x2ed61456317b8178(): void;
declare function DatafileUpdateSaveToCloud(): LuaMultiReturn<[boolean, boolean]>;
declare function N_0x4dfdd9eb705f8140(): LuaMultiReturn<[boolean, boolean]>;
declare function DatafileWatchRequestId(id: number): void;
declare function N_0xad6875bbc0fc899c(id: number): void;
declare function DeactivateAudioSlowmoMode(p0: string): void;
declare function N_0xddc635d5b3262c56(p0: string): void;
declare function DeactivateInteriorEntitySet(interior: number, entitySetName: string): void;
declare function N_0x420bd37289eee162(interior: number, entitySetName: string): void;
declare function DisableInteriorProp(interior: number, entitySetName: string): void;
declare function DecorExistOn(entity: number, propertyName: string): boolean;
declare function DecorGetBool(entity: number, propertyName: string): boolean;
declare function DecorGetFloat(entity: number, propertyName: string): number;
declare function DecorGetInt(entity: number, propertyName: string): number;
declare function DecorIsRegisteredAsType(propertyName: string, _type: number): boolean;
declare function DecorRegister(propertyName: string, _type: number): void;
declare function DecorRegisterLock(): void;
declare function DecorRemove(entity: number, propertyName: string): boolean;
declare function DecorSetBool(entity: number, propertyName: string, value: boolean): boolean;
declare function DecorSetFloat(entity: number, propertyName: string, value: number): boolean;
declare function DecorSetInt(entity: number, propertyName: string, value: number): boolean;
declare function DecorSetTime(entity: number, propertyName: string, timestamp: number): boolean;
declare function DeleteAllTrains(): void;
declare function DeleteCheckpoint(checkpoint: number): void;
declare function DeleteChildRope(ropeId: number): void;
declare function DeleteEntity(entity: number): void;
declare function DeleteFunctionReference(referenceIdentity: string): void;
declare function DeleteIncident(incidentId: number): void;
declare function DeleteMissionTrain(train: number): void;
declare function DeleteObject(object: number): void;
declare function DeletePatrolRoute(patrolRoute: string): void;
declare function DeletePed(ped: number): void;
declare function DeleteResourceKvp(key: string): void;
declare function DeleteRope(ropeId: number): void;
declare function DeleteScriptVehicleGenerator(vehicleGenerator: number): void;
declare function DeleteStuntJump(p0: number): void;
declare function DeleteVehicle(vehicle: number): void;
declare function DeleteWaypoint(): void;
declare function N_0xd8e694757bcea8e9(): void;
declare function DepositVc(amount: number): boolean;
declare function N_0xe260e0bb9cd995ac(amount: number): boolean;
declare function DestroyAllCams(bScriptHostCam: boolean): void;
declare function DestroyCam(cam: number, bScriptHostCam: boolean): void;
declare function DestroyDui(duiObject: number): void;
declare function DestroyItemset(p0: number): void;
declare function DestroyMobilePhone(): void;
declare function DestroyTrackedPoint(point: number): void;
declare function DetachCam(cam: number): void;
declare function DetachContainerFromHandlerFrame(vehicle: number): void;
declare function N_0x7c0043fdff6436bc(vehicle: number): void;
declare function DetachEntity(entity: number, dynamic: boolean, collision: boolean): void;
declare function DetachEntityFromCargobob(vehicle: number, entity: number): number;
declare function N_0xaf03011701811146(vehicle: number, entity: number): number;
declare function DetachPortablePickupFromPed(pickupObject: number): void;
declare function DetachRopeFromEntity(ropeId: number, entity: number): void;
declare function DetachSynchronizedScene(sceneID: number): void;
declare function DetachVehicleFromAnyCargobob(vehicle: number): boolean;
declare function DetachVehicleFromAnyTowTruck(vehicle: number): boolean;
declare function DetachVehicleFromCargobob(cargobob: number, vehicle: number): void;
declare function DetachVehicleFromTowTruck(towTruck: number, vehicle: number): void;
declare function DetachVehicleFromTrailer(vehicle: number): void;
declare function DetonateVehiclePhoneExplosiveDevice(): void;
declare function N_0xef49cf0270307cbe(): void;
declare function RequestVehiclePhoneExplosion(): void;
declare function DisableAimCamThisUpdate(): void;
declare function N_0x1a31fe0049e542f6(): void;
declare function DisableAllControlActions(padIndex: number): void;
declare function DisableCamCollisionForEntity(entity: number): void;
declare function N_0x2aed6301f67007d5(entity: number): void;
declare function DisableCamCollisionForObject(entity: number): void;
declare function N_0x49482f9fcd825aaa(entity: number): void;
declare function DisableControlAction(padIndex: number, control: number, disable: boolean): void;
declare function DisableEditorRuntime(): void;
declare function DisableFirstPersonCamThisFrame(): void;
declare function DisableFrontendThisFrame(): void;
declare function DisableHeadBlendPaletteColor(ped: number): void;
declare function N_0xa21c118553bbdf02(ped: number): void;
declare function DisableHospitalRestart(hospitalIndex: number, toggle: boolean): void;
declare function DisableIdleCamera(state: boolean): void;
declare function DisableIndividualPlanePropeller(vehicle: number, propeller: number): void;
declare function N_0x500873a45724c863(vehicle: number, propeller: number): void;
declare function DisablePlanePropeller(vehicle: number, propeller: number): void;
declare function DisableInputGroup(padIndex: number): void;
declare function N_0x7f4724035fdca1dd(padIndex: number): void;
declare function DisableInterior(interiorID: number, toggle: boolean): void;
declare function DisableMultiplayerChat(disable: boolean): void;
declare function SetTextChatUnk(disable: boolean): void;
declare function DisableNavmeshInArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function DisableOcclusionThisFrame(): void;
declare function N_0x3669f1b198dcaa4f(): void;
declare function DisablePedHeatscaleOverride(ped: number): void;
declare function N_0x600048c60d5c2c51(ped: number): void;
declare function DisablePedPainAudio(ped: number, toggle: boolean): void;
declare function DisablePlaneAileron(vehicle: number, p1: boolean, p2: boolean): void;
declare function DisablePlayerFiring(player: number, toggle: boolean): void;
declare function DisablePlayerVehicleRewards(player: number): void;
declare function DisablePoliceRestart(policeIndex: number, toggle: boolean): void;
declare function DisableRockstarEditorCameraChanges(): void;
declare function N_0xaf66dcee6609b148(): void;
declare function DisableScreenblurFade(): void;
declare function N_0xde81239437e8c5a8(): void;
declare function PausedScreenblurLoaded(): void;
declare function DisableScriptAmbientEffects(p0: number): void;
declare function N_0xefd97ff47b745b8d(p0: number): void;
declare function DisableScriptBrainSet(brainSet: number): void;
declare function DisableStuntJumpSet(p0: number): void;
declare function DisableSwitchOutroFx(): void;
declare function N_0xbd605b8e0e18b3bb(): void;
declare function DisableVehicleDistantlights(toggle: boolean): void;
declare function DisableVehicleFirstPersonCamThisFrame(): void;
declare function DisableVehicleNeonLights(vehicle: number, toggle: boolean): void;
declare function N_0x83f813570ff519de(vehicle: number, toggle: boolean): void;
declare function DisableVehiclePassengerIdleCamera(state: boolean): void;
declare function DisableVehicleTurretMovementThisFrame(vehicle: number): void;
declare function N_0x32caedf24a583345(vehicle: number): void;
declare function DisableVehicleWeapon(disabled: boolean, weaponHash: number, vehicle: number, owner: number): void;
declare function DisableVehicleWorldCollision(vehicle: number): void;
declare function N_0x75627043c6aa90ad(vehicle: number): void;
declare function DisableWorldhorizonRendering(state: boolean): void;
declare function DisplayAmmoThisFrame(display: boolean): void;
declare function DisplayAreaName(toggle: boolean): void;
declare function DisplayCash(display: boolean): void;
declare function DisplayHelpTextThisFrame(message: string, p1: boolean): void;
declare function DisplayHud(toggle: boolean): void;
declare function DisplayHudWhenDeadThisFrame(): void;
declare function N_0x7669f9e39dc17063(): void;
declare function DisplayHudWhenPausedThisFrame(): void;
declare function N_0x402f9ed62087e898(): void;
declare function DisplayOnscreenKeyboard(p0: number, windowTitle: string, p2: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, maxInputLength: number): void;
declare function DisplayOnscreenKeyboardWithLongerInitialString(p0: number, windowTitle: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, defaultConcat4: string, defaultConcat5: string, defaultConcat6: string, defaultConcat7: string, maxInputLength: number): number;
declare function N_0xca78cfa0366592fe(p0: number, windowTitle: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, defaultConcat4: string, defaultConcat5: string, defaultConcat6: string, defaultConcat7: string, maxInputLength: number): number;
declare function DisplayOnscreenKeyboard_2(p0: number, windowTitle: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, defaultConcat4: string, defaultConcat5: string, defaultConcat6: string, defaultConcat7: string, maxInputLength: number): number;
declare function DisplayPlayerNameTagsOnBlips(toggle: boolean): void;
declare function N_0x82cedc33687e1f50(toggle: boolean): void;
declare function DisplayRadar(toggle: boolean): void;
declare function DisplaySniperScopeThisFrame(): void;
declare function DisplaySystemSigninUi(unk: boolean): void;
declare function DisposeSynchronizedScene(scene: number): void;
declare function N_0xcd9cc7e200a52a6f(scene: number): void;
declare function DistantCopCarSirens(value: boolean): void;
declare function N_0x552369f549563ad5(value: boolean): void;
declare function ForceAmbientSiren(value: boolean): void;
declare function DoAutoSave(): void;
declare function DoScreenFadeIn(duration: number): void;
declare function DoScreenFadeOut(duration: number): void;
declare function DoesAirDefenseZoneExist(zoneId: number): boolean;
declare function N_0xcd79a550999d7d4f(zoneId: number): boolean;
declare function DoesAnimDictExist(animDict: string): boolean;
declare function DoesBlipExist(blip: number): boolean;
declare function DoesBlipHaveGpsRoute(blip: number): boolean;
declare function N_0xdd2238f57b977751(blip: number): boolean;
declare function DoesCamExist(cam: number): boolean;
declare function DoesCargobobHavePickUpRope(cargobob: number): boolean;
declare function IsCargobobHookActive(cargobob: number): boolean;
declare function DoesCargobobHavePickupMagnet(cargobob: number): boolean;
declare function IsCargobobMagnetActive(cargobob: number): boolean;
declare function DoesCutsceneEntityExist(cutsceneEntName: string, modelHash: number): boolean;
declare function DoesEntityBelongToThisScript(entity: number, p2: boolean): boolean;
declare function DoesEntityExist(entity: number): boolean;
declare function DoesEntityHaveAnimDirector(entity: number): boolean;
declare function DoesEntityHaveDrawable(entity: number): boolean;
declare function DoesEntityHavePhysics(entity: number): boolean;
declare function DoesEntityHaveSkeletonData(entity: number): boolean;
declare function DoesExtraExist(vehicle: number, extraId: number): boolean;
declare function DoesGroupExist(groupId: number): boolean;
declare function DoesLatestBriefStringExist(briefValue: number): boolean;
declare function N_0x5e657ef1099edd65(briefValue: number): boolean;
declare function DoesNavmeshBlockingObjectExist(p0: number): boolean;
declare function N_0x0eaeb0db4b132399(p0: number): boolean;
declare function DoesObjectOfTypeExistAtCoords(x: number, y: number, z: number, radius: number, hash: number, p5: boolean): boolean;
declare function DoesParticleFxLoopedExist(ptfxHandle: number): boolean;
declare function DoesPedHaveAiBlip(ped: number): boolean;
declare function DoesPickupExist(pickup: number): boolean;
declare function DoesPickupObjectExist(pickupObject: number): boolean;
declare function DoesPickupOfTypeExistInArea(pickupHash: number, x: number, y: number, z: number, radius: number): boolean;
declare function IsPickupWithinRadius(pickupHash: number, x: number, y: number, z: number, radius: number): boolean;
declare function DoesPlayerVehHaveRadio(): boolean;
declare function N_0x109697e2ffbac8a1(): boolean;
declare function DoesPopMultiplierAreaExist(id: number): boolean;
declare function N_0x1327e2fe9746baee(id: number): boolean;
declare function DoesPopMultiplierSphereExist(id: number): boolean;
declare function N_0x171bafb3c60389f4(id: number): boolean;
declare function DoesRayfireMapObjectExist(object: number): boolean;
declare function N_0x52af537a0c5b8aad(object: number): boolean;
declare function DoesDesObjectExist(object: number): boolean;
declare function DoesRelationshipGroupExist(groupHash: number): boolean;
declare function N_0xcc6e3b6bb69501f1(groupHash: number): boolean;
declare function DoesRopeBelongToThisScript(ropeId: number): boolean;
declare function N_0x271c9d3aca5d6409(ropeId: number): boolean;
declare function DoesRopeExist(ropeId: number): LuaMultiReturn<[boolean, number]>;
declare function DoesScenarioBlockingAreaExist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
declare function N_0x8a24b067d175a7bd(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
declare function DoesScenarioExistInArea(x: number, y: number, z: number, radius: number, b: boolean): boolean;
declare function DoesScenarioGroupExist(scenarioGroup: string): boolean;
declare function DoesScenarioOfTypeExistInArea(p0: number, p1: number, p2: number, p3: string, p4: number, p5: boolean): boolean;
declare function DoesScriptExist(scriptName: string): boolean;
declare function DoesScriptVehicleGeneratorExist(vehicleGenerator: number): boolean;
declare function DoesScriptWithNameHashExist(scriptHash: number): boolean;
declare function N_0xf86aa3c56ba31381(scriptHash: number): boolean;
declare function DoesScriptedCoverPointExistAtCoords(x: number, y: number, z: number): boolean;
declare function DoesShopPedApparelHaveRestrictionTag(componentHash: number, restrictionTagHash: number, componentId: number): boolean;
declare function N_0x341de7ed1d2a1bfd(componentHash: number, restrictionTagHash: number, componentId: number): boolean;
declare function DoesTextBlockExist(gxt: string): boolean;
declare function DoesTextLabelExist(gxt: string): boolean;
declare function DoesTimecycleModifierHasVar(modifierName: string, varName: string): boolean;
declare function DoesVehicleAllowRappel(vehicle: number): boolean;
declare function N_0x4e417c547182c84d(vehicle: number): boolean;
declare function DoesVehicleExistWithDecorator(decorator: string): boolean;
declare function DoesVehicleHaveCrewEmblem(vehicle: number, p1: number): boolean;
declare function HasVehicleGotDecal(vehicle: number, p1: number): boolean;
declare function DoesVehicleHaveDecal(vehicle: number, p1: number): boolean;
declare function DoesVehicleHaveLandingGear(vehicle: number): boolean;
declare function N_0xe43701c36caff1a4(vehicle: number): boolean;
declare function GetVehicleHasLandingGear(vehicle: number): boolean;
declare function DoesVehicleHaveRoof(vehicle: number): boolean;
declare function DoesVehicleHaveSearchlight(vehicle: number): boolean;
declare function DoesVehicleHaveStuckVehicleCheck(vehicle: number): boolean;
declare function DoesVehicleHaveWeapons(vehicle: number): boolean;
declare function DoesVehicleTyreExist(vehicle: number, tyreIndex: number): boolean;
declare function N_0x534e36d4db9ecc5d(vehicle: number, tyreIndex: number): boolean;
declare function DoesWeaponTakeWeaponComponent(weaponHash: number, componentHash: number): boolean;
declare function DontRenderInGameUi(p0: boolean): void;
declare function N_0x22a249a53034450a(p0: boolean): void;
declare function DontTiltMinimapThisFrame(): void;
declare function CenterPlayerOnRadarThisFrame(): void;
declare function DoorControl(modelHash: number, x: number, y: number, z: number, locked: boolean, xRotMult: number, yRotMult: number, zRotMult: number): void;
declare function DoorSystemFindExistingDoor(x: number, y: number, z: number, modelHash: number, doorOutPointer: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x589f80b325cc82c5(x: number, y: number, z: number, modelHash: number, doorOutPointer: number): LuaMultiReturn<[boolean, number]>;
declare function DoorSystemGetActive(): any;
declare function DoorSystemGetAutomaticDistance(doorHash: number): number;
declare function DoorSystemGetDoorPendingState(doorHash: number): number;
declare function N_0x4bc2854478f3a749(doorHash: number): number;
declare function DoorSystemGetDoorState(doorHash: number): number;
declare function N_0x160aa1b32f6139b8(doorHash: number): number;
declare function DoorSystemGetIsPhysicsLoaded(doorHash: number): boolean;
declare function N_0xdf97cdd4fc08fd34(doorHash: number): boolean;
declare function DoorSystemGetOpenRatio(doorHash: number): number;
declare function N_0x65499865fca6e5ec(doorHash: number): number;
declare function DoorSystemGetSize(): number;
declare function DoorSystemSetAutomaticDistance(doorHash: number, distance: number, requestDoor: boolean, forceUpdate: boolean): void;
declare function N_0x9ba001cb45cbf627(doorHash: number, distance: number, requestDoor: boolean, forceUpdate: boolean): void;
declare function DoorSystemSetAutomaticRate(doorHash: number, rate: number, requestDoor: boolean, forceUpdate: boolean): void;
declare function N_0x03c27e13b42a0e82(doorHash: number, rate: number, requestDoor: boolean, forceUpdate: boolean): void;
declare function DoorSystemSetDoorState(doorHash: number, state: number, requestDoor: boolean, forceUpdate: boolean): void;
declare function N_0x6bab9442830c7f53(doorHash: number, state: number, requestDoor: boolean, forceUpdate: boolean): void;
declare function SetDoorAccelerationLimit(doorHash: number, state: number, requestDoor: boolean, forceUpdate: boolean): void;
declare function DoorSystemSetHoldOpen(doorHash: number, toggle: boolean): void;
declare function N_0xd9b71952f78a2640(doorHash: number, toggle: boolean): void;
declare function DoorSystemSetOpenRatio(doorHash: number, ajar: number, requestDoor: boolean, forceUpdate: boolean): void;
declare function N_0xb6e6fba95c7324ac(doorHash: number, ajar: number, requestDoor: boolean, forceUpdate: boolean): void;
declare function SetDoorAjarAngle(doorHash: number, ajar: number, requestDoor: boolean, forceUpdate: boolean): void;
declare function DoorSystemSetSpringRemoved(doorHash: number, removed: boolean, requestDoor: boolean, forceUpdate: boolean): void;
declare function N_0xc485e07e4f0b7958(doorHash: number, removed: boolean, requestDoor: boolean, forceUpdate: boolean): void;
declare function DrawBinkMovie(binkMovie: number, posX: number, posY: number, scaleX: number, scaleY: number, rotation: number, r: number, g: number, b: number, a: number): void;
declare function DrawBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawDebugBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r: number, g: number, b: number, a: number): void;
declare function DrawDebugCross(x: number, y: number, z: number, size: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawDebugLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r: number, g: number, b: number, a: number): void;
declare function DrawDebugLineWithTwoColours(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r1: number, g1: number, b1: number, r2: number, g2: number, b2: number, alpha1: number, alpha2: number): void;
declare function DrawDebugSphere(x: number, y: number, z: number, radius: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawDebugText(text: string, x: number, y: number, z: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawDebugText_2d(text: string, x: number, y: number, z: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawGizmo(matrixPtr: number, id: string): boolean;
declare function DrawGlowSphere(posX: number, posY: number, posZ: number, radius: number, colorR: number, colorG: number, colorB: number, intensity: number, invert: boolean, marker: boolean): void;
declare function DrawInteractiveSprite(textureDict: string, textureName: string, screenX: number, screenY: number, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
declare function N_0x2bc54a8188768488(textureDict: string, textureName: string, screenX: number, screenY: number, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawLightWithRange(posX: number, posY: number, posZ: number, colorR: number, colorG: number, colorB: number, range: number, intensity: number): void;
declare function DrawLightWithRangeAndShadow(x: number, y: number, z: number, r: number, g: number, b: number, range: number, intensity: number, shadow: number): void;
declare function DrawLightWithRangeWithShadow(x: number, y: number, z: number, r: number, g: number, b: number, range: number, intensity: number, shadow: number): void;
declare function DrawLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawLine_2d(x1: number, y1: number, x2: number, y2: number, width: number, r: number, g: number, b: number, a: number): void;
declare function DrawLowQualityPhotoToPhone(p0: boolean, p1: boolean): void;
declare function N_0x1072f115dab0717e(p0: boolean, p1: boolean): void;
declare function DrawMarker(_type: number, posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, rotX: number, rotY: number, rotZ: number, scaleX: number, scaleY: number, scaleZ: number, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, p19: number, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean): void;
declare function DrawMarker_2(_type: number, posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, rotX: number, rotY: number, rotZ: number, scaleX: number, scaleY: number, scaleZ: number, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, p19: number, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean, p24: boolean): void;
declare function N_0xe82728f0de75d13a(_type: number, posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, rotX: number, rotY: number, rotZ: number, scaleX: number, scaleY: number, scaleZ: number, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, p19: number, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean, p24: boolean): void;
declare function DrawPoly(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawRect(x: number, y: number, width: number, height: number, r: number, g: number, b: number, a: number): void;
declare function DrawRectRotated(x: number, y: number, width: number, height: number, rotation: number, r: number, g: number, b: number, a: number): void;
declare function DrawScaleformMovie(scaleformHandle: number, x: number, y: number, width: number, height: number, red: number, green: number, blue: number, alpha: number, unk: number): void;
declare function DrawScaleformMovieFullscreen(scaleform: number, red: number, green: number, blue: number, alpha: number, unk: number): void;
declare function DrawScaleformMovieFullscreenMasked(scaleform1: number, scaleform2: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawScaleformMovie_3d(scaleform: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, p7: number, sharpness: number, p9: number, scaleX: number, scaleY: number, scaleZ: number, p13: number): void;
declare function N_0x87d51d72255d4e78(scaleform: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, p7: number, sharpness: number, p9: number, scaleX: number, scaleY: number, scaleZ: number, p13: number): void;
declare function DrawScaleformMovie_3dSolid(scaleform: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, p7: number, p8: number, p9: number, scaleX: number, scaleY: number, scaleZ: number, p13: number): void;
declare function N_0x1ce592fdc749d6f5(scaleform: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, p7: number, p8: number, p9: number, scaleX: number, scaleY: number, scaleZ: number, p13: number): void;
declare function DrawScaleformMovie_3dNonAdditive(scaleform: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, p7: number, p8: number, p9: number, scaleX: number, scaleY: number, scaleZ: number, p13: number): void;
declare function DrawShowroom(p0: string, ped: number, p2: number, posX: number, posY: number, posZ: number): boolean;
declare function N_0x98c4fe6ec34154ca(p0: string, ped: number, p2: number, posX: number, posY: number, posZ: number): boolean;
declare function DrawSphere(x: number, y: number, z: number, radius: number, r: number, g: number, b: number, opacity: number): void;
declare function N_0x799017f9e3b10112(x: number, y: number, z: number, radius: number, r: number, g: number, b: number, opacity: number): void;
declare function DrawSpotLight(posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, colorR: number, colorG: number, colorB: number, distance: number, brightness: number, hardness: number, radius: number, falloff: number): void;
declare function DrawSpotLightWithShadow(posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, colorR: number, colorG: number, colorB: number, distance: number, brightness: number, roundness: number, radius: number, falloff: number, shadowId: number): void;
declare function DrawSprite(textureDict: string, textureName: string, screenX: number, screenY: number, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawSpritePoly(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;
declare function N_0x29280002282f1928(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;
declare function DrawSpritePoly_2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red1: number, green1: number, blue1: number, alpha1: number, red2: number, green2: number, blue2: number, alpha2: number, red3: number, green3: number, blue3: number, alpha3: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;
declare function N_0x736d7aa1b750856b(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red1: number, green1: number, blue1: number, alpha1: number, red2: number, green2: number, blue2: number, alpha2: number, red3: number, green3: number, blue3: number, alpha3: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;
declare function DrawSpriteUv(textureDict: string, textureName: string, x: number, y: number, width: number, height: number, u1: number, v1: number, u2: number, v2: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
declare function DrawTvChannel(xPos: number, yPos: number, xScale: number, yScale: number, rotation: number, red: number, green: number, blue: number, alpha: number): void;
declare function DropAmbientProp(ped: number): void;
declare function N_0xaff4710e2a0a6c12(ped: number): void;
declare function DuplicateFunctionReference(referenceIdentity: string): string;
declare function EjectJb700Roof(vehicle: number, x: number, y: number, z: number): void;
declare function N_0xe38cb9d7d39fdbcc(vehicle: number, x: number, y: number, z: number): void;
declare function EnableAircraftObstacleAvoidance(vehicle: number, avoidObstacles: boolean): void;
declare function N_0x8aa9180de2fedd45(vehicle: number, avoidObstacles: boolean): void;
declare function EnableAlienBloodVfx(toggle: boolean): void;
declare function N_0x9dce1f0f78260875(toggle: boolean): void;
declare function EnableAllControlActions(padIndex: number): void;
declare function EnableClownBloodVfx(toggle: boolean): void;
declare function SetCameraEndtime(toggle: boolean): void;
declare function EnableControlAction(padIndex: number, control: number, enable: boolean): void;
declare function EnableCrosshairThisFrame(): void;
declare function EnableDispatchService(dispatchService: number, toggle: boolean): void;
declare function N_0xdc0f817884cdd856(dispatchService: number, toggle: boolean): void;
declare function EnableEditorRuntime(): void;
declare function EnableEntityUnk(entity: number): void;
declare function N_0x6ce177d014502e8a(entity: number): void;
declare function EnableExteriorCullModelThisFrame(mapObjectHash: number): void;
declare function N_0xa97f257d0151a6ab(mapObjectHash: number): void;
declare function HideMapObjectThisFrame(mapObjectHash: number): void;
declare function EnableLaserSightRendering(toggle: boolean): void;
declare function EnableMovieKeyframeWait(toggle: boolean): void;
declare function N_0x74c180030fde4b69(toggle: boolean): void;
declare function EnableMovieSubtitles(toggle: boolean): void;
declare function EnableSavingInGarage(garageHash: number, toggle: boolean): void;
declare function N_0xf2e1a7133dd356a6(garageHash: number, toggle: boolean): void;
declare function EnableScriptBrainSet(brainSet: number): void;
declare function EnableScriptCullModelThisFrame(mapObjectHash: number): void;
declare function N_0x50c375537449f369(mapObjectHash: number): void;
declare function EnableSpecialAbility(player: number, toggle: boolean): void;
declare function EnableStallWarningSounds(vehicle: number, toggle: boolean): void;
declare function N_0xc15907d667f7cfb2(vehicle: number, toggle: boolean): void;
declare function EnableStuntJumpSet(p0: number): void;
declare function EnableSwitchPauseBeforeDescent(): void;
declare function N_0xd4793dff3af2abcd(): void;
declare function EnableTennisMode(ped: number, toggle: boolean, p2: boolean): void;
declare function EnableVehicleExhaustPops(vehicle: number, toggle: boolean): void;
declare function N_0x2be4bc731d039d5a(vehicle: number, toggle: boolean): void;
declare function EndFindKvp(handle: number): void;
declare function EndFindObject(findHandle: number): void;
declare function EndFindPed(findHandle: number): void;
declare function EndFindPickup(findHandle: number): void;
declare function EndFindVehicle(findHandle: number): void;
declare function EndPetrolTrailDecals(): void;
declare function N_0x0a123435a26c36cd(): void;
declare function EndReplayStats(): void;
declare function EndScaleformMovieMethod(): void;
declare function PopScaleformMovieFunctionVoid(): void;
declare function EndScaleformMovieMethodReturnValue(): number;
declare function PopScaleformMovieFunction(): number;
declare function EndScaleformMovieMethodReturn(): number;
declare function EndSrl(): void;
declare function EndTextCommandBusyspinnerOn(busySpinnerType: number): void;
declare function N_0xbd12f8228410d9b4(busySpinnerType: number): void;
declare function ShowLoadingPrompt(busySpinnerType: number): void;
declare function EndTextCommandBusyString(busySpinnerType: number): void;
declare function EndTextCommandClearPrint(): void;
declare function N_0xfcc75460aba29378(): void;
declare function EndTextCommandDisplayHelp(shape: number, loop: boolean, beep: boolean, duration: number): void;
declare function DisplayHelpTextFromStringLabel(shape: number, loop: boolean, beep: boolean, duration: number): void;
declare function EndTextCommandDisplayText(x: number, y: number): void;
declare function DrawText(x: number, y: number): void;
declare function EndTextCommandGetWidth(p0: boolean): number;
declare function GetTextScreenWidth(p0: boolean): number;
declare function EndTextCommandIsMessageDisplayed(): boolean;
declare function N_0x8a9ba1ab3e237613(): boolean;
declare function EndTextCommandIsThisHelpMessageBeingDisplayed(hudIndex: number): boolean;
declare function N_0x10bddbfc529428dd(hudIndex: number): boolean;
declare function EndTextCommandLineCount(x: number, y: number): number;
declare function N_0x9040dfb09be75706(x: number, y: number): number;
declare function GetTextScreenLineCount(x: number, y: number): number;
declare function EndTextCommandGetLineCount(x: number, y: number): number;
declare function EndTextCommandObjective(p0: boolean): void;
declare function N_0xcfdbdf5ae59ba0f4(p0: boolean): void;
declare function EndTextCommandOverrideButtonText(buttonIndex: number): void;
declare function N_0xa86911979638106f(buttonIndex: number): void;
declare function EndTextCommandTimer(buttonIndex: number): void;
declare function EndTextCommandPrint(duration: number, drawImmediately: boolean): void;
declare function DrawSubtitleTimed(duration: number, drawImmediately: boolean): void;
declare function EndTextCommandScaleformString(): void;
declare function EndTextComponent(): void;
declare function EndTextCommandScaleformString_2(): void;
declare function N_0xae4e8157d9ecf087(): void;
declare function EndTextCommandSetBlipName(blip: number): void;
declare function EndTextCommandThefeedPostAward(textureDict: string, textureName: string, rpBonus: number, colorOverlay: number, titleLabel: string): number;
declare function N_0xaa295b6f28bd587d(textureDict: string, textureName: string, rpBonus: number, colorOverlay: number, titleLabel: string): number;
declare function DrawNotificationIcon(textureDict: string, textureName: string, rpBonus: number, colorOverlay: number, titleLabel: string): number;
declare function DrawNotificationAward(textureDict: string, textureName: string, rpBonus: number, colorOverlay: number, titleLabel: string): number;
declare function EndTextCommandThefeedPostCrewRankup(chTitle: string, clanTxd: string, clanTxn: string, isImportant: boolean, showSubtitle: boolean): number;
declare function N_0x8efccf6ec66d85e4(chTitle: string, clanTxd: string, clanTxn: string, isImportant: boolean, showSubtitle: boolean): number;
declare function EndTextCommandThefeedPostCrewtag(crewTypeIsPrivate: boolean, crewTagContainsRockstar: boolean, rank: number, hasFounderStatus: boolean, isImportant: boolean, clanHandle: number, r: number, g: number, b: number): LuaMultiReturn<[number, number]>;
declare function N_0x97c9e4e7024a8f2c(crewTypeIsPrivate: boolean, crewTagContainsRockstar: boolean, rank: number, hasFounderStatus: boolean, isImportant: boolean, clanHandle: number, r: number, g: number, b: number): LuaMultiReturn<[number, number]>;
declare function NotificationSendApartmentInvite(crewTypeIsPrivate: boolean, crewTagContainsRockstar: boolean, rank: number, hasFounderStatus: boolean, isImportant: boolean, clanHandle: number, r: number, g: number, b: number): LuaMultiReturn<[number, number]>;
declare function DrawNotificationApartmentInvite(crewTypeIsPrivate: boolean, crewTagContainsRockstar: boolean, rank: number, hasFounderStatus: boolean, isImportant: boolean, clanHandle: number, r: number, g: number, b: number): LuaMultiReturn<[number, number]>;
declare function EndTextCommandThefeedPostCrewtagWithGameName(crewTypeIsPrivate: boolean, crewTagContainsRockstar: boolean, rank: number, isLeader: boolean, isImportant: boolean, clanHandle: number, gamerStr: string, r: number, g: number, b: number): LuaMultiReturn<[number, number]>;
declare function N_0x137bc35589e34e1e(crewTypeIsPrivate: boolean, crewTagContainsRockstar: boolean, rank: number, isLeader: boolean, isImportant: boolean, clanHandle: number, gamerStr: string, r: number, g: number, b: number): LuaMultiReturn<[number, number]>;
declare function NotificationSendClanInvite(crewTypeIsPrivate: boolean, crewTagContainsRockstar: boolean, rank: number, isLeader: boolean, isImportant: boolean, clanHandle: number, gamerStr: string, r: number, g: number, b: number): LuaMultiReturn<[number, number]>;
declare function DrawNotificationClanInvite(crewTypeIsPrivate: boolean, crewTagContainsRockstar: boolean, rank: number, isLeader: boolean, isImportant: boolean, clanHandle: number, gamerStr: string, r: number, g: number, b: number): LuaMultiReturn<[number, number]>;
declare function EndTextCommandThefeedPostMessagetext(textureDict: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
declare function SetNotificationMessage(textureDict: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
declare function EndTextCommandThefeedPostMessagetextGxtEntry(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
declare function N_0xc6f580e4c94926ac(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
declare function SetNotificationMessage_3(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
declare function EndTextCommandThefeedPostMessagetextEntry(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
declare function EndTextCommandThefeedPostMessagetextTu(picTxd: string, picTxn: string, flash: boolean, iconType: number, nameStr: string, subtitleStr: string, durationMultiplier: number): number;
declare function N_0x1e6611149db3db6b(picTxd: string, picTxn: string, flash: boolean, iconType: number, nameStr: string, subtitleStr: string, durationMultiplier: number): number;
declare function SetNotificationMessage_4(picTxd: string, picTxn: string, flash: boolean, iconType: number, nameStr: string, subtitleStr: string, durationMultiplier: number): number;
declare function EndTextCommandThefeedPostMessagetextWithCrewTag(picTxd: string, picTxn: string, flash: boolean, iconType: number, nameStr: string, subtitleStr: string, duration: number, crewPackedStr: string): number;
declare function SetNotificationMessageClanTag(picTxd: string, picTxn: string, flash: boolean, iconType: number, nameStr: string, subtitleStr: string, duration: number, crewPackedStr: string): number;
declare function EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(picTxd: string, picTxn: string, flash: boolean, iconType1: number, nameStr: string, subtitleStr: string, duration: number, crewPackedStr: string, iconType2: number, textColor: number): number;
declare function SetNotificationMessageClanTag_2(picTxd: string, picTxn: string, flash: boolean, iconType1: number, nameStr: string, subtitleStr: string, duration: number, crewPackedStr: string, iconType2: number, textColor: number): number;
declare function EndTextCommandThefeedPostMpticker(blink: boolean, bHasTokens: boolean): number;
declare function DrawNotification_4(blink: boolean, bHasTokens: boolean): number;
declare function EndTextCommandThefeedPostReplayIcon(eType: number, iIcon: number, sTitle: string): number;
declare function N_0xd202b92cbf1d816f(eType: number, iIcon: number, sTitle: string): number;
declare function DrawNotificationWithIcon(eType: number, iIcon: number, sTitle: string): number;
declare function EndTextCommandThefeedPostReplayInput(_type: number, button: string, text: string): number;
declare function N_0xdd6cb2cce7c2735c(_type: number, button: string, text: string): number;
declare function DrawNotificationWithButton(_type: number, button: string, text: string): number;
declare function EndTextCommandThefeedPostStats(statTitle: string, iconEnum: number, stepVal: boolean, barValue: number, isImportant: boolean, picTxd: string, picTxn: string): number;
declare function N_0x2b7e9a4eaaa93c89(statTitle: string, iconEnum: number, stepVal: boolean, barValue: number, isImportant: boolean, picTxd: string, picTxn: string): number;
declare function SetNotificationMessage_2(statTitle: string, iconEnum: number, stepVal: boolean, barValue: number, isImportant: boolean, picTxd: string, picTxn: string): number;
declare function EndTextCommandThefeedPostTicker(isImportant: boolean, bHasTokens: boolean): number;
declare function DrawNotification(isImportant: boolean, bHasTokens: boolean): number;
declare function EndTextCommandThefeedPostTickerForced(blink: boolean, bHasTokens: boolean): number;
declare function DrawNotification_2(blink: boolean, bHasTokens: boolean): number;
declare function EndTextCommandThefeedPostTickerWithTokens(isImportant: boolean, bHasTokens: boolean): number;
declare function DrawNotification_3(isImportant: boolean, bHasTokens: boolean): number;
declare function EndTextCommandThefeedPostUnlock(chTitle: string, iconType: number, chSubtitle: string): number;
declare function N_0x33ee12743ccd6343(chTitle: string, iconType: number, chSubtitle: string): number;
declare function EndTextCommandThefeedPostUnlockTu(chTitle: string, iconType: number, chSubtitle: string, isImportant: boolean): number;
declare function N_0xc8f3aaf93d0600bf(chTitle: string, iconType: number, chSubtitle: string, isImportant: boolean): number;
declare function EndTextCommandThefeedPostUnlockTuWithColor(chTitle: string, iconType: number, chSubtitle: string, isImportant: boolean, titleColor: number, p5: boolean): number;
declare function N_0x7ae0589093a2e088(chTitle: string, iconType: number, chSubtitle: string, isImportant: boolean, titleColor: number, p5: boolean): number;
declare function EndTextCommandThefeedPostVersusTu(ch1TXD: string, ch1TXN: string, val1: number, ch2TXD: string, ch2TXN: string, val2: number): number;
declare function N_0xb6871b0555b02996(ch1TXD: string, ch1TXN: string, val1: number, ch2TXD: string, ch2TXN: string, val2: number): number;
declare function EnsureEntityStateBag(entity: number): void;
declare function EnterCursorMode(): void;
declare function ExecuteCommand(commandString: string): void;
declare function ExperimentalLoadCloneCreate(data: string, objectId: number, tree: string): number;
declare function ExperimentalLoadCloneSync(entity: number, data: string): void;
declare function ExperimentalSaveCloneCreate(entity: number): string;
declare function ExperimentalSaveCloneSync(entity: number): string;
declare function ExplodePedHead(ped: number, weaponHash: number): void;
declare function ExplodeProjectiles(ped: number, weaponHash: number, p2: boolean): void;
declare function ExplodeVehicle(vehicle: number, isAudible: boolean, isInvisible: boolean): void;
declare function ExplodeVehicleInCutscene(vehicle: number, p1: boolean): void;
declare function ExtendWorldBoundaryForPlayer(x: number, y: number, z: number): void;
declare function N_0x5006d96c995a5827(x: number, y: number, z: number): void;
declare function ExpandWorldLimits(x: number, y: number, z: number): void;
declare function FacebookDoUnkCheck(): boolean;
declare function N_0xa75e2b6733da5142(): boolean;
declare function FacebookIsAvailable(): boolean;
declare function N_0x43865688ae10f0d7(): boolean;
declare function FacebookIsSendingData(): boolean;
declare function N_0x62b9fec9a11f10ef(): boolean;
declare function FacebookSetCreateCharacterComplete(): boolean;
declare function N_0xdc48473142545431(): boolean;
declare function FacebookSetHeistComplete(heistName: string, cashEarned: number, xpEarned: number): boolean;
declare function N_0x098ab65b9ed9a9ec(heistName: string, cashEarned: number, xpEarned: number): boolean;
declare function FacebookSetMilestoneComplete(milestoneId: number): boolean;
declare function N_0x0ae1f1653b554ab9(milestoneId: number): boolean;
declare function FadeDecalsInRange(x: number, y: number, z: number, radius: number, duration: number): void;
declare function FadeOutLocalPlayer(p0: boolean): void;
declare function FadeUpPedLight(p0: number): void;
declare function N_0xc9b18b4619f48f7b(p0: number): void;
declare function FilloutPmPlayerList(p1: number, p2: number): LuaMultiReturn<[boolean, number]>;
declare function FilloutPmPlayerListWithNames(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
declare function FinalizeHeadBlend(ped: number): void;
declare function N_0x4668d80430d6c299(ped: number): void;
declare function FindAnimEventPhase(animDictionary: string, animName: string, p2: string): LuaMultiReturn<[boolean, number, number]>;
declare function FindFirstObject(outEntity: number): LuaMultiReturn<[number, number]>;
declare function FindFirstPed(outEntity: number): LuaMultiReturn<[number, number]>;
declare function FindFirstPickup(outEntity: number): LuaMultiReturn<[number, number]>;
declare function FindFirstVehicle(outEntity: number): LuaMultiReturn<[number, number]>;
declare function FindKvp(handle: number): string;
declare function FindNextObject(findHandle: number, outEntity: number): LuaMultiReturn<[boolean, number]>;
declare function FindNextPed(findHandle: number, outEntity: number): LuaMultiReturn<[boolean, number]>;
declare function FindNextPickup(findHandle: number, outEntity: number): LuaMultiReturn<[boolean, number]>;
declare function FindNextVehicle(findHandle: number, outEntity: number): LuaMultiReturn<[boolean, number]>;
declare function FindRadioStationIndex(stationNameHash: number): number;
declare function FindRandomPointInSpace(ped: number): Vector3;
declare function N_0x8dc9675797123522(ped: number): Vector3;
declare function FindSpawnPointInDirection(posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, distance: number): LuaMultiReturn<[boolean, Vector3]>;
declare function FindVehicleCarryingThisEntity(entity: number): number;
declare function N_0x375e7fc44f21c8ab(entity: number): number;
declare function GetVehicleAttachedToEntity(entity: number): number;
declare function FireAirDefenseWeapon(zoneId: number, x: number, y: number, z: number): void;
declare function N_0x44f1012b69313374(zoneId: number, x: number, y: number, z: number): void;
declare function FixObjectFragment(object: number): void;
declare function N_0xf9c1681347c8bd15(object: number): void;
declare function FixVehicleWindow(vehicle: number, windowIndex: number): void;
declare function FlagPlayerContextInTournament(toggle: boolean): void;
declare function N_0xcef214315d276fd1(toggle: boolean): void;
declare function SetIsInTournament(toggle: boolean): void;
declare function FlashAbilityBar(millisecondsToFlash: number): void;
declare function FlashMinimapDisplay(): void;
declare function FlashMinimapDisplayWithColor(hudColorIndex: number): void;
declare function N_0x6b1de27ee78e6a19(hudColorIndex: number): void;
declare function FlashWantedDisplay(p0: boolean): void;
declare function Floor(value: number): number;
declare function ForceCinematicRenderingThisUpdate(p0: boolean): void;
declare function N_0xa41bcd7213805aac(p0: boolean): void;
declare function ForceCleanup(cleanupFlags: number): void;
declare function ForceCleanupForAllThreadsWithThisName(name: string, cleanupFlags: number): void;
declare function ForceCleanupForThreadWithThisId(id: number, cleanupFlags: number): void;
declare function ForceCloseReportugcMenu(): void;
declare function N_0xee4c0e6dbc6f2c6f(): void;
declare function ForceCloseTextInputBox(): void;
declare function N_0x8817605c2ba76200(): void;
declare function ForceEntityAiAndAnimationUpdate(entity: number): void;
declare function ForceGameStatePlaying(): void;
declare function ResetLocalplayerState(): void;
declare function ForceLightningFlash(): void;
declare function CreateLightningThunder(): void;
declare function ForcePedAiAndAnimationUpdate(ped: number, p1: boolean, p2: boolean): void;
declare function N_0x2208438012482a1a(ped: number, p1: boolean, p2: boolean): void;
declare function ForcePedMotionState(ped: number, motionStateHash: number, p2: boolean, p3: number, p4: boolean): boolean;
declare function ForcePedToOpenParachute(ped: number): void;
declare function ForcePickupRegenerate(p0: number): void;
declare function N_0x758a5c1b3b1e1990(p0: number): void;
declare function ForcePlaybackRecordedVehicleUpdate(vehicle: number, p1: boolean): void;
declare function N_0x1f2e4e06dea8992b(vehicle: number, p1: boolean): void;
declare function ForceRadioTrackListPosition(radioStation: string, trackListName: string, milliseconds: number): void;
declare function N_0x4e0af9114608257c(radioStation: string, trackListName: string, milliseconds: number): void;
declare function ForceRenderInGameUi(toggle: boolean): void;
declare function N_0xdc459cfa0cce245b(toggle: boolean): void;
declare function ForceRoomForEntity(entity: number, interior: number, roomHashKey: number): void;
declare function ForceRoomForGameViewport(interiorID: number, roomHashKey: number): void;
declare function N_0x920d853f3e17f1da(interiorID: number, roomHashKey: number): void;
declare function ForceSnowPass(enabled: boolean): void;
declare function ForceSocialClubUpdate(): void;
declare function ForceSonarBlipsThisFrame(): number;
declare function N_0x1121bfa1a1a522a8(): number;
declare function ForceSubmarineSurfaceMode(vehicle: number, toggle: boolean): void;
declare function N_0x33506883545ac0df(vehicle: number, toggle: boolean): void;
declare function ForceVehicleEngineAudio(vehicle: number, audioName: string): void;
declare function N_0x4f0c413926060b38(vehicle: number, audioName: string): void;
declare function SetVehicleAudio(vehicle: number, audioName: string): void;
declare function FreeMemoryForHighQualityPhoto(): void;
declare function N_0xd801cc02177fa3f1(): void;
declare function FreeMemoryForLowQualityPhoto(): void;
declare function N_0x6a12d88881435dca(): void;
declare function FreeMemoryForMissionCreatorPhoto(): void;
declare function N_0x0a46af8a78dc5e0a(): void;
declare function FreezeEntityPosition(entity: number, toggle: boolean): void;
declare function FreezeMicrophone(): void;
declare function N_0xd57aaae0e2214d11(): void;
declare function FreezePedCameraRotation(ped: number): void;
declare function N_0xff287323b0e2c69a(ped: number): void;
declare function FreezeRadioStation(radioStation: string): void;
declare function GenerateDirectionsToCoord(x: number, y: number, z: number, p3: boolean): LuaMultiReturn<[number, number, number, number]>;
declare function GetAchievementProgress(achievement: number): number;
declare function N_0x1c186837d0619335(achievement: number): number;
declare function GetAchievementProgression(achievement: number): number;
declare function GetActivePlayers(): any;
declare function GetActiveScreenResolution(): LuaMultiReturn<[number, number]>;
declare function GetScreenActiveResolution(): LuaMultiReturn<[number, number]>;
declare function GetActiveVehicleMissionType(vehicle: number): number;
declare function GetAiBlip(ped: number): number;
declare function N_0x56176892826a4fe8(ped: number): number;
declare function GetAiBlip_2(ped: number): number;
declare function N_0x7cd934010e115c2c(ped: number): number;
declare function GetAllRopes(): any;
declare function GetAllVehicleModels(): any;
declare function GetAllVehicles(vehArray: number): LuaMultiReturn<[number, number]>;
declare function GetAllocatedStackSize(): number;
declare function GetAllowMovementWhileZoomed(): boolean;
declare function N_0xfc859e2374407556(): boolean;
declare function GetAmbientPedRangeMultiplier(): number;
declare function GetAmbientVehicleRangeMultiplier(): number;
declare function GetAmbientVoiceNameHash(ped: number): number;
declare function N_0x5e203da2ba15d436(ped: number): number;
declare function GetAmmoInClip(ped: number, weaponHash: number, ammo: number): LuaMultiReturn<[boolean, number]>;
declare function GetAmmoInPedWeapon(ped: number, weaponhash: number): number;
declare function GetAngleBetween_2dVectors(x1: number, y1: number, x2: number, y2: number): number;
declare function GetAnimDuration(animDict: string, animName: string): number;
declare function GetAnimInitialOffsetPosition(animDict: string, animName: string, x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, p8: number, p9: number): Vector3;
declare function GetAnimInitialOffsetRotation(animDict: string, animName: string, x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, p8: number, p9: number): Vector3;
declare function GetAspectRatio(b: boolean): number;
declare function GetScreenAspectRatio(b: boolean): number;
declare function GetAudibleMusicTrackTextId(): number;
declare function GetBaseElementMetadata(p3: number, p4: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xb335f761606db47c(p3: number, p4: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function GetBenchmarkIterationsFromCommandLine(): number;
declare function N_0x4750fc27570311ec(): number;
declare function GetBenchmarkPassFromCommandLine(): number;
declare function N_0x1b2366c3f2a5c8df(): number;
declare function GetBenchmarkTime(): number;
declare function N_0xe599a503b3837e1b(): number;
declare function GetBestPedWeapon(ped: number, p1: boolean): number;
declare function GetBinkMovieTime(binkMovie: number): number;
declare function GetBitsInRange(_var: number, rangeStart: number, rangeEnd: number): number;
declare function GetBlipAlpha(blip: number): number;
declare function GetBlipColour(blip: number): number;
declare function GetBlipCoords(blip: number): Vector3;
declare function GetBlipFromEntity(entity: number): number;
declare function GetBlipHudColour(blip: number): number;
declare function GetBlipInfoIdCoord(blip: number): Vector3;
declare function GetBlipInfoIdDisplay(blip: number): number;
declare function GetBlipInfoIdEntityIndex(blip: number): number;
declare function GetBlipInfoIdPickupIndex(blip: number): number;
declare function GetBlipInfoIdType(blip: number): number;
declare function GetBlipRotation(blip: number): number;
declare function N_0x003e92ba477f9d7f(blip: number): number;
declare function GetBlipSprite(blip: number): number;
declare function GetBoatBoomPositionRatio(vehicle: number): number;
declare function N_0x6636c535f6cc2725(vehicle: number): number;
declare function GetBoatBoomPositionRatio_2(vehicle: number, p1: boolean): void;
declare function N_0xc1f981a6f74f0c23(vehicle: number, p1: boolean): void;
declare function GetBoatBoomPositionRatio_3(vehicle: number, p1: boolean): void;
declare function N_0x0f3b4d4e43177236(vehicle: number, p1: boolean): void;
declare function GetBoatVehicleModelAgility(modelHash: number): number;
declare function N_0x5aa3f878a178c4fc(modelHash: number): number;
declare function GetVehicleModelMoveResistance(modelHash: number): number;
declare function GetCalmingQuadAtCoords(x: number, y: number): number;
declare function GetCalmingQuadBounds(waterQuad: number): LuaMultiReturn<[boolean, number, number, number, number]>;
declare function GetCalmingQuadCount(): number;
declare function GetCalmingQuadDampening(waterQuad: number, calmingQuadDampening: number): LuaMultiReturn<[boolean, number]>;
declare function GetCamActiveViewModeContext(): number;
declare function N_0x19cafa3c87f7c2ff(): number;
declare function GetCamAnimCurrentPhase(cam: number): number;
declare function GetCamCoord(cam: number): Vector3;
declare function GetCamDofStrength(cam: number): number;
declare function GetCamFarClip(cam: number): number;
declare function GetCamFarDof(cam: number): number;
declare function GetCamFov(cam: number): number;
declare function GetCamMatrix(camera: number): LuaMultiReturn<[number, Vector3, Vector3, Vector3]>;
declare function GetCamNearClip(cam: number): number;
declare function GetCamNearDof(cam: number): number;
declare function GetCamRot(cam: number, rotationOrder: number): Vector3;
declare function GetCamSplineNodeIndex(cam: number): number;
declare function GetCamSplineNodePhase(cam: number): number;
declare function GetCamSplinePhase(cam: number): number;
declare function GetCamViewModeForContext(context: number): number;
declare function N_0xee778f8c7e1142e2(context: number): number;
declare function GetCanVehicleJump(vehicle: number): boolean;
declare function HasVehicleJumpingAbility(vehicle: number): boolean;
declare function DoesVehicleHaveJumpingAbility(vehicle: number): boolean;
declare function GetCargobobHookPosition(cargobob: number): Vector3;
declare function N_0xcbdb9b923cacc92d(cargobob: number): Vector3;
declare function GetCauseOfMostRecentForceCleanup(): number;
declare function GetCgoffset(entity: number): Vector3;
declare function GetClipSetForScriptedGunTask(p0: number): string;
declare function GetClockDayOfMonth(): number;
declare function GetClockDayOfWeek(): number;
declare function GetClockHours(): number;
declare function GetClockMinutes(): number;
declare function GetClockMonth(): number;
declare function GetClockSeconds(): number;
declare function GetClockYear(): number;
declare function GetClosestBlipOfType(blipSprite: number): number;
declare function N_0xd484bf71050ca1ee(blipSprite: number): number;
declare function GetClosestFirePos(x: number, y: number, z: number): LuaMultiReturn<[boolean, Vector3]>;
declare function GetClosestMajorVehicleNode(x: number, y: number, z: number, unknown1: number, unknown2: number): LuaMultiReturn<[boolean, Vector3]>;
declare function GetClosestObjectOfType(x: number, y: number, z: number, radius: number, modelHash: number, isMission: boolean, p6: boolean, p7: boolean): number;
declare function GetClosestPed(x: number, y: number, z: number, radius: number, p4: boolean, p5: boolean, p7: boolean, p8: boolean, pedType: number): LuaMultiReturn<[boolean, number]>;
declare function GetClosestRoad(x: number, y: number, z: number, p3: number, p4: number, p10: boolean): LuaMultiReturn<[number, number, Vector3, number, number, number]>;
declare function GetClosestVehicle(x: number, y: number, z: number, radius: number, modelHash: number, flags: number): number;
declare function GetClosestVehicleNode(x: number, y: number, z: number, nodeType: number, p5: number, p6: number): LuaMultiReturn<[boolean, Vector3]>;
declare function GetClosestVehicleNodeWithHeading(x: number, y: number, z: number, nodeType: number, p6: number, p7: number): LuaMultiReturn<[boolean, number, number]>;
declare function GetCloudHatOpacity(): number;
declare function N_0x20ac25e781ae4a84(): number;
declare function GetCloudTimeAsInt(): number;
declare function N_0x9a73240b49945c76(): number;
declare function GetCloudTimeAsString(): string;
declare function N_0xf12e6cd06c73d69e(): string;
declare function GetCollisionNormalOfLastHitForEntity(entity: number): Vector3;
declare function GetCombatFloat(ped: number, p1: number): number;
declare function GetCommerceItemCat(index: number, index2: number): string;
declare function N_0x6f44cbf56d79fac0(index: number, index2: number): string;
declare function GetCommerceItemId(index: number): string;
declare function N_0x662635855957c411(index: number): string;
declare function GetCommerceItemName(index: number): string;
declare function N_0xb4271092ca7edf48(index: number): string;
declare function GetCommerceItemNumCats(index: number): number;
declare function N_0x2a7776c709904ab0(index: number): number;
declare function GetCommerceItemTexturename(index: number): string;
declare function N_0x722f5d28b61c5ea8(index: number): string;
declare function GetCommerceProductPrice(index: number): string;
declare function N_0xca94551b50b4932c(index: number): string;
declare function GetControlGroupInstructionalButton(padIndex: number, controlGroup: number, p2: boolean): string;
declare function N_0x80c2fd58d720c801(padIndex: number, controlGroup: number, p2: boolean): string;
declare function GetControlInstructionalButton(padIndex: number, control: number, p2: boolean): string;
declare function N_0x0499d7b09fc9b407(padIndex: number, control: number, p2: boolean): string;
declare function GetControlNormal(padIndex: number, control: number): number;
declare function GetControlUnboundNormal(padIndex: number, control: number): number;
declare function N_0x5b84d09cec5209c5(padIndex: number, control: number): number;
declare function GetControlValue(padIndex: number, control: number): number;
declare function GetConvar(varName: string, default_: string): string;
declare function GetConvarInt(varName: string, default_: number): number;
declare function GetConvertibleRoofState(vehicle: number): number;
declare function GetCoordsAndRotationOfClosestObjectOfType(x: number, y: number, z: number, radius: number, modelHash: number, rotationOrder: number): LuaMultiReturn<[number, number, Vector3]>;
declare function N_0x163f8b586bc95f2a(x: number, y: number, z: number, radius: number, modelHash: number, rotationOrder: number): LuaMultiReturn<[number, number, Vector3]>;
declare function GetCoordsOfProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, projectileHash: number, ownedByPlayer: boolean): LuaMultiReturn<[boolean, Vector3]>;
declare function N_0x8d7a43ec6a5fea45(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, projectileHash: number, ownedByPlayer: boolean): LuaMultiReturn<[boolean, Vector3]>;
declare function GetIsProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, projectileHash: number, ownedByPlayer: boolean): LuaMultiReturn<[boolean, Vector3]>;
declare function GetCoordsOfProjectileTypeWithinDistance(ped: number, weaponHash: number, distance: number, ownedByPlayer: boolean): LuaMultiReturn<[boolean, Vector3]>;
declare function N_0xdfb4138eefed7b81(ped: number, weaponHash: number, distance: number, ownedByPlayer: boolean): LuaMultiReturn<[boolean, Vector3]>;
declare function GetProjectileNearPedCoords(ped: number, weaponHash: number, distance: number, ownedByPlayer: boolean): LuaMultiReturn<[boolean, Vector3]>;
declare function GetCurrentFrontendMenuVersion(): number;
declare function N_0x2309595ad6145265(): number;
declare function GetCurrentFrontendMenu(): number;
declare function GetCurrentGameName(): string;
declare function GetCurrentLanguage(): number;
declare function GetUiLanguageId(): number;
declare function GetCurrentLanguageId(): number;
declare function GetCurrentNumberOfCloudPhotos(): number;
declare function N_0x473151ebc762c6da(): number;
declare function GetNumberOfPhotos(): number;
declare function GetCurrentNumberOfPhotos(): number;
declare function GetCurrentPedVehicleWeapon(ped: number, weaponHash: number): LuaMultiReturn<[boolean, number]>;
declare function GetCurrentPedWeapon(ped: number, p2: boolean): LuaMultiReturn<[boolean, number]>;
declare function GetCurrentPedWeaponEntityIndex(ped: number): number;
declare function GetCurrentPlaybackForVehicle(vehicle: number): number;
declare function GetCurrentRadioTrackName(radioStationName: string): number;
declare function N_0x34d66bc058019ce0(radioStationName: string): number;
declare function GetCurrentRadioTrackPlaybackTime(radioStationName: string): number;
declare function N_0x3e65cde5215832c1(radioStationName: string): number;
declare function GetCurrentRadioStationHash(radioStationName: string): number;
declare function GetCurrentResourceName(): string;
declare function GetCurrentScriptedConversationLine(): number;
declare function GetCurrentServerEndpoint(): string;
declare function GetCurrentWebpageId(): number;
declare function N_0x01a358d9128b7a86(): number;
declare function GetActiveWebsiteId(): number;
declare function GetCurrentWebsiteId(): number;
declare function GetCutFileNumSections(cutsceneName: string): number;
declare function N_0x0abc54de641dc0fc(cutsceneName: string): number;
declare function GetCutsceneEndTime(): number;
declare function N_0x971d7b15bcdbef99(): number;
declare function GetCutsceneSectionPlaying(): number;
declare function GetCutsceneTime(): number;
declare function GetCutsceneTotalDuration(): number;
declare function GetDeadPedPickupCoords(ped: number, p1: number, p2: number): Vector3;
declare function GetDebugCamera(): number;
declare function N_0x77c3cec46be286f6(): number;
declare function GetDecalWashLevel(decal: number): number;
declare function GetDeepOceanScaler(): number;
declare function N_0x2b2a2cc86778b619(): number;
declare function GetWavesIntensity(): number;
declare function GetCurrentIntensity(): number;
declare function GetDefaultScriptRendertargetRenderId(): number;
declare function GetDisabledControlNormal(padIndex: number, control: number): number;
declare function GetDisabledControlUnboundNormal(padIndex: number, control: number): number;
declare function N_0x4f8a26a890fd62fb(padIndex: number, control: number): number;
declare function GetDisplayNameFromVehicleModel(modelHash: number): string;
declare function GetDistanceBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, useZ: boolean): number;
declare function GetDlcVehicleData(dlcVehicleIndex: number, outData: number): LuaMultiReturn<[boolean, number]>;
declare function GetDlcVehicleFlags(dlcVehicleIndex: number): number;
declare function GetDlcVehicleModLockHash(hash: number): number;
declare function N_0xc098810437312fff(hash: number): number;
declare function GetDlcVehicleModel(dlcVehicleIndex: number): number;
declare function GetDlcWeaponComponentData(dlcWeaponIndex: number, dlcWeapCompIndex: number, ComponentDataPtr: number): LuaMultiReturn<[boolean, number]>;
declare function GetDlcWeaponComponentDataSp(dlcWeaponIndex: number, dlcWeapCompIndex: number, ComponentDataPtr: number): LuaMultiReturn<[boolean, number]>;
declare function GetDlcWeaponData(dlcWeaponIndex: number, outData: number): LuaMultiReturn<[boolean, number]>;
declare function GetDlcWeaponDataSp(dlcWeaponIndex: number, outData: number): LuaMultiReturn<[boolean, number]>;
declare function GetDoesVehicleHaveTombstone(vehicle: number): boolean;
declare function GetDriftTyresEnabled(vehicle: number): boolean;
declare function GetDuiHandle(duiObject: number): string;
declare function GetEntityAlpha(entity: number): number;
declare function GetEntityAnimCurrentTime(entity: number, animDict: string, animName: string): number;
declare function GetEntityAnimTotalTime(entity: number, animDict: string, animName: string): number;
declare function GetEntityArchetypeName(entity: number): string;
declare function GetEntityAttachedTo(entity: number): number;
declare function GetEntityAttachedToCargobob(vehicle: number): number;
declare function N_0x99093f60746708ca(vehicle: number): number;
declare function GetEntityAttachedToTowTruck(towTruck: number): number;
declare function GetEntityBoneCount(entity: number): number;
declare function N_0xb328dcc3a3aa401b(entity: number): number;
declare function GetEntityBoneIndexByName(entity: number, boneName: string): number;
declare function GetEntityBonePosition_2(entity: number, boneIndex: number): Vector3;
declare function N_0x46f8696933a63c9b(entity: number, boneIndex: number): Vector3;
declare function GetWorldPositionOfEntityBone_2(entity: number, boneIndex: number): Vector3;
declare function GetEntityBoneRotation(entity: number, boneIndex: number): Vector3;
declare function N_0xce6294a232d03786(entity: number, boneIndex: number): Vector3;
declare function GetWorldRotationOfEntityBone(entity: number, boneIndex: number): Vector3;
declare function GetEntityBoneRotationLocal(entity: number, boneIndex: number): Vector3;
declare function GetEntityCanBeDamaged(entity: number): boolean;
declare function N_0xd95cc5d2ab15a09f(entity: number): boolean;
declare function GetEntityCollisionDisabled(entity: number): boolean;
declare function N_0xccf1e97befdae480(entity: number): boolean;
declare function GetEntityCollisonDisabled(entity: number): boolean;
declare function GetEntityCoords(entity: number, alive: boolean): Vector3;
declare function GetEntityForwardVector(entity: number): Vector3;
declare function GetEntityForwardX(entity: number): number;
declare function GetEntityForwardY(entity: number): number;
declare function GetEntityFromStateBagName(bagName: string): number;
declare function GetEntityHeading(entity: number): number;
declare function GetEntityHealth(entity: number): number;
declare function GetEntityHeight(entity: number, X: number, Y: number, Z: number, atTop: boolean, inWorldCoords: boolean): number;
declare function GetEntityHeightAboveGround(entity: number): number;
declare function GetEntityIndexFromMapdata(mapdata: number, entity: number): number;
declare function GetEntityIndexOfCutsceneEntity(cutsceneEntName: string, modelHash: number): number;
declare function GetEntityIndexOfRegisteredEntity(cutsceneEntName: string, modelHash: number): number;
declare function GetEntityInsideExplosionArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number): number;
declare function GetPedInsideExplosionArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number): number;
declare function GetEntityInsideExplosionSphere(explosionType: number, x: number, y: number, z: number, radius: number): number;
declare function GetEntityLodDist(entity: number): number;
declare function GetEntityMapdataOwner(entity: number): LuaMultiReturn<[boolean, number, number]>;
declare function GetEntityMatrix(entity: number): LuaMultiReturn<[number, Vector3, Vector3, Vector3]>;
declare function GetEntityMaxHealth(entity: number): number;
declare function GetEntityModel(entity: number): number;
declare function GetEntityPhysicsHeading(entity: number): number;
declare function N_0x846bf6291198a71e(entity: number): number;
declare function GetEntityPickup(entity: number, modelHash: number): number;
declare function GetEntityPitch(entity: number): number;
declare function GetEntityPlayerIsFreeAimingAt(player: number, entity: number): LuaMultiReturn<[boolean, number]>;
declare function GetEntityPopulationType(entity: number): number;
declare function GetEntityProofs(entity: number): LuaMultiReturn<[boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean]>;
declare function GetEntityQuaternion(entity: number): LuaMultiReturn<[number, number, number, number]>;
declare function GetEntityRoll(entity: number): number;
declare function GetEntityRotation(entity: number, rotationOrder: number): Vector3;
declare function GetEntityRotationVelocity(entity: number): Vector3;
declare function GetEntityScript(entity: number, script: number): LuaMultiReturn<[string, number]>;
declare function GetEntitySpeed(entity: number): number;
declare function GetEntitySpeedVector(entity: number, relative: boolean): Vector3;
declare function GetEntitySubmergedLevel(entity: number): number;
declare function GetEntityType(entity: number): number;
declare function GetEntityUprightValue(entity: number): number;
declare function GetEntityVelocity(entity: number): Vector3;
declare function GetEntryPositionOfDoor(vehicle: number, doorIndex: number): Vector3;
declare function GetEventAtIndex(eventGroup: number, eventIndex: number): number;
declare function GetEventData(eventGroup: number, eventIndex: number, eventDataSize: number): LuaMultiReturn<[boolean, number]>;
declare function GetEventExists(eventGroup: number, eventIndex: number): boolean;
declare function GetExternalKvpFloat(resource: string, key: string): number;
declare function GetExternalKvpInt(resource: string, key: string): number;
declare function GetExternalKvpString(resource: string, key: string): string;
declare function GetExtraContentPackHasBeenInstalled(): boolean;
declare function N_0x8d30f648014a92b5(): boolean;
declare function GetExtraTimecycleModifierIndex(): number;
declare function N_0xbb0527ec6341496d(): number;
declare function GetFakeWantedLevel(): number;
declare function N_0x4c9296cbcd1b971e(): number;
declare function GetFinalRenderedCamCoord(): Vector3;
declare function GetGameplayCamCoords(): Vector3;
declare function GetFinalRenderedCamFarClip(): number;
declare function N_0xdfc8cbc606fdb0fc(): number;
declare function GetGameplayCamFarClip(): number;
declare function GetFinalRenderedCamFarDof(): number;
declare function N_0x9780f32bcaf72431(): number;
declare function GetGameplayCamFarDof(): number;
declare function GetFinalRenderedCamFov(): number;
declare function N_0x80ec114669daeff4(): number;
declare function GetFinalRenderedCamMotionBlurStrength(): number;
declare function N_0x162f9d995753dc19(): number;
declare function GetGameplayCamFarClip_2(): number;
declare function GetFinalRenderedCamNearClip(): number;
declare function N_0xd0082607100d7193(): number;
declare function GetGameplayCamNearClip(): number;
declare function GetFinalRenderedCamNearDof(): number;
declare function N_0xa03502fc581f7d9b(): number;
declare function GetGameplayCamNearDof(): number;
declare function GetFinalRenderedCamRot(rotationOrder: number): Vector3;
declare function GetGameplayCamRot_2(rotationOrder: number): Vector3;
declare function GetFinalRenderedInWhenFriendlyFov(player: number): number;
declare function N_0x5f35f6732c3fbba0(player: number): number;
declare function GetFinalRenderedInWhenFriendlyRot(player: number, rotationOrder: number): Vector3;
declare function N_0x26903d9cd1175f2c(player: number, rotationOrder: number): Vector3;
declare function GetFirstBlipInfoId(blipSprite: number): number;
declare function GetFirstPersonAimCamZoomFactor(): number;
declare function GetGameplayCamZoom(): number;
declare function GetFocusPedOnScreen(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): number;
declare function N_0x89215ec747df244a(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): number;
declare function GetFollowPedCamViewMode(): number;
declare function GetFollowPedCamZoomLevel(): number;
declare function GetFollowVehicleCamViewMode(): number;
declare function GetFollowVehicleCamZoomLevel(): number;
declare function GetForcedComponent(componentHash: number, forcedComponentIndex: number): LuaMultiReturn<[number, number, number]>;
declare function GetForcedProp(componentHash: number, forcedPropIndex: number): LuaMultiReturn<[number, number, number]>;
declare function N_0xe1ca84ebf72e691d(componentHash: number, forcedPropIndex: number): LuaMultiReturn<[number, number, number]>;
declare function GetFrameCount(): number;
declare function GetFrameTime(): number;
declare function GetGameBuildNumber(): number;
declare function GetGameName(): string;
declare function GetGamePool(poolName: string): any;
declare function GetGameTimer(): number;
declare function GetGameplayCamCoord(): Vector3;
declare function GetGameplayCamFov(): number;
declare function GetGameplayCamRelativeHeading(): number;
declare function GetGameplayCamRelativePitch(): number;
declare function GetGameplayCamRot(rotationOrder: number): Vector3;
declare function GetGlobalActionscriptFlag(flagIndex: number): number;
declare function N_0xe3b05614dce1d014(flagIndex: number): number;
declare function GetGlobalCharBuffer(): string;
declare function N_0x24da7d7667fd7b09(): string;
declare function GetGlobalWaterType(): number;
declare function GetGpsBlipRouteFound(): boolean;
declare function N_0x869daacbbe9fa006(): boolean;
declare function GetGpsBlipRouteLength(): number;
declare function N_0xbbb45c3cf5c8aa85(): number;
declare function GetGpsWaypointRouteEnd(p1: boolean, p2: number, p3: number): LuaMultiReturn<[boolean, Vector3]>;
declare function N_0xf3162836c28f9da5(p1: boolean, p2: number, p3: number): LuaMultiReturn<[boolean, Vector3]>;
declare function GetGroundZAndNormalFor_3dCoord(x: number, y: number, z: number): LuaMultiReturn<[boolean, number, Vector3]>;
declare function N_0x8bdc7bfc57a81e76(x: number, y: number, z: number): LuaMultiReturn<[boolean, number, Vector3]>;
declare function GetGroundZCoordWithOffsets(x: number, y: number, z: number): LuaMultiReturn<[boolean, number, Vector3]>;
declare function GetGroundZFor_3dCoord(x: number, y: number, z: number, ignoreWater: boolean): LuaMultiReturn<[boolean, number]>;
declare function GetGroundZFor_3dCoord_2(x: number, y: number, z: number, p4: boolean): LuaMultiReturn<[boolean, number]>;
declare function N_0x9e82f0f362881b29(x: number, y: number, z: number, p4: boolean): LuaMultiReturn<[boolean, number]>;
declare function GetGroupSize(groupID: number): LuaMultiReturn<[number, number]>;
declare function GetHasObjectFragInst(object: number): boolean;
declare function N_0x0c112765300c7e1e(object: number): boolean;
declare function DoesEntityHaveFragInst(object: number): boolean;
declare function GetHasRetractableWheels(vehicle: number): boolean;
declare function GetHasLowerableWheels(vehicle: number): boolean;
declare function DoesVehicleHaveRetractableWheels(vehicle: number): boolean;
declare function GetHasRocketBoost(vehicle: number): boolean;
declare function HasVehicleRocketBoost(vehicle: number): boolean;
declare function DoesVehicleHaveRocketBoost(vehicle: number): boolean;
declare function GetHashKey(_string: string): number;
declare function GetHashNameForComponent(entity: number, componentId: number, drawableVariant: number, textureVariant: number): number;
declare function GetHashNameForProp(entity: number, componentId: number, propIndex: number, propTextureIndex: number): number;
declare function GetHashOfMapAreaAtCoords(x: number, y: number, z: number): number;
declare function GetHashOfThisScriptName(): number;
declare function GetThisScriptHash(): number;
declare function GetHeadingFromVector_2d(dx: number, dy: number): number;
declare function GetHeightmapBottomZForArea(x1: number, y1: number, x2: number, y2: number): number;
declare function N_0x3599d741c9ac6310(x1: number, y1: number, x2: number, y2: number): number;
declare function GetHeightmapBottomZForPosition(x: number, y: number): number;
declare function N_0x336511a34f2e5185(x: number, y: number): number;
declare function GetHeightmapTopZForArea(x1: number, y1: number, x2: number, y2: number): number;
declare function N_0x8abe8608576d9ce3(x1: number, y1: number, x2: number, y2: number): number;
declare function GetHeightmapTopZForPosition(x: number, y: number): number;
declare function N_0x29c24bfbed8ab8fb(x: number, y: number): number;
declare function GetHeliMainRotorHealth(vehicle: number): number;
declare function GetHeliTailBoomHealth(vehicle: number): number;
declare function GetHeliEngineHealth(vehicle: number): number;
declare function GetHeliTailRotorHealth(vehicle: number): number;
declare function GetHudColour(hudColorIndex: number): LuaMultiReturn<[number, number, number, number]>;
declare function GetHudComponentAlign(id: number): LuaMultiReturn<[number, number]>;
declare function GetHudComponentName(id: number): string;
declare function GetHudComponentPosition(id: number): Vector3;
declare function GetHudComponentSize(id: number): Vector3;
declare function GetHudScreenPositionFromWorldPosition(worldX: number, worldY: number, worldZ: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xf9904d11f1acbec3(worldX: number, worldY: number, worldZ: number): LuaMultiReturn<[boolean, number, number]>;
declare function Get_2dCoordFrom_3dCoord(worldX: number, worldY: number, worldZ: number): LuaMultiReturn<[boolean, number, number]>;
declare function GetHydraulicWheelValue(vehicle: number, wheelId: number): number;
declare function GetIdOfThisThread(): number;
declare function GetIdealPlayerSwitchType(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
declare function GetIndexOfCurrentLevel(): number;
declare function GetIndexedItemInItemset(p0: number, p1: number): number;
declare function GetInstanceId(): number;
declare function GetInteriorAtCoords(x: number, y: number, z: number): number;
declare function GetInteriorAtCoordsWithType(x: number, y: number, z: number, interiorType: string): number;
declare function N_0x05b7a89bd78797fc(x: number, y: number, z: number, interiorType: string): number;
declare function GetInteriorAtCoordsWithTypehash(x: number, y: number, z: number, typeHash: number): number;
declare function N_0xf0f77adb9f67e79d(x: number, y: number, z: number, typeHash: number): number;
declare function UnkGetInteriorAtCoords(x: number, y: number, z: number, typeHash: number): number;
declare function GetInteriorEntitiesExtents(interiorId: number): LuaMultiReturn<[number, number, number, number, number, number]>;
declare function GetInteriorFromCollision(x: number, y: number, z: number): number;
declare function GetInteriorFromEntity(entity: number): number;
declare function GetInteriorFromPrimaryView(): number;
declare function N_0xe7d267ec6ca966c3(): number;
declare function GetInteriorFromGameplayCam(): number;
declare function GetInteriorGroupId(interior: number): number;
declare function GetInteriorHeading(interior: number): number;
declare function GetInteriorLocationAndNamehash(interior: number): LuaMultiReturn<[number, number]>;
declare function N_0x252bdc06b73fa6ea(interior: number): LuaMultiReturn<[number, number]>;
declare function GetInteriorInfo(interior: number): LuaMultiReturn<[number, number]>;
declare function GetInteriorPortalCornerPosition(interiorId: number, portalIndex: number, cornerIndex: number): LuaMultiReturn<[number, number, number]>;
declare function GetInteriorPortalCount(interiorId: number): number;
declare function GetInteriorPortalEntityArchetype(interiorId: number, portalIndex: number, entityIndex: number): number;
declare function GetInteriorPortalEntityCount(interiorId: number, portalIndex: number): number;
declare function GetInteriorPortalEntityFlag(interiorId: number, portalIndex: number, entityIndex: number): number;
declare function GetInteriorPortalEntityPosition(interiorId: number, portalIndex: number, entityIndex: number): LuaMultiReturn<[number, number, number]>;
declare function GetInteriorPortalEntityRotation(interiorId: number, portalIndex: number, entityIndex: number): LuaMultiReturn<[number, number, number, number]>;
declare function GetInteriorPortalFlag(interiorId: number, portalIndex: number): number;
declare function GetInteriorPortalRoomFrom(interiorId: number, portalIndex: number): number;
declare function GetInteriorPortalRoomTo(interiorId: number, portalIndex: number): number;
declare function GetInteriorPosition(interiorId: number): LuaMultiReturn<[number, number, number]>;
declare function GetInteriorRoomCount(interiorId: number): number;
declare function GetInteriorRoomExtents(interiorId: number, roomIndex: number): LuaMultiReturn<[number, number, number, number, number, number]>;
declare function GetInteriorRoomFlag(interiorId: number, roomIndex: number): number;
declare function GetInteriorRoomIndexByHash(interiorId: number, roomHash: number): number;
declare function GetInteriorRoomName(interiorId: number, roomIndex: number): string;
declare function GetInteriorRoomTimecycle(interiorId: number, roomIndex: number): number;
declare function GetInteriorRotation(interiorId: number): LuaMultiReturn<[number, number, number, number]>;
declare function GetInvokingResource(): string;
declare function GetIsArenaPropPhysicsDisabled(entity: number, p1: number): boolean;
declare function N_0x43c677f1e1158005(entity: number, p1: number): boolean;
declare function GetIsAutoSaveOff(): boolean;
declare function N_0x6e04f06094c87047(): boolean;
declare function GetIsBoatCapsized(vehicle: number): boolean;
declare function N_0xba91d045575699ad(vehicle: number): boolean;
declare function GetIsDoorValid(vehicle: number, doorIndex: number): boolean;
declare function DoesVehicleHaveDoor(vehicle: number, doorIndex: number): boolean;
declare function GetIsHidef(): boolean;
declare function GetIsLeftVehicleHeadlightDamaged(vehicle: number): boolean;
declare function IsHeadlightLBroken(vehicle: number): boolean;
declare function GetIsLoadingScreenActive(): boolean;
declare function GetIsPedGadgetEquipped(ped: number, gadgetHash: number): boolean;
declare function GetIsPetrolDecalInRange(xCoord: number, yCoord: number, zCoord: number, radius: number): boolean;
declare function N_0x2f09f7976c512404(xCoord: number, yCoord: number, zCoord: number, radius: number): boolean;
declare function GetIsPlayerInAnimalForm(): boolean;
declare function N_0x9689123e3f213aa5(): boolean;
declare function GetIsPreloadedConversationReady(): boolean;
declare function N_0xe73364db90778ffa(): boolean;
declare function GetIsRightVehicleHeadlightDamaged(vehicle: number): boolean;
declare function IsHeadlightRBroken(vehicle: number): boolean;
declare function GetIsTaskActive(ped: number, taskIndex: number): boolean;
declare function GetIsUsingAlternateDriveby(): boolean;
declare function N_0x0f70731baccfbb96(): boolean;
declare function GetIsVehicleEmpDisabled(vehicle: number): boolean;
declare function GetIsVehicleEngineRunning(vehicle: number): boolean;
declare function IsVehicleEngineOn(vehicle: number): boolean;
declare function GetIsVehiclePrimaryColourCustom(vehicle: number): boolean;
declare function GetIsVehicleSecondaryColourCustom(vehicle: number): boolean;
declare function GetIsVehicleShuntBoostActive(vehicle: number): boolean;
declare function GetIsWaypointRecordingLoaded(name: string): boolean;
declare function GetIsWheelsLoweredStateActive(vehicle: number): boolean;
declare function N_0x1da0da9cb3f0c8bf(vehicle: number): boolean;
declare function GetIsWidescreen(): boolean;
declare function GetItemsetSize(x: number): number;
declare function GetJackTarget(ped: number): number;
declare function GetKeyForEntityInRoom(entity: number): number;
declare function GetLabelText(labelName: string): string;
declare function GetLandingGearState(vehicle: number): number;
declare function GetVehicleLandingGear(vehicle: number): number;
declare function GetLastDrivenVehicle(): number;
declare function N_0xb2d06faede65b577(): number;
declare function GetLastMaterialHitByEntity(entity: number): number;
declare function GetLastPedInVehicleSeat(vehicle: number, seatIndex: number): number;
declare function GetLastRammedVehicle(vehicle: number): number;
declare function GetLengthOfLiteralString(_string: string): number;
declare function GetLengthOfLiteralStringInBytes(_string: string): number;
declare function N_0x43e4111189e54f0e(_string: string): number;
declare function GetLengthOfString(_string: string): number;
declare function GetLengthOfStringWithThisTextLabel(gxt: string): number;
declare function GetLiveryName(vehicle: number, liveryIndex: number): string;
declare function GetLocalPlayerAimState(): number;
declare function GetLocalPlayerAimState_2(): number;
declare function N_0x59b9a7af4c95133c(): number;
declare function GetLocalTime(): LuaMultiReturn<[number, number, number, number, number, number]>;
declare function GetLockonDistanceOfCurrentPedWeapon(ped: number): number;
declare function N_0x840f03e9041e2c9c(ped: number): number;
declare function GetLockonRangeOfCurrentPedWeapon(ped: number): number;
declare function GetLodscale(): number;
declare function N_0x0c15b0e443b2349d(): number;
declare function GetMainPlayerBlipId(): number;
declare function GetMakeNameFromVehicleModel(modelHash: number): string;
declare function GetMapZoomDataLevel(index: number): LuaMultiReturn<[boolean, number, number, number, number, number]>;
declare function GetMapdataEntityHandle(mapDataHash: number, entityInternalIdx: number, entityHandle: number): LuaMultiReturn<[boolean, number]>;
declare function GetMapdataEntityMatrix(mapDataHash: number, entityInternalIdx: number, matrixPtr: number): boolean;
declare function GetMapdataFromHashKey(mapdataHandle: number): number;
declare function GetMaxAmmo(ped: number, weaponHash: number, ammo: number): LuaMultiReturn<[boolean, number]>;
declare function GetMaxAmmoByType(ped: number, ammoType: number, ammo: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x585847c5e4e11709(ped: number, ammoType: number, ammo: number): LuaMultiReturn<[boolean, number]>;
declare function GetMaxAmmo_2(ped: number, ammoType: number, ammo: number): LuaMultiReturn<[boolean, number]>;
declare function GetMaxAmmoInClip(ped: number, weaponHash: number, p2: boolean): number;
declare function GetMaxNumNetworkObjects(): number;
declare function N_0xc7be335216b5ec7c(): number;
declare function GetMaxNumNetworkPeds(): number;
declare function N_0x0c1f7d49c39d2289(): number;
declare function GetMaxNumNetworkPickups(): number;
declare function N_0xa72835064dd63e4c(): number;
declare function GetMaxNumNetworkVehicles(): number;
declare function N_0x0afce529f69b21ff(): number;
declare function GetMaxRangeOfCurrentPedWeapon(ped: number): number;
declare function GetMaxWantedLevel(): number;
declare function GetMaximumNumberOfCloudPhotos(): number;
declare function N_0xdc54a7af8b3a14ef(): number;
declare function GetMaximumNumberOfPhotos_2(): number;
declare function GetMaximumNumberOfPhotos(): number;
declare function GetMeleeTargetForPed(ped: number): number;
declare function GetMenuPedBoolStat(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x052991e59076e4e4(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function GetMenuPedFloatStat(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x5fbd7095fe7ae57f(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function GetMenuPedIntStat(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function SetUseridsUihidden(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xef4ced81cebedc6d(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function GetMenuPedMaskedIntStat(p0: number, p2: number, p3: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x90a6526cf0381030(p0: number, p2: number, p3: number): LuaMultiReturn<[boolean, number]>;
declare function GetMillisecondsPerGameMinute(): number;
declare function GetMinimapFowCoordinateIsRevealed(x: number, y: number, z: number): boolean;
declare function N_0x6e31b91145873922(x: number, y: number, z: number): boolean;
declare function IsMinimapAreaRevealed(x: number, y: number, z: number): boolean;
declare function GetMinimapFowDiscoveryRatio(): number;
declare function N_0xe0130b41d3cf4574(): number;
declare function GetMinimapRevealPercentage(): number;
declare function GetMissionFlag(): boolean;
declare function GetMobilePhonePosition(): Vector3;
declare function GetMobilePhoneRenderId(renderId: number): void;
declare function GetMobilePhoneRotation(p1: number): Vector3;
declare function GetModSlotName(vehicle: number, modType: number): string;
declare function GetModTextLabel(vehicle: number, modType: number, modValue: number): string;
declare function GetModelDimensions(modelHash: number): LuaMultiReturn<[number, Vector3]>;
declare function GetMount(ped: number): number;
declare function GetMusicPlaytime(): number;
declare function GetNameOfThread(threadId: number): string;
declare function GetThreadName(threadId: number): string;
declare function GetNameOfZone(x: number, y: number, z: number): string;
declare function GetNamedRendertargetRenderId(name: string): number;
declare function GetNavmeshRouteDistanceRemaining(ped: number): LuaMultiReturn<[number, number, boolean]>;
declare function GetNavmeshRouteResult(ped: number): number;
declare function GetNearestPlayerToEntity(entity: number): number;
declare function GetNearestPlayerToEntityOnTeam(entity: number, team: number): number;
declare function GetNetworkIdFromSoundId(soundId: number): number;
declare function GetNetworkTime(): number;
declare function GetNetworkTimeAccurate(): number;
declare function N_0x89023fbbf9200e9f(): number;
declare function GetNewSelectedMissionCreatorBlip(): number;
declare function DisableBlipNameForVar(): number;
declare function N_0x5c90988e7c8e1af4(): number;
declare function GetNextBlipInfoId(blipSprite: number): number;
declare function GetNextGpsDisabledZoneIndex(index: number): number;
declare function N_0xd3a6a0ef48823a8c(index: number): number;
declare function GetNextWeatherTypeHashName(): number;
declare function GetNextWeatherType(): number;
declare function GetNgstatBoolHash(index: number, spStat: boolean, charStat: boolean, character: number, section: string): number;
declare function N_0xba52ff538ed2bc71(index: number, spStat: boolean, charStat: boolean, character: number, section: string): number;
declare function GetNgstatIntHash(index: number, spStat: boolean, charStat: boolean, character: number, section: string): number;
declare function N_0x2b4cdca6f07ff3da(index: number, spStat: boolean, charStat: boolean, character: number, section: string): number;
declare function GetNoLoadingScreen(): boolean;
declare function GetNorthRadarBlip(): number;
declare function N_0x3f0cf9cb7e589b88(): number;
declare function GetNthClosestVehicleNode(x: number, y: number, z: number, nthClosest: number, unknown1: number, unknown2: number, unknown3: number): LuaMultiReturn<[boolean, Vector3]>;
declare function GetNthClosestVehicleNodeFavourDirection(x: number, y: number, z: number, desiredX: number, desiredY: number, desiredZ: number, nthClosest: number, nodetype: number, p10: number, p11: number): LuaMultiReturn<[boolean, number, number]>;
declare function GetNthClosestVehicleNodeId(x: number, y: number, z: number, nth: number, nodetype: number, p5: number, p6: number): number;
declare function GetNthClosestVehicleNodeIdWithHeading(x: number, y: number, z: number, nthClosest: number, p6: number, p7: number, p8: number): LuaMultiReturn<[number, number, number]>;
declare function GetNthClosestVehicleNodeWithHeading(x: number, y: number, z: number, nthClosest: number, unknown2: number, unknown3: number, unknown4: number): LuaMultiReturn<[boolean, number, number, number]>;
declare function GetNuiCursorPosition(): LuaMultiReturn<[number, number]>;
declare function GetNumCommerceItems(): number;
declare function N_0xf2eac213d5ea0623(): number;
declare function GetNumCreatedMissionObjects(p0: boolean): number;
declare function N_0x12b6281b6c6706c0(p0: boolean): number;
declare function GetNumCreatedMissionPeds(p0: boolean): number;
declare function N_0xcb215c4b56a7fae7(p0: boolean): number;
declare function GetNumCreatedMissionVehicles(p0: boolean): number;
declare function N_0x0cd9ab83489430ea(p0: boolean): number;
declare function GetNumDispatchedUnitsForPlayer(dispatchService: number): number;
declare function N_0xeb4a0c2d56441717(dispatchService: number): number;
declare function GetNumberOfDispatchedUnitsForPlayer(dispatchService: number): number;
declare function GetNumDlcVehicles(): number;
declare function GetNumDlcWeaponComponents(dlcWeaponIndex: number): number;
declare function GetNumDlcWeaponComponentsSp(dlcWeaponIndex: number): number;
declare function GetNumDlcWeapons(): number;
declare function GetNumDlcWeaponsSp(): number;
declare function GetNumHairColors(): number;
declare function GetNumMakeupColors(): number;
declare function N_0xd1f7ca1535d22818(): number;
declare function GetNumModColors(paintType: number, p1: boolean): number;
declare function GetNumModKits(vehicle: number): number;
declare function GetNumNavmeshesExistingInArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): number;
declare function N_0x01708e8dd3ff8c65(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): number;
declare function GetNumReservedMissionObjects(p0: boolean): number;
declare function GetNumReservedMissionPeds(p0: boolean): number;
declare function GetNumReservedMissionVehicles(p0: boolean): number;
declare function GetNumResourceMetadata(resourceName: string, metadataKey: string): number;
declare function GetNumResources(): number;
declare function GetNumSuccessfulStuntJumps(): number;
declare function N_0x996dd1e1e02f1008(): number;
declare function GetNumTattooShopDlcItems(character: number): number;
declare function N_0x278f76c3b0a8f109(character: number): number;
declare function GetNumDecorations(character: number): number;
declare function GetNumUnlockedRadioStations(): number;
declare function MaxRadioStationIndex(): number;
declare function GetNumVehicleMods(vehicle: number, modType: number): number;
declare function GetNumVehicleWindowTints(): number;
declare function GetNumberOfActiveBlips(): number;
declare function GetNumberOfEvents(eventGroup: number): number;
declare function GetNumberOfFiresInRange(x: number, y: number, z: number, radius: number): number;
declare function GetNumberOfFreeStacksOfThisSize(stackSize: number): number;
declare function GetFreeStackSlotsCount(stackSize: number): number;
declare function GetNumberOfPedDrawableVariations(ped: number, componentId: number): number;
declare function GetNumberOfPedPropDrawableVariations(ped: number, propId: number): number;
declare function GetNumberOfPedPropTextureVariations(ped: number, propId: number, drawableId: number): number;
declare function GetNumberOfPedTextureVariations(ped: number, componentId: number, drawableId: number): number;
declare function GetNumberOfPlayers(): number;
declare function GetNumberOfPlayersInTeam(team: number): number;
declare function GetNumberOfReferencesOfScriptWithNameHash(scriptHash: number): number;
declare function GetNumberOfInstancesOfStreamedScript(scriptHash: number): number;
declare function GetNumberOfInstancesOfScriptWithNameHash(scriptHash: number): number;
declare function GetNumberOfStreamingRequests(): number;
declare function GetNumberOfVehicleColours(vehicle: number): number;
declare function GetNumberOfVehicleDoors(vehicle: number): number;
declare function GetNumberOfVehicleNumberPlates(): number;
declare function GetObjectFragmentDamageHealth(p0: number, p1: boolean): number;
declare function GetObjectIndexFromEntityIndex(entity: number): number;
declare function GetObjectOffsetFromCoords(xPos: number, yPos: number, zPos: number, heading: number, xOffset: number, yOffset: number, zOffset: number): Vector3;
declare function GetObjectTextureVariation(object: number): number;
declare function N_0xe84eb93729c5f36a(object: number): number;
declare function GetOffsetFromEntityGivenWorldCoords(entity: number, posX: number, posY: number, posZ: number): Vector3;
declare function GetOffsetFromEntityInWorldCoords(entity: number, offsetX: number, offsetY: number, offsetZ: number): Vector3;
declare function GetOffsetFromInteriorInWorldCoords(interior: number, x: number, y: number, z: number): Vector3;
declare function GetOnlineVersion(): string;
declare function GetGameVersion(): string;
declare function GetOnscreenKeyboardResult(): string;
declare function GetPackedBoolStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function N_0x80c75307b1c42837(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function GetPstatBoolHash(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function GetPackedIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function N_0x61e111e323419e07(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function GetPstatIntHash(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function GetPackedTuBoolStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function N_0xc4bb08ee7907471e(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function GetTupstatBoolHash(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function GetPackedTitleUpdateBoolStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function GetPackedTuIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function N_0xd16c2ad6b8e32854(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function GetTupstatIntHash(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function GetPackedTitleUpdateIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
declare function GetParkedVehicleDensityMultiplier(): number;
declare function GetPauseMapPointerWorldPosition(): Vector3;
declare function GetPauseMenuCursorPosition(): Vector3;
declare function N_0x5bff36d6ed83e0ae(): Vector3;
declare function GetPauseMenuSelection(): LuaMultiReturn<[number, number]>;
declare function N_0x36c1451a88a09630(): LuaMultiReturn<[number, number]>;
declare function GetPauseMenuSelectionData(): LuaMultiReturn<[number, number, number]>;
declare function N_0x7e17be53e1aaabaf(): LuaMultiReturn<[number, number, number]>;
declare function GetPauseMenuState(): number;
declare function GetPedAccuracy(ped: number): number;
declare function GetPedAlertness(ped: number): number;
declare function GetPedAmmoByType(ped: number, ammoType: number): number;
declare function GetPedAmmoTypeFromWeapon(ped: number, weaponHash: number): number;
declare function GetPedAmmoType(ped: number, weaponHash: number): number;
declare function GetPedAmmoTypeFromWeapon_2(ped: number, weaponHash: number): number;
declare function GetPedArmour(ped: number): number;
declare function GetPedAsGroupLeader(groupID: number): number;
declare function GetPedAsGroupMember(groupID: number, memberNumber: number): number;
declare function GetPedBoneCoords(ped: number, boneId: number, offsetX: number, offsetY: number, offsetZ: number): Vector3;
declare function GetPedBoneIndex(ped: number, boneId: number): number;
declare function GetPedCauseOfDeath(ped: number): number;
declare function GetPedCombatMovement(ped: number): number;
declare function GetPedCombatRange(ped: number): number;
declare function GetPedConfigFlag(ped: number, flagId: number, p2: boolean): boolean;
declare function GetPedCurrentMovementSpeed(ped: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xf60165e1d2c5370b(ped: number): LuaMultiReturn<[boolean, number, number]>;
declare function GetPedDecorationZoneFromHashes(collection: number, overlay: number): number;
declare function GetTattooZone(collection: number, overlay: number): number;
declare function GetPedDecorations(ped: number): any;
declare function GetPedDecorationsState(ped: number): number;
declare function N_0x71eab450d86954a1(ped: number): number;
declare function GetPedDefensiveAreaPosition(ped: number, p1: boolean): Vector3;
declare function GetPedDensityMultiplier(): number;
declare function GetPedDesiredMoveBlendRatio(ped: number): number;
declare function GetPedDiesInWater(ped: number): boolean;
declare function GetPedDrawableVariation(ped: number, componentId: number): number;
declare function GetPedEmissiveIntensity(ped: number): number;
declare function N_0x1461b28a06717d68(ped: number): number;
declare function GetPedIlluminatedClothingGlowIntensity(ped: number): number;
declare function GetPedEnveffScale(ped: number): number;
declare function GetPedEventData(ped: number, eventType: number, outData: number): LuaMultiReturn<[boolean, number]>;
declare function GetPedExtractedDisplacement(ped: number, worldSpace: boolean): Vector3;
declare function GetPedEyeColor(ped: number): number;
declare function N_0x76bba2cee66d47e9(ped: number): number;
declare function GetPedFaceFeature(ped: number, index: number): number;
declare function GetPedGroupIndex(ped: number): number;
declare function GetPedHairColor(ped: number): number;
declare function GetPedHairHighlightColor(ped: number): number;
declare function GetPedHairRgbColor(hairColorIndex: number): LuaMultiReturn<[number, number, number]>;
declare function N_0x4852fc386e2e1bb5(hairColorIndex: number): LuaMultiReturn<[number, number, number]>;
declare function GetHairRgbColor(hairColorIndex: number): LuaMultiReturn<[number, number, number]>;
declare function GetPedHeadBlendData(ped: number, headBlendData: number): LuaMultiReturn<[boolean, number]>;
declare function GetPedHeadBlendFirstIndex(_type: number): number;
declare function GetFirstParentIdForPedType(_type: number): number;
declare function GetPedHeadBlendNumHeads(_type: number): number;
declare function GetNumParentPedsOfType(_type: number): number;
declare function GetPedHeadOverlayData(ped: number, index: number): LuaMultiReturn<[boolean, number, number, number, number, number]>;
declare function GetPedHeadOverlayNum(overlayID: number): number;
declare function GetNumHeadOverlayValues(overlayID: number): number;
declare function GetPedHeadOverlayValue(ped: number, overlayID: number): number;
declare function GetPedHelmetStoredHatPropIndex(ped: number): number;
declare function N_0x451294e859ecc018(ped: number): number;
declare function GetPedHelmetStoredHatTexIndex(ped: number): number;
declare function N_0x9d728c1e12bf5518(ped: number): number;
declare function GetPedInVehicleSeat(vehicle: number, seatIndex: number): number;
declare function GetPedIndexFromEntityIndex(entity: number): number;
declare function GetPedLastDamageBone(ped: number, outBone: number): LuaMultiReturn<[boolean, number]>;
declare function GetPedLastWeaponImpactCoord(ped: number): LuaMultiReturn<[boolean, Vector3]>;
declare function GetPedMakeupRgbColor(makeupColorIndex: number): LuaMultiReturn<[number, number, number]>;
declare function N_0x013e5cfc38cd5387(makeupColorIndex: number): LuaMultiReturn<[number, number, number]>;
declare function GetMakeupRgbColor(makeupColorIndex: number): LuaMultiReturn<[number, number, number]>;
declare function GetPedMaxHealth(ped: number): number;
declare function GetPedModelPersonality(modelHash: number): number;
declare function GetPedMoney(ped: number): number;
declare function GetPedMovementClipset(ped: number): number;
declare function GetPedNearbyPeds(ped: number, ignore: number): LuaMultiReturn<[number, number]>;
declare function GetPedNearbyVehicles(ped: number, sizeAndVehs: number): LuaMultiReturn<[number, number]>;
declare function GetPedPaletteVariation(ped: number, componentId: number): number;
declare function GetPedParachuteLandingType(ped: number): number;
declare function GetPedParachuteState(ped: number): number;
declare function GetPedParachuteTintIndex(ped: number, outTintIndex: number): number;
declare function GetPedPropIndex(ped: number, componentId: number): number;
declare function GetPedPropTextureIndex(ped: number, componentId: number): number;
declare function GetPedRagdollBoneIndex(ped: number, bone: number): number;
declare function GetPedRelationshipGroupDefaultHash(ped: number): number;
declare function GetPedRelationshipGroupHash(ped: number): number;
declare function GetPedResetFlag(ped: number, flagId: number): boolean;
declare function GetPedSourceOfDeath(ped: number): number;
declare function GetPedKiller(ped: number): number;
declare function GetPedStealthMovement(ped: number): boolean;
declare function GetPedSweat(ped: number): number;
declare function GetPedTaskCombatTarget(ped: number, p1: number): number;
declare function N_0x32c27a11307b01cc(ped: number, p1: number): number;
declare function GetPedTextureVariation(ped: number, componentId: number): number;
declare function GetPedTimeOfDeath(ped: number): number;
declare function N_0x1e98817b311ae98a(ped: number): number;
declare function GetPedType(ped: number): number;
declare function GetPedUsingVehicleDoor(vehicle: number, doorIndex: number): number;
declare function N_0x218297bf0cfd853b(vehicle: number, doorIndex: number): number;
declare function GetPedVisualFieldCenterAngle(ped: number): number;
declare function GetPedWaypointDistance(p0: number): number;
declare function GetPedWaypointProgress(ped: number): number;
declare function GetPedWeaponLiveryColor(ped: number, weaponHash: number, camoComponentHash: number): number;
declare function N_0xf0a60040be558f2d(ped: number, weaponHash: number, camoComponentHash: number): number;
declare function GetPedWeaponTintIndex(ped: number, weaponHash: number): number;
declare function GetPedWeapontypeInSlot(ped: number, weaponSlot: number): number;
declare function GetPedheadshotTxdString(id: number): string;
declare function GetPedsJacker(ped: number): number;
declare function GetPhoneGestureAnimCurrentTime(ped: number): number;
declare function GetPhoneGestureAnimTotalTime(ped: number): number;
declare function GetPickupCoords(pickup: number): Vector3;
declare function GetPickupGenerationRangeMultiplier(): number;
declare function N_0xb3eca65c7317f174(): number;
declare function GetPickupHash(pickupHash: number): number;
declare function N_0x5eaad83f8cfb4575(pickupHash: number): number;
declare function GetPickupHashFromWeapon(weapon: number): number;
declare function N_0xd6429a016084f1a5(weapon: number): number;
declare function GetPickupObject(pickup: number): number;
declare function N_0x5099bc55630b25ae(pickup: number): number;
declare function GetPlayerCurrentStealthNoise(player: number): number;
declare function GetPlayerFakeWantedLevel(player: number): number;
declare function N_0x56105e599cab0efa(player: number): number;
declare function GetPlayerFromServerId(serverId: number): number;
declare function GetPlayerFromStateBagName(bagName: string): number;
declare function GetPlayerGroup(player: number): number;
declare function GetPlayerHasReserveParachute(player: number): boolean;
declare function GetPlayerHealthRechargeLimit(player: number): number;
declare function N_0x8bc515bae4aaf8ff(player: number): number;
declare function GetPlayerIndex(): number;
declare function GetPlayerInvincible(player: number): boolean;
declare function GetPlayerInvincible_2(player: number): boolean;
declare function GetPlayerMaxArmour(player: number): number;
declare function GetPlayerMaxStamina(playerId: number): number;
declare function GetPlayerMeleeWeaponDamageModifier(playerId: number): number;
declare function GetPlayerMeleeWeaponDefenseModifier(playerId: number): number;
declare function GetPlayerName(player: number): string;
declare function GetPlayerParachuteModelOverride(player: number): number;
declare function GetPlayerParachutePackTintIndex(player: number, tintIndex: number): number;
declare function GetPlayerParachuteSmokeTrailColor(player: number): LuaMultiReturn<[number, number, number]>;
declare function GetPlayerParachuteTintIndex(player: number, tintIndex: number): number;
declare function GetPlayerPed(playerId: number): number;
declare function GetPlayerPedIsFollowing(ped: number): number;
declare function GetPlayerPedScriptIndex(player: number): number;
declare function GetPlayerRadioStationGenre(): number;
declare function GetPlayerRadioStationIndex(): number;
declare function GetPlayerRadioStationName(): string;
declare function GetPlayerReserveParachuteModelOverride(player: number): number;
declare function GetPlayerReserveParachuteTintIndex(player: number, index: number): number;
declare function GetPlayerRgbColour(player: number): LuaMultiReturn<[number, number, number]>;
declare function GetPlayerServerId(player: number): number;
declare function GetPlayerShortSwitchState(): number;
declare function GetPlayerSprintStaminaRemaining(player: number): number;
declare function GetPlayerSprintTimeRemaining(player: number): number;
declare function GetPlayerStamina(playerId: number): number;
declare function GetPlayerSwitchInterpOutCurrentTime(): number;
declare function N_0x5b48a06dd0e792a5(): number;
declare function GetPlayerSwitchInterpOutDuration(): number;
declare function SetPlayerInvertedUp(): number;
declare function N_0x08c2d6c52a3104bb(): number;
declare function GetPlayerSwitchJumpCutIndex(): number;
declare function N_0x78c0d93253149435(): number;
declare function GetPlayerSwitchState(): number;
declare function GetPlayerSwitchType(): number;
declare function GetPlayerTargetEntity(player: number, entity: number): LuaMultiReturn<[boolean, number]>;
declare function GetPlayerTeam(player: number): number;
declare function GetPlayerUnderwaterTimeRemaining(player: number): number;
declare function GetPlayerVehicleDamageModifier(playerId: number): number;
declare function GetPlayerVehicleDefenseModifier(playerId: number): number;
declare function GetPlayerWantedCentrePosition(player: number): Vector3;
declare function GetPlayerWantedLevel(player: number): number;
declare function GetPlayerWeaponDamageModifier(playerId: number): number;
declare function GetPlayerWeaponDefenseModifier(playerId: number): number;
declare function GetPlayerWeaponDefenseModifier_2(playerId: number): number;
declare function GetPlayersLastVehicle(): number;
declare function GetPointOnRoadSide(x: number, y: number, z: number, p3: number): LuaMultiReturn<[boolean, Vector3]>;
declare function N_0x16f46fb18c8009e4(x: number, y: number, z: number, p3: number): LuaMultiReturn<[boolean, Vector3]>;
declare function GetPositionInRecording(vehicle: number): number;
declare function GetPositionOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
declare function GetPositionOfVehicleRecordingIdAtTime(id: number, time: number): Vector3;
declare function N_0x92523b76657a517d(id: number, time: number): Vector3;
declare function GetPosixTime(): LuaMultiReturn<[number, number, number, number, number, number]>;
declare function GetPowerSavingModeDuration(): number;
declare function N_0xabb2fa71c83a1b72(): number;
declare function GetPrevWeatherTypeHashName(): number;
declare function GetPrevWeatherType(): number;
declare function GetProfileSetting(profileSetting: number): number;
declare function GetProjectileNearPed(ped: number, weaponHash: number, distance: number, ownedByPlayer: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x82fde6a57ee4ee44(ped: number, weaponHash: number, distance: number, ownedByPlayer: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function GetRadioStationName(radioStation: number): string;
declare function GetRainLevel(): number;
declare function GetRandomEventFlag(): boolean;
declare function GetRandomFloatInRange(startRange: number, endRange: number): number;
declare function GetRandomIntInRange(startRange: number, endRange: number): number;
declare function GetRandomIntInRange_2(startRange: number, endRange: number): number;
declare function GetRandomPedAtCoord(x: number, y: number, z: number, xRadius: number, yRadius: number, zRadius: number, pedType: number): number;
declare function GetRandomVehicleBackBumperInSphere(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;
declare function GetRandomVehicleDensityMultiplier(): number;
declare function GetRandomVehicleFrontBumperInSphere(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;
declare function GetRandomVehicleInSphere(x: number, y: number, z: number, radius: number, modelHash: number, flags: number): number;
declare function GetRandomVehicleModelInMemory(p0: boolean): LuaMultiReturn<[number, number]>;
declare function GetRandomVehicleNode(x: number, y: number, z: number, radius: number, p4: boolean, p5: boolean, p6: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function GetRayfireMapObject(x: number, y: number, z: number, radius: number, name: string): number;
declare function N_0xb48fced898292e52(x: number, y: number, z: number, radius: number, name: string): number;
declare function GetDesObject(x: number, y: number, z: number, radius: number, name: string): number;
declare function GetRayfireMapObjectAnimPhase(object: number): number;
declare function N_0x260ee4fdbdf4db01(object: number): number;
declare function GetDesObjectAnimProgress(object: number): number;
declare function GetRegisteredCommands(): any;
declare function GetRelationshipBetweenGroups(group1: number, group2: number): number;
declare function GetRelationshipBetweenPeds(ped1: number, ped2: number): number;
declare function GetRenderedCharacterHeight(size: number, font: number): number;
declare function N_0xdb88a37483346780(size: number, font: number): number;
declare function GetTextScaleHeight(size: number, font: number): number;
declare function GetRenderingCam(): number;
declare function GetReplayStatAtIndex(index: number): number;
declare function N_0x8098c8d6597aae18(index: number): number;
declare function GetReplayStatCount(): number;
declare function N_0xdc9274a7ef6b2867(): number;
declare function GetReplayStatMissionType(): number;
declare function N_0x2b626a0150e4d449(): number;
declare function GetRequestingnightvision(): boolean;
declare function N_0x35fb78dc42b7bd21(): boolean;
declare function GetResourceByFindIndex(findIndex: number): string;
declare function GetResourceKvpFloat(key: string): number;
declare function GetResourceKvpInt(key: string): number;
declare function GetResourceKvpString(key: string): string;
declare function GetResourceMetadata(resourceName: string, metadataKey: string, index: number): string;
declare function GetResourceState(resourceName: string): string;
declare function GetRoadBoundaryUsingHeading(x: number, y: number, z: number, heading: number): LuaMultiReturn<[boolean, Vector3]>;
declare function N_0xa0f8a7517a273c05(x: number, y: number, z: number, heading: number): LuaMultiReturn<[boolean, Vector3]>;
declare function GetRoadSidePointWithHeading(x: number, y: number, z: number, heading: number): LuaMultiReturn<[boolean, Vector3]>;
declare function GetRoomKeyForGameViewport(): number;
declare function N_0xa6575914d2a0b450(): number;
declare function GetRoomKeyFromGameplayCam(): number;
declare function GetRoomKeyFromEntity(entity: number): number;
declare function GetRopeFlags(rope: number): number;
declare function GetRopeLastVertexCoord(ropeId: number): Vector3;
declare function GetRopeLengthChangeRate(rope: number): number;
declare function GetRopeTimeMultiplier(rope: number): number;
declare function GetRopeUpdateOrder(rope: number): number;
declare function GetRopeVertexCoord(ropeId: number, vertex: number): Vector3;
declare function GetRopeVertexCount(ropeId: number): number;
declare function GetRotationOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
declare function GetRotationOfVehicleRecordingIdAtTime(id: number, time: number): Vector3;
declare function N_0xf0f2103efaf8cba7(id: number, time: number): Vector3;
declare function GetRuntimeTextureHeight(tex: number): number;
declare function GetRuntimeTexturePitch(tex: number): number;
declare function GetRuntimeTextureWidth(tex: number): number;
declare function GetSafeCoordForPed(x: number, y: number, z: number, onGround: boolean, flags: number): LuaMultiReturn<[boolean, Vector3]>;
declare function GetSafePickupCoords(x: number, y: number, z: number, p3: number, p4: number): Vector3;
declare function GetSafeZoneSize(): number;
declare function GetScaleformMovieCursorSelection(scaleformHandle: number): LuaMultiReturn<[boolean, boolean, number, number, number]>;
declare function N_0x632b2940c67f4ea9(scaleformHandle: number): LuaMultiReturn<[boolean, boolean, number, number, number]>;
declare function GetScaleformMovieMethodReturnValueBool(methodReturn: number): boolean;
declare function N_0xd80a80346a45d761(methodReturn: number): boolean;
declare function GetScaleformMovieMethodReturnValueInt(method_return: number): number;
declare function N_0x2de7efa66b906036(method_return: number): number;
declare function GetScaleformMovieFunctionReturnInt(method_return: number): number;
declare function GetScaleformMovieMethodReturnValueString(method_return: number): string;
declare function SittingTv(method_return: number): string;
declare function GetScaleformMovieFunctionReturnString(method_return: number): string;
declare function GetScenarioPedDensityMultiplier(): number;
declare function GetScreenCoordFromWorldCoord(worldX: number, worldY: number, worldZ: number): LuaMultiReturn<[boolean, number, number]>;
declare function World3dToScreen2d(worldX: number, worldY: number, worldZ: number): LuaMultiReturn<[boolean, number, number]>;
declare function GetScreenResolution(): LuaMultiReturn<[number, number]>;
declare function GetScreenblurFadeCurrentTime(): number;
declare function IsParticleFxDelayedBlink(): number;
declare function GetScriptGfxPosition(x: number, y: number): LuaMultiReturn<[number, number]>;
declare function N_0x6dd8f5aa635eb4b2(x: number, y: number): LuaMultiReturn<[number, number]>;
declare function GetScriptTaskStatus(ped: number, taskHash: number): number;
declare function GetScriptedCoverPointCoords(coverpoint: number): Vector3;
declare function GetSeatPedIsTryingToEnter(ped: number): number;
declare function GetSelectedPedWeapon(ped: number): number;
declare function GetSequenceProgress(ped: number): number;
declare function GetShapeTestResult(shapeTestHandle: number): LuaMultiReturn<[number, boolean, number, Vector3, number]>;
declare function GetRaycastResult(shapeTestHandle: number): LuaMultiReturn<[number, boolean, number, Vector3, number]>;
declare function GetShapeTestResultIncludingMaterial(shapeTestHandle: number): LuaMultiReturn<[number, boolean, number, Vector3, number, number]>;
declare function N_0x65287525d951f6be(shapeTestHandle: number): LuaMultiReturn<[number, boolean, number, Vector3, number, number]>;
declare function GetShapeTestResultEx(shapeTestHandle: number): LuaMultiReturn<[number, boolean, number, Vector3, number, number]>;
declare function GetShopPedApparelForcedComponentCount(componentHash: number): number;
declare function GetNumForcedComponents(componentHash: number): number;
declare function GetShopPedApparelForcedPropCount(componentHash: number): number;
declare function N_0x017568a8182d98a6(componentHash: number): number;
declare function GetShopPedApparelVariantComponentCount(componentHash: number): number;
declare function N_0xc17ad0e5752becda(componentHash: number): number;
declare function GetShopPedApparelVariantPropCount(propHash: number): number;
declare function N_0xd40aac51e8e4c663(propHash: number): number;
declare function GetShopPedComponent(componentHash: number, outComponent: number): number;
declare function GetShopPedOutfit(p0: number, p1: number): number;
declare function GetShopPedOutfitComponentVariant(outfit: number, slot: number, outComponentVariant: number): LuaMultiReturn<[boolean, number]>;
declare function GetPropFromOutfit(outfit: number, slot: number, outComponentVariant: number): LuaMultiReturn<[boolean, number]>;
declare function GetShopPedOutfitLocate(p0: number): number;
declare function N_0x073ca26b079f956e(p0: number): number;
declare function GetShopPedOutfitPropVariant(outfitHash: number, variantIndex: number, outPropVariant: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xa9f9c2e0fde11cbb(outfitHash: number, variantIndex: number, outPropVariant: number): LuaMultiReturn<[boolean, number]>;
declare function GetShopPedProp(componentHash: number, outProp: number): number;
declare function N_0x5d5caff661ddf6fc(componentHash: number, outProp: number): number;
declare function GetShopPedQueryComponent(componentId: number, outComponent: number): number;
declare function GetShopPedQueryOutfit(outfitIndex: number, outfit: number): number;
declare function GetShopPedQueryProp(componentId: number, outProp: number): number;
declare function GetSizeOfSaveData(p0: boolean): number;
declare function N_0xa09f896ce912481f(p0: boolean): number;
declare function GetSnowLevel(): number;
declare function GetSoundId(): number;
declare function GetSoundIdFromNetworkId(netId: number): number;
declare function N_0x75262fd12d0a1c84(netId: number): number;
declare function GetStandardBlipEnumId(): number;
declare function N_0x4a9923385bdb9dad(): number;
declare function GetLevelBlipSprite(): number;
declare function GetStateBagValue(bagName: string, key: string): any;
declare function GetStateOfClosestDoorOfType(_type: number, x: number, y: number, z: number): LuaMultiReturn<[boolean, number]>;
declare function GetStateOfRayfireMapObject(object: number): number;
declare function N_0x899ba936634a322e(object: number): number;
declare function GetDesObjectState(object: number): number;
declare function GetStatusOfLoadMissionCreatorPhoto(p0: string): number;
declare function N_0x1670f8d05056f257(p0: string): number;
declare function GetStatusOfMissionRepeatSave(): number;
declare function N_0x2b5e102e4a42f2bf(): number;
declare function GetStatusOfSaveHighQualityPhoto(): number;
declare function N_0x0c0c4e81e1ac60a0(): number;
declare function GetStatusOfSortedListOperation(p0: boolean): number;
declare function N_0xf5bed327cea362b1(p0: boolean): number;
declare function GetStatusOfTakeHighQualityPhoto(): number;
declare function N_0x0d6ca79eeebd8ca3(): number;
declare function GetStatusOfTakeMissionCreatorPhoto(): number;
declare function N_0x90a78ecaa4e78453(): number;
declare function GetStatusOfTextureDownload(p0: number): number;
declare function N_0x8bd6c6dea20e82c6(p0: number): number;
declare function GetStreamPlayTime(): number;
declare function GetStreetNameAtCoord(x: number, y: number, z: number): LuaMultiReturn<[number, number]>;
declare function GetStreetNameFromHashKey(hash: number): string;
declare function GetSubmarineCrushDepthWarningState(submarine: number): number;
declare function GetSubmarineIsBelowFirstCrushDepth(submarine: number): boolean;
declare function GetSynchronizedScenePhase(sceneID: number): number;
declare function GetSynchronizedSceneRate(sceneID: number): number;
declare function GetTaskMoveNetworkEvent(ped: number, eventName: string): boolean;
declare function N_0xb4f47213df45a64c(ped: number, eventName: string): boolean;
declare function GetTaskMoveNetworkSignalBool(ped: number, signalName: string): boolean;
declare function N_0xa7ffba498e4aaf67(ped: number, signalName: string): boolean;
declare function GetTaskMoveNetworkSignalFloat(ped: number, signalName: string): number;
declare function GetTaskMoveNetworkState(ped: number): string;
declare function N_0x717e4d1f2048376d(ped: number): string;
declare function GetTattooShopDlcItemData(characterType: number, decorationIndex: number, outComponent: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xff56381874f82086(characterType: number, decorationIndex: number, outComponent: number): LuaMultiReturn<[boolean, number]>;
declare function GetTattooCollectionData(characterType: number, decorationIndex: number, outComponent: number): LuaMultiReturn<[boolean, number]>;
declare function GetTennisSwingAnimComplete(ped: number): boolean;
declare function N_0x17df68d720aa77f8(ped: number): boolean;
declare function GetTextSubstring(text: string, position: number, length: number): string;
declare function GetTextSubstringSafe(text: string, position: number, length: number, maxLength: number): string;
declare function GetTextSubstringSlice(text: string, startPosition: number, endPosition: number): string;
declare function GetTextureResolution(textureDict: string, textureName: string): Vector3;
declare function GetThisScriptName(): string;
declare function GetTimeAsString(time: number): string;
declare function FormatTime(time: number): string;
declare function GetTimeDifference(timeA: number, timeB: number): number;
declare function GetTimeOfLastPedWeaponDamage(ped: number, weaponHash: number): number;
declare function N_0x36b77bb84687c318(ped: number, weaponHash: number): number;
declare function GetTimeOffset(timeA: number, timeB: number): number;
declare function GetTimePositionInRecording(vehicle: number): number;
declare function GetTimeSinceLastArrest(): number;
declare function GetTimeSinceLastDeath(): number;
declare function GetTimeSinceLastInput(padIndex: number): number;
declare function N_0xd7d22f5592aed8ba(padIndex: number): number;
declare function GetTimeSincePlayerDroveAgainstTraffic(player: number): number;
declare function GetTimeSincePlayerDroveOnPavement(player: number): number;
declare function GetTimeSincePlayerHitPed(player: number): number;
declare function GetTimeSincePlayerHitVehicle(player: number): number;
declare function GetTimecycleModifierCount(): number;
declare function GetTimecycleModifierIndex(): number;
declare function GetTimecycleModifierIndexByName(modifierName: string): number;
declare function GetTimecycleModifierNameByIndex(modifierIndex: number): string;
declare function GetTimecycleModifierStrength(): number;
declare function GetTimecycleModifierVar(modifierName: string, varName: string): LuaMultiReturn<[boolean, number, number]>;
declare function GetTimecycleModifierVarCount(modifierName: string): number;
declare function GetTimecycleModifierVarNameByIndex(modifierName: string, modifierVarIndex: number): string;
declare function GetTimecycleTransitionModifierIndex(): number;
declare function N_0x459fd2c8d0ab78bc(): number;
declare function GetTimecycleVarCount(): number;
declare function GetTimecycleVarDefaultValueByIndex(varIndex: number): number;
declare function GetTimecycleVarNameByIndex(varIndex: number): string;
declare function GetTogglePausedRenderphasesStatus(): boolean;
declare function N_0xeb3dac2c86001e5e(): boolean;
declare function GetTotalDurationOfVehicleRecording(recording: number, script: string): number;
declare function GetTotalDurationOfVehicleRecordingId(id: number): number;
declare function GetTotalSuccessfulStuntJumps(): number;
declare function N_0x6856ec3d35c81ea4(): number;
declare function GetTrainCarriage(train: number, trailerNumber: number): number;
declare function GetTrainCurrentTrackNode(train: number): number;
declare function GetTrainDoorCount(train: number): number;
declare function GetTrainDoorOpenRatio(train: number, doorIndex: number): number;
declare function GetTvChannel(): number;
declare function GetTvVolume(): number;
declare function GetTyreHealth(vehicle: number, wheelIndex: number): number;
declare function GetTyreWearMultiplier(vehicle: number, wheelIndex: number): number;
declare function GetUsedCreatorModelMemoryPercentage(): number;
declare function N_0x3d3d8b3be5a83d35(): number;
declare function GetUsingnightvision(): boolean;
declare function IsNightvisionInactive(): boolean;
declare function IsNightvisionActive(): boolean;
declare function GetUsingseethrough(): boolean;
declare function IsSeethroughActive(): boolean;
declare function GetUtcTime(): LuaMultiReturn<[number, number, number, number, number, number]>;
declare function GetVariantComponent(componentHash: number, variantComponentIndex: number): LuaMultiReturn<[number, number, number]>;
declare function GetVariantProp(componentHash: number, variantPropIndex: number): LuaMultiReturn<[number, number, number]>;
declare function N_0xd81b7f27bc773e66(componentHash: number, variantPropIndex: number): LuaMultiReturn<[number, number, number]>;
declare function GetVehicleAcceleration(vehicle: number): number;
declare function GetVehicleAlarmTimeLeft(vehicle: number): number;
declare function GetVehicleAttachedToCargobob(cargobob: number): number;
declare function GetVehicleBodyHealth(vehicle: number): number;
declare function GetVehicleBombCount(aircraft: number): number;
declare function N_0xea12bd130d7569a1(aircraft: number): number;
declare function GetAircraftBombCount(aircraft: number): number;
declare function GetVehicleCanActivateParachute(vehicle: number): boolean;
declare function CanVehicleParachuteBeActivated(vehicle: number): boolean;
declare function GetVehicleCauseOfDestruction(vehicle: number): number;
declare function GetVehicleCheatPowerIncrease(vehicle: number): number;
declare function GetVehicleClass(vehicle: number): number;
declare function GetVehicleClassEstimatedMaxSpeed(vehicleClass: number): number;
declare function N_0x00c09f246abedd82(vehicleClass: number): number;
declare function GetVehicleClassMaxSpeed(vehicleClass: number): number;
declare function GetVehicleClassFromName(modelHash: number): number;
declare function GetVehicleClassMaxAcceleration(vehicleClass: number): number;
declare function GetVehicleClassMaxAgility(vehicleClass: number): number;
declare function GetVehicleClassMaxBraking(vehicleClass: number): number;
declare function GetVehicleClassMaxTraction(vehicleClass: number): number;
declare function GetVehicleClutch(vehicle: number): number;
declare function GetVehicleColor(vehicle: number): LuaMultiReturn<[number, number, number]>;
declare function GetVehicleColourCombination(vehicle: number): number;
declare function GetVehicleColours(vehicle: number): LuaMultiReturn<[number, number]>;
declare function GetVehicleCountermeasureCount(aircraft: number): number;
declare function N_0xf846aa63df56b804(aircraft: number): number;
declare function GetAircraftCountermeasureCount(aircraft: number): number;
declare function GetVehicleCrewEmblemRequestState(vehicle: number, p1: number): number;
declare function N_0xfe26117a5841b2ff(vehicle: number, p1: number): number;
declare function GetVehicleCurrentGear(vehicle: number): number;
declare function GetVehicleCurrentRpm(vehicle: number): number;
declare function GetVehicleCurrentSlipstreamDraft(vehicle: number): number;
declare function N_0x36492c2f0d134c56(vehicle: number): number;
declare function GetVehicleCustomPrimaryColour(vehicle: number): LuaMultiReturn<[number, number, number]>;
declare function GetVehicleCustomSecondaryColour(vehicle: number): LuaMultiReturn<[number, number, number]>;
declare function GetVehicleDashboardBoost(): number;
declare function GetVehicleDashboardColor(vehicle: number, color: number): number;
declare function GetVehicleDashboardColour(vehicle: number, color: number): number;
declare function GetVehicleDashboardFuel(): number;
declare function GetVehicleDashboardLights(): number;
declare function GetVehicleDashboardOilPressure(): number;
declare function GetVehicleDashboardOilTemp(): number;
declare function GetVehicleDashboardRpm(): number;
declare function GetVehicleDashboardSpeed(vehicle: number): number;
declare function GetVehicleDashboardTemp(): number;
declare function GetVehicleDashboardVacuum(): number;
declare function GetVehicleDashboardWaterTemp(): number;
declare function GetVehicleDefaultHorn(vehicle: number): number;
declare function GetVehicleDefaultHornIgnoreMods(vehicle: number): number;
declare function N_0xacb5dcca1ec76840(vehicle: number): number;
declare function GetVehicleHornHash(vehicle: number): number;
declare function GetVehicleDefaultHornVariation(vehicle: number): number;
declare function N_0xd53f3a29bce2580e(vehicle: number): number;
declare function N_0x22fecb546c276a30(vehicle: number): number;
declare function GetVehicleDeformationAtPos(vehicle: number, offsetX: number, offsetY: number, offsetZ: number): Vector3;
declare function GetVehicleDensityMultiplier(): number;
declare function GetVehicleDirtLevel(vehicle: number): number;
declare function GetVehicleDoorAngleRatio(vehicle: number, doorIndex: number): number;
declare function GetVehicleDoorLockStatus(vehicle: number): number;
declare function GetVehicleDoorsLockedForPlayer(vehicle: number, player: number): boolean;
declare function GetVehicleDrawnWheelAngleMult(vehicle: number): number;
declare function GetVehicleEngineHealth(vehicle: number): number;
declare function GetVehicleEngineTemperature(vehicle: number): number;
declare function GetVehicleEnveffScale(vehicle: number): number;
declare function GetVehiclePaintFade(vehicle: number): number;
declare function GetVehicleEstimatedMaxSpeed(vehicle: number): number;
declare function N_0x53af99baa671ca47(vehicle: number): number;
declare function GetVehicleMaxSpeed(vehicle: number): number;
declare function GetVehicleExtraColours(vehicle: number): LuaMultiReturn<[number, number]>;
declare function GetVehicleFlightNozzlePosition(aircraft: number): number;
declare function N_0xda62027c8bdb326e(aircraft: number): number;
declare function GetPlaneHoverModePercentage(aircraft: number): number;
declare function GetVehicleHoverModePercentage(aircraft: number): number;
declare function GetPlaneVtolDirection(aircraft: number): number;
declare function GetVehicleFuelLevel(vehicle: number): number;
declare function GetVehicleGravityAmount(vehicle: number): number;
declare function GetVehicleHandbrake(vehicle: number): boolean;
declare function GetVehicleHandlingFloat(vehicle: number, class_: string, fieldName: string): number;
declare function GetVehicleHandlingInt(vehicle: number, class_: string, fieldName: string): number;
declare function GetVehicleHandlingVector(vehicle: number, class_: string, fieldName: string): Vector3;
declare function GetVehicleHasKers(vehicle: number): boolean;
declare function N_0x50634e348c8d44ef(vehicle: number): boolean;
declare function HasVehicleKersBoost(vehicle: number): boolean;
declare function GetVehicleHasParachute(vehicle: number): boolean;
declare function HasVehicleParachute(vehicle: number): boolean;
declare function DoesVehicleHaveParachute(vehicle: number): boolean;
declare function GetVehicleHealthPercentage(vehicle: number): number;
declare function GetVehicleBodyHealth_2(vehicle: number): number;
declare function GetVehicleHighGear(vehicle: number): number;
declare function GetVehicleHomingLockonState(vehicle: number): number;
declare function N_0xe6b0e8cfc3633bf0(vehicle: number): number;
declare function GetVehicleIndexFromEntityIndex(entity: number): number;
declare function GetVehicleIndicatorLights(vehicle: number): number;
declare function GetVehicleIndividualDoorLockStatus(vehicle: number, doorIndex: number): number;
declare function N_0xca4ac3eaae46ec7b(vehicle: number, doorIndex: number): number;
declare function GetVehicleDoorDestroyType(vehicle: number, doorIndex: number): number;
declare function GetVehicleInteriorColor(vehicle: number, color: number): number;
declare function GetVehicleInteriorColour(vehicle: number, color: number): number;
declare function GetVehicleIsMercenary(vehicle: number): boolean;
declare function N_0xd4c4642cb7f50b5d(vehicle: number): boolean;
declare function GetVehicleLayoutHash(vehicle: number): number;
declare function GetVehicleLightMultiplier(vehicle: number): number;
declare function GetVehicleLightsState(vehicle: number): LuaMultiReturn<[boolean, boolean, boolean]>;
declare function GetVehicleLivery(vehicle: number): number;
declare function GetVehicleLiveryCount(vehicle: number): number;
declare function GetVehicleLockOnTarget(vehicle: number, entity: number): LuaMultiReturn<[boolean, number]>;
declare function GetVehicleOwner(vehicle: number, entity: number): LuaMultiReturn<[boolean, number]>;
declare function GetVehicleMaxBraking(vehicle: number): number;
declare function GetVehicleMaxNumberOfPassengers(vehicle: number): number;
declare function GetVehicleMaxTraction(vehicle: number): number;
declare function GetVehicleMod(vehicle: number, modType: number): number;
declare function GetVehicleModColor_1(vehicle: number): LuaMultiReturn<[number, number, number]>;
declare function GetVehicleModColor_1Name(vehicle: number, p1: boolean): string;
declare function N_0xb45085b721efd38c(vehicle: number, p1: boolean): string;
declare function GetVehicleModColor_2(vehicle: number): LuaMultiReturn<[number, number]>;
declare function GetVehicleModColor_2Name(vehicle: number): string;
declare function N_0x4967a516ed23a5a1(vehicle: number): string;
declare function GetVehicleModIdentifierHash(vehicle: number, modType: number, modIndex: number): number;
declare function N_0x4593cf82aa179706(vehicle: number, modType: number, modIndex: number): number;
declare function GetVehicleModData(vehicle: number, modType: number, modIndex: number): number;
declare function GetVehicleModKit(vehicle: number): number;
declare function GetVehicleModKitType(vehicle: number): number;
declare function GetVehicleModModifierValue(vehicle: number, modType: number, modIndex: number): number;
declare function GetVehicleModVariation(vehicle: number, modType: number): boolean;
declare function GetVehicleModelAcceleration(modelHash: number): number;
declare function GetVehicleModelEstimatedAgility(modelHash: number): number;
declare function N_0x53409b5163d5b846(modelHash: number): number;
declare function GetVehicleModelDownForce(modelHash: number): number;
declare function GetVehicleModelEstimatedMaxSpeed(modelHash: number): number;
declare function GetVehicleModelMaxSpeed(modelHash: number): number;
declare function GetVehicleModelMaxBraking(modelHash: number): number;
declare function GetVehicleModelMaxBrakingMaxMods(modelHash: number): number;
declare function N_0xbfba3ba79cff7ebf(modelHash: number): number;
declare function GetVehicleModelHandBrake(modelHash: number): number;
declare function GetVehicleModelMaxKnots(modelHash: number): number;
declare function N_0xc6ad107ddc9054cc(modelHash: number): number;
declare function GetVehicleModelMaxTraction(modelHash: number): number;
declare function GetVehicleModelNumberOfSeats(modelHash: number): number;
declare function GetVehicleModelMaxNumberOfPassengers(modelHash: number): number;
declare function GetVehicleModelValue(vehicleModel: number): number;
declare function N_0x5873c14a52d74236(vehicleModel: number): number;
declare function GetVehicleModelMonetaryValue(vehicleModel: number): number;
declare function GetVehicleNeonLightsColour(vehicle: number): LuaMultiReturn<[number, number, number]>;
declare function GetVehicleNextGear(vehicle: number): number;
declare function GetVehicleNodeIsGpsAllowed(nodeID: number): boolean;
declare function N_0xa2ae5c478b96e3b6(nodeID: number): boolean;
declare function GetSupportsGpsRouteFlag(nodeID: number): boolean;
declare function GetVehicleNodeIsSwitchedOff(nodeID: number): boolean;
declare function N_0x4f5070aa58f69279(nodeID: number): boolean;
declare function GetIsSlowRoadFlag(nodeID: number): boolean;
declare function GetVehicleNodePosition(nodeId: number): Vector3;
declare function GetVehicleNodeProperties(x: number, y: number, z: number): LuaMultiReturn<[boolean, number, number]>;
declare function GetVehicleNumberOfBrokenBones(vehicle: number): number;
declare function N_0x2c8cbfe1ea5fc631(vehicle: number): number;
declare function GetVehicleNumberOfBrokenOffBones(vehicle: number): number;
declare function N_0x42a4beb35d372407(vehicle: number): number;
declare function GetVehicleNumberOfPassengers(vehicle: number): number;
declare function GetVehicleNumberOfWheels(vehicle: number): number;
declare function GetVehicleNumberPlateText(vehicle: number): string;
declare function GetVehicleNumberPlateTextIndex(vehicle: number): number;
declare function GetVehicleOilLevel(vehicle: number): number;
declare function GetVehiclePedIsEntering(ped: number): number;
declare function SetExclusivePhoneRelationships(ped: number): number;
declare function GetVehiclePedIsIn(ped: number, lastVehicle: boolean): number;
declare function GetVehiclePedIsTryingToEnter(ped: number): number;
declare function GetVehiclePedIsUsing(ped: number): number;
declare function GetVehiclePetrolTankHealth(vehicle: number): number;
declare function GetVehiclePlateType(vehicle: number): number;
declare function GetVehicleRecordingId(recording: number, script: string): number;
declare function GetVehicleRoofLivery(vehicle: number): number;
declare function N_0x60190048c0764a26(vehicle: number): number;
declare function GetVehicleRoofLiveryCount(vehicle: number): number;
declare function N_0x5ecb40269053c0d4(vehicle: number): number;
declare function GetVehicleSteeringAngle(vehicle: number): number;
declare function GetVehicleSteeringScale(vehicle: number): number;
declare function GetVehicleSuspensionBounds(vehicle: number): LuaMultiReturn<[number, Vector3]>;
declare function N_0xdf7e3eeb29642c38(vehicle: number): LuaMultiReturn<[number, Vector3]>;
declare function GetVehicleSuspensionHeight(vehicle: number): number;
declare function GetVehicleThrottleOffset(vehicle: number): number;
declare function GetVehicleCurrentAcceleration(vehicle: number): number;
declare function GetVehicleTopSpeedModifier(vehicle: number): number;
declare function GetVehicleTrailerVehicle(vehicle: number, trailer: number): LuaMultiReturn<[boolean, number]>;
declare function GetVehicleTurboPressure(vehicle: number): number;
declare function GetVehicleTyreSmokeColor(vehicle: number): LuaMultiReturn<[number, number, number]>;
declare function GetVehicleTyresCanBurst(vehicle: number): boolean;
declare function GetVehicleWaypointProgress(vehicle: number): number;
declare function GetVehicleWaypointTargetPoint(vehicle: number): number;
declare function GetVehicleWeaponCapacity(vehicle: number, weaponIndex: number): number;
declare function N_0x8181ce2f25cb9bb7(vehicle: number, weaponIndex: number): number;
declare function GetVehicleWheelBrakePressure(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelFlags(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelHealth(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelIsPowered(vehicle: number, wheelIndex: number): boolean;
declare function GetVehicleWheelPower(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelRimColliderSize(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelRotationSpeed(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelSize(vehicle: number): number;
declare function GetVehicleWheelSpeed(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelSteeringAngle(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelSurfaceMaterial(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelSuspensionCompression(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelTireColliderSize(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelTireColliderWidth(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelTractionVectorLength(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelType(vehicle: number): number;
declare function GetVehicleWheelWidth(vehicle: number): number;
declare function GetVehicleWheelXOffset(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelYRotation(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelXrot(vehicle: number, wheelIndex: number): number;
declare function GetVehicleWheelieState(vehicle: number): number;
declare function GetVehicleWindowTint(vehicle: number): number;
declare function GetVehicleXenonLightsColor(vehicle: number): number;
declare function N_0x3dff319a831e0cdb(vehicle: number): number;
declare function GetVehicleHeadlightsColour(vehicle: number): number;
declare function GetVehicleXenonLightsColour(vehicle: number): number;
declare function GetVehicleXenonLightsCustomColor(vehicle: number): LuaMultiReturn<[boolean, number, number, number]>;
declare function GetWantedLevelParoleDuration(): number;
declare function N_0xa72200f51875fea4(): number;
declare function GetWantedLevelRadius(player: number): number;
declare function GetWantedLevelThreshold(wantedLevel: number): number;
declare function GetWarningMessageTitleHash(): number;
declare function GetWaterHeight(x: number, y: number, z: number, height: number): LuaMultiReturn<[boolean, number]>;
declare function GetWaterHeightNoWaves(x: number, y: number, z: number, height: number): LuaMultiReturn<[boolean, number]>;
declare function GetWaterQuadAlpha(waterQuad: number): LuaMultiReturn<[boolean, number, number, number, number]>;
declare function GetWaterQuadAtCoords(x: number, y: number): number;
declare function GetWaterQuadAtCoords_3d(x: number, y: number, z: number): number;
declare function GetWaterQuadBounds(waterQuad: number): LuaMultiReturn<[boolean, number, number, number, number]>;
declare function GetWaterQuadCount(): number;
declare function GetWaterQuadHasLimitedDepth(waterQuad: number, hasLimitedDepth: number): LuaMultiReturn<[boolean, number]>;
declare function GetWaterQuadIsInvisible(waterQuad: number, isInvisible: number): LuaMultiReturn<[boolean, number]>;
declare function GetWaterQuadLevel(waterQuad: number, waterQuadLevel: number): LuaMultiReturn<[boolean, number]>;
declare function GetWaterQuadNoStencil(waterQuad: number, noStencil: number): LuaMultiReturn<[boolean, number]>;
declare function GetWaterQuadType(waterQuad: number, waterType: number): LuaMultiReturn<[boolean, number]>;
declare function GetWaveQuadAmplitude(waveQuad: number, waveQuadAmplitude: number): LuaMultiReturn<[boolean, number]>;
declare function GetWaveQuadAtCoords(x: number, y: number): number;
declare function GetWaveQuadBounds(waveQuad: number): LuaMultiReturn<[boolean, number, number, number, number]>;
declare function GetWaveQuadCount(): number;
declare function GetWaveQuadDirection(waveQuad: number): LuaMultiReturn<[boolean, number, number]>;
declare function GetWaypointBlipEnumId(): number;
declare function GetBlipInfoIdIterator(): number;
declare function GetWaypointDistanceAlongRoute(p0: string, p1: number): number;
declare function GetWeaponAnimationOverride(ped: number): number;
declare function GetWeaponClipSize(weaponHash: number): number;
declare function GetWeaponComponentAccuracyModifier(componentHash: number): number;
declare function GetWeaponComponentCameraHash(componentHash: number): number;
declare function GetWeaponComponentClipSize(componentHash: number): number;
declare function GetWeaponComponentDamageModifier(componentHash: number): number;
declare function GetWeaponComponentHudStats(componentHash: number, outData: number): LuaMultiReturn<[boolean, number]>;
declare function GetWeaponComponentRangeDamageModifier(componentHash: number): number;
declare function GetWeaponComponentRangeModifier(componentHash: number): number;
declare function GetWeaponComponentReticuleHash(componentHash: number): number;
declare function GetWeaponComponentTypeModel(componentHash: number): number;
declare function GetWeaponComponentVariantExtraComponentCount(componentHash: number): number;
declare function N_0x6558ac7c17bfef58(componentHash: number): number;
declare function GetWeaponComponentVariantExtraComponentModel(componentHash: number, extraComponentIndex: number): number;
declare function N_0x4d1cb8dc40208a17(componentHash: number, extraComponentIndex: number): number;
declare function GetWeaponDamage(weaponHash: number, componentHash: number): number;
declare function N_0x3133b907d8b32053(weaponHash: number, componentHash: number): number;
declare function GetWeaponDamageModifier(weaponHash: number): number;
declare function GetWeaponDamageType(weaponHash: number): number;
declare function GetWeaponHudStats(weaponHash: number, outData: number): LuaMultiReturn<[boolean, number]>;
declare function GetWeaponObjectFromPed(ped: number, p1: boolean): number;
declare function GetWeaponObjectLiveryColor(weaponObject: number, camoComponentHash: number): number;
declare function N_0xb3ea4feabf41464b(weaponObject: number, camoComponentHash: number): number;
declare function GetWeaponObjectTintIndex(weapon: number): number;
declare function GetWeaponRecoilShakeAmplitude(weaponHash: number): number;
declare function GetWeaponTimeBetweenShots(weaponHash: number): number;
declare function N_0x065d2aacad8cf7a4(weaponHash: number): number;
declare function GetWeaponTintCount(weaponHash: number): number;
declare function GetWeaponTypeFromPickupType(pickupHash: number): number;
declare function N_0x08f96ca6c551ad51(pickupHash: number): number;
declare function GetWeaponHashFromPickup(pickupHash: number): number;
declare function GetWeapontypeGroup(weaponHash: number): number;
declare function GetWeapontypeModel(weaponHash: number): number;
declare function GetWeapontypeSlot(weaponHash: number): number;
declare function GetWeatherTypeTransition(): LuaMultiReturn<[number, number, number]>;
declare function GetWindDirection(): Vector3;
declare function GetWindSpeed(): number;
declare function GetWorldCoordFromScreenCoord(screenX: number, screenY: number): LuaMultiReturn<[number, Vector3]>;
declare function GetWorldPositionOfEntityBone(entity: number, boneIndex: number): Vector3;
declare function GetZoneAtCoords(x: number, y: number, z: number): number;
declare function GetZoneFromNameId(zoneName: string): number;
declare function GetZonePopschedule(zoneId: number): number;
declare function GetZoneScumminess(zoneId: number): number;
declare function GiveAchievementToPlayer(achievement: number): boolean;
declare function GiveDelayedWeaponToPed(ped: number, weaponHash: number, ammoCount: number, bForceInHand: boolean): void;
declare function GiveLoadoutToPed(ped: number, loadoutHash: number): void;
declare function N_0x68f8be6af5cdf8a6(ped: number, loadoutHash: number): void;
declare function GivePedHelmet(ped: number, cannotRemove: boolean, helmetFlag: number, textureIndex: number): void;
declare function GivePedNmMessage(ped: number): void;
declare function GivePedToPauseMenu(ped: number, p1: number): void;
declare function GivePlayerRagdollControl(player: number, toggle: boolean): void;
declare function GiveWeaponComponentToPed(ped: number, weaponHash: number, componentHash: number): void;
declare function GiveWeaponComponentToWeaponObject(weaponObject: number, addonHash: number): void;
declare function GiveWeaponObjectToPed(weaponObject: number, ped: number): void;
declare function GiveWeaponToPed(ped: number, weaponHash: number, ammoCount: number, isHidden: boolean, bForceInHand: boolean): void;
declare function GolfTrailGetMaxHeight(): number;
declare function N_0xa4819f5e23e2ffad(): number;
declare function GolfTrailGetVisualControlPoint(p0: number): Vector3;
declare function N_0xa4664972a9b8f8ba(p0: number): Vector3;
declare function GolfTrailSetColour(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number): void;
declare function N_0x12995f2e53ffa601(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number): void;
declare function GolfTrailSetEnabled(toggle: boolean): void;
declare function N_0xa51c4b86b71652ae(toggle: boolean): void;
declare function GolfTrailSetFacing(p0: boolean): void;
declare function N_0x06f761ea47c1d3ed(p0: boolean): void;
declare function GolfTrailSetFixedControlPoint(_type: number, xPos: number, yPos: number, zPos: number, p4: number, red: number, green: number, blue: number, alpha: number): void;
declare function N_0xb1bb03742917a5d6(_type: number, xPos: number, yPos: number, zPos: number, p4: number, red: number, green: number, blue: number, alpha: number): void;
declare function GolfTrailSetPath(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: boolean): void;
declare function N_0x312342e1a4874f3f(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: boolean): void;
declare function GolfTrailSetRadius(p0: number, p1: number, p2: number): void;
declare function N_0x2485d34e50a22e84(p0: number, p1: number, p2: number): void;
declare function GolfTrailSetShaderParams(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x9cfdd90b2b844bf7(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function GolfTrailSetTessellation(p0: number, p1: number): void;
declare function N_0xdbaa5ec848ba2d46(p0: number, p1: number): void;
declare function GrassLodResetScriptAreas(): void;
declare function N_0x302c91ab2d477f7e(): void;
declare function GrassLodShrinkScriptAreas(x: number, y: number, z: number, radius: number, p4: number, p5: number, p6: number): void;
declare function N_0x6d955f6a9e0295b1(x: number, y: number, z: number, radius: number, p4: number, p5: number, p6: number): void;
declare function HasAchievementBeenPassed(achievement: number): boolean;
declare function HasActionModeAssetLoaded(asset: string): boolean;
declare function HasAdditionalTextLoaded(slot: number): boolean;
declare function HasAnimDictLoaded(animDict: string): boolean;
declare function HasAnimEventFired(entity: number, actionHash: number): boolean;
declare function HasAnimSetLoaded(animSet: string): boolean;
declare function HasAsyncInstallFinished(): boolean;
declare function N_0x14832bf2aba53fc5(): boolean;
declare function HasBulletImpactedInArea(x: number, y: number, z: number, p3: number, p4: boolean, p5: boolean): boolean;
declare function HasBulletImpactedInBox(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: boolean): boolean;
declare function HasButtonCombinationJustBeenEntered(hash: number, amount: number): boolean;
declare function N_0x071e2a839de82d90(hash: number, amount: number): boolean;
declare function HasCheatStringJustBeenEntered(hash: number): boolean;
declare function N_0x557e43c447e700a8(hash: number): boolean;
declare function HasClipSetLoaded(clipSet: string): boolean;
declare function HasClosestObjectOfTypeBeenBroken(p0: number, p1: number, p2: number, p3: number, modelHash: number, p5: number): boolean;
declare function HasClosestObjectOfTypeBeenCompletelyDestroyed(x: number, y: number, z: number, radius: number, modelHash: number, p5: boolean): boolean;
declare function N_0x46494a2475701343(x: number, y: number, z: number, radius: number, modelHash: number, p5: boolean): boolean;
declare function HasCloudRequestsFinished(unused: number): LuaMultiReturn<[boolean, boolean]>;
declare function Nullify(unused: number): LuaMultiReturn<[boolean, boolean]>;
declare function HasCollisionForModelLoaded(model: number): boolean;
declare function HasCollisionLoadedAroundEntity(entity: number): boolean;
declare function HasCutFileLoaded(cutsceneName: string): boolean;
declare function N_0xa1c996c2a744262e(cutsceneName: string): boolean;
declare function HasCutsceneCutThisFrame(): boolean;
declare function N_0x708bdd8cd795b043(): boolean;
declare function HasCutsceneFinished(): boolean;
declare function HasCutsceneLoaded(): boolean;
declare function HasDirectorModeBeenTriggered(): boolean;
declare function N_0xa277800a9eae340e(): boolean;
declare function HasEntityAnimFinished(entity: number, animDict: string, animName: string, p3: number): boolean;
declare function HasEntityBeenDamagedByAnyObject(entity: number): boolean;
declare function HasEntityBeenDamagedByAnyPed(entity: number): boolean;
declare function HasEntityBeenDamagedByAnyVehicle(entity: number): boolean;
declare function HasEntityBeenDamagedByEntity(entity1: number, entity2: number, p2: boolean): boolean;
declare function HasEntityBeenDamagedByWeapon(entity: number, weaponHash: number, weaponType: number): boolean;
declare function HasEntityClearLosToEntity(entity1: number, entity2: number, flags: number): boolean;
declare function HasEntityClearLosToEntityInFront(entity1: number, entity2: number): boolean;
declare function HasEntityClearLosToEntity_2(entity1: number, entity2: number, traceType: number): number;
declare function N_0x394bde2a7bba031e(entity1: number, entity2: number, traceType: number): number;
declare function HasEntityCollidedWithAnything(entity: number): boolean;
declare function HasFilledVehiclePopulation(): boolean;
declare function N_0x91d6dd290888cbab(): boolean;
declare function HasForceCleanupOccurred(cleanupFlags: number): boolean;
declare function HasMinimapOverlayLoaded(id: number): boolean;
declare function HasModelLoaded(model: number): boolean;
declare function HasMultiplayerAudioDataLoaded(): boolean;
declare function N_0x544810ed9db6bbe6(): boolean;
declare function HasMultiplayerAudioDataUnloaded(): boolean;
declare function N_0x5b50abb1fe3746f4(): boolean;
declare function HasNamedPtfxAssetLoaded(fxName: string): boolean;
declare function HasNetworkTimeStarted(): boolean;
declare function N_0x46718aceedeafc84(): boolean;
declare function HasObjectBeenBroken(object: number): boolean;
declare function HasPedBeenDamagedByWeapon(ped: number, weaponHash: number, weaponType: number): boolean;
declare function HasPedGotWeapon(ped: number, weaponHash: number, p2: boolean): boolean;
declare function HasPedGotWeaponComponent(ped: number, weaponHash: number, componentHash: number): boolean;
declare function HasPedHeadBlendFinished(ped: number): boolean;
declare function HasPedPreloadPropDataFinished(ped: number): boolean;
declare function N_0x784002a632822099(ped: number): boolean;
declare function HasPedPreloadVariationDataFinished(ped: number): boolean;
declare function N_0x66680a92700f43df(ped: number): boolean;
declare function HasPedReceivedEvent(ped: number, eventId: number): boolean;
declare function HasPedheadshotImgUploadFailed(): boolean;
declare function N_0x876928dddfccc9cd(): boolean;
declare function HasPedheadshotImgUploadSucceeded(): boolean;
declare function N_0xe8a169e666cbc541(): boolean;
declare function HasPickupBeenCollected(pickup: number): boolean;
declare function HasPlayerBeenShotByCop(player: number, ms: number, p2: boolean): boolean;
declare function N_0xbc0753c9ca14b506(player: number, ms: number, p2: boolean): boolean;
declare function HasPlayerBeenSpottedInStolenVehicle(player: number): boolean;
declare function HasPlayerDamagedAtLeastOneNonAnimalPed(player: number): boolean;
declare function HasPlayerDamagedAtLeastOnePed(player: number): boolean;
declare function HasPlayerLeftTheWorld(player: number): boolean;
declare function HasPreloadModsFinished(p0: number): boolean;
declare function HasPtfxAssetLoaded(): boolean;
declare function HasResumedFromSuspend(): boolean;
declare function N_0xe8b9c0ec9e183f35(): boolean;
declare function HasScaleformContainerMovieLoadedIntoParent(scaleformHandle: number): boolean;
declare function HasScaleformMovieFilenameLoaded(scaleformName: string): boolean;
declare function N_0x0c1c5d756fb5f337(scaleformName: string): boolean;
declare function HasNamedScaleformMovieLoaded(scaleformName: string): boolean;
declare function HasScaleformMovieLoaded(scaleformHandle: number): boolean;
declare function HasScaleformScriptHudMovieLoaded(hudComponent: number): boolean;
declare function HasHudScaleformLoaded(hudComponent: number): boolean;
declare function HasScriptLoaded(scriptName: string): boolean;
declare function HasScriptWithNameHashLoaded(scriptHash: number): boolean;
declare function HasStreamedScriptLoaded(scriptHash: number): boolean;
declare function HasSoundFinished(soundId: number): boolean;
declare function HasStealthModeAssetLoaded(asset: string): boolean;
declare function HasStreamedTextureDictLoaded(textureDict: string): boolean;
declare function HasThisAdditionalTextLoaded(gxt: string, slot: number): boolean;
declare function HasThisCutsceneLoaded(cutsceneName: string): boolean;
declare function HasVehicleAssetLoaded(vehicleAsset: number): boolean;
declare function HasVehicleGotProjectileAttached(driver: number, vehicle: number, weaponHash: number, p3: number): boolean;
declare function HasVehiclePhoneExplosiveDevice(): boolean;
declare function N_0x6adaabd3068c5235(): boolean;
declare function HasVehicleRecordingBeenLoaded(recording: number, script: string): boolean;
declare function HasWeaponAssetLoaded(weaponHash: number): boolean;
declare function HasWeaponGotWeaponComponent(weapon: number, addonHash: number): boolean;
declare function HaveAllStreamingRequestsCompleted(ped: number): boolean;
declare function N_0x7350823473013c02(ped: number): boolean;
declare function HasStreamedPedAssetsLoaded(ped: number): boolean;
declare function HaveCreditsReachedEnd(): boolean;
declare function N_0x075f1d57402c93ba(): boolean;
declare function HaveVehicleModsStreamedIn(vehicle: number): boolean;
declare function N_0x9a83f5f9963775ef(vehicle: number): boolean;
declare function IsVehicleModLoadDone(vehicle: number): boolean;
declare function HideAreaAndVehicleNameThisFrame(): void;
declare function N_0xa4dede28b1814289(): void;
declare function HideHelpTextThisFrame(): void;
declare function HideHudAndRadarThisFrame(): void;
declare function HideHudComponentThisFrame(id: number): void;
declare function HideLoadingOnFadeThisFrame(): void;
declare function HideMinimapExteriorMapThisFrame(): void;
declare function DisableRadarThisFrame(): void;
declare function HideMinimapInteriorMapThisFrame(): void;
declare function N_0x20fe7fdfeead38c0(): void;
declare function HideNumberOnBlip(blip: number): void;
declare function HidePedBloodDamageByZone(ped: number, p1: number, p2: boolean): void;
declare function N_0x62ab793144de75dc(ped: number, p1: number, p2: boolean): void;
declare function HidePedWeaponForScriptedCutscene(ped: number, toggle: boolean): void;
declare function HidePortablePickupWhenDetached(pickup: number, toggle: boolean): void;
declare function N_0x867458251d47ccb2(pickup: number, toggle: boolean): void;
declare function HidePickup(pickup: number, toggle: boolean): void;
declare function HideScriptedHudComponentThisFrame(id: number): void;
declare function HideVehicleTombstone(vehicle: number, toggle: boolean): void;
declare function HintAmbientAudioBank(p0: number, p1: number): number;
declare function HintScriptAudioBank(p0: number, p1: number): number;
declare function HiredLimo(p0: number, p1: number): void;
declare function N_0x792271ab35c356a4(p0: number, p1: number): void;
declare function HudDisplayLoadingScreenTips(): void;
declare function N_0x488043841bbe156f(): void;
declare function HudForceWeaponWheel(show: boolean): void;
declare function N_0xeb354e5376bc81a7(show: boolean): void;
declare function ShowWeaponWheel(show: boolean): void;
declare function HudSetWeaponWheelTopSlot(weaponHash: number): void;
declare function N_0x72c1056d678bb7d8(weaponHash: number): void;
declare function HudWeaponWheelSetSlotHash(weaponHash: number): void;
declare function HudWeaponWheelGetSelectedHash(): number;
declare function N_0xa48931185f0536fe(): number;
declare function HudWeaponWheelGetSlotHash(weaponTypeIndex: number): number;
declare function N_0xa13e93403f26c812(weaponTypeIndex: number): number;
declare function HudWeaponWheelIgnoreControlInput(toggle: boolean): void;
declare function N_0x14c9fdcc41f81f63(toggle: boolean): void;
declare function HudWeaponWheelIgnoreSelection(): void;
declare function BlockWeaponWheelThisFrame(): void;
declare function N_0x0afc4af510774b47(): void;
declare function IgnoreNextRestart(toggle: boolean): void;
declare function InitCreatorBudget(): void;
declare function N_0xb5a4db34fe89b88a(): void;
declare function LoadMissionCreatorData(): void;
declare function InitShopPedComponent(outComponent: number): void;
declare function InitShopPedProp(outProp: number): void;
declare function InstantlyFillPedPopulation(): void;
declare function N_0x4759cc730f947c81(): void;
declare function InstantlyFillVehiclePopulation(): void;
declare function N_0x48adc8a773564670(): void;
declare function IntToParticipantindex(value: number): number;
declare function IntToPlayerindex(value: number): number;
declare function InterruptConversation(p0: number): LuaMultiReturn<[number, number]>;
declare function InterruptConversationAndPause(ped: number, p1: string, p2: string): void;
declare function N_0x8a694d7a68f8dc38(ped: number, p1: string, p2: string): void;
declare function InvalidateIdleCam(): void;
declare function N_0xf4f2c0d4ee209e20(): void;
declare function InvalidateVehicleIdleCam(): void;
declare function N_0x9e4cfff989258472(): void;
declare function InvokeFunctionReference(referenceIdentity: string, argsSerialized: string, argsLength: number, retvalLength: number): LuaMultiReturn<[string, number]>;
declare function IsAceAllowed(object: string): boolean;
declare function IsAimCamActive(): boolean;
declare function IsAimCamThirdPersonActive(): boolean;
declare function N_0x74bd83ea840f6bc9(): boolean;
declare function IsAlarmPlaying(alarmName: string): boolean;
declare function IsAmbientSpeechDisabled(ped: number): boolean;
declare function IsAmbientSpeechPlaying(ped: number): boolean;
declare function IsAmbientZoneEnabled(ambientZone: string): boolean;
declare function IsAnEntity(handle: number): boolean;
declare function IsAnimalVocalizationPlaying(pedHandle: number): boolean;
declare function N_0xc265df9fb44a9fbd(pedHandle: number): boolean;
declare function IsAnyAirDefenseZoneInsideSphere(x: number, y: number, z: number, radius: number, SphereIndex: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xdab963831dbfd3f4(x: number, y: number, z: number, radius: number, SphereIndex: number): LuaMultiReturn<[boolean, number]>;
declare function IsAirDefenseZoneInsideSphere(x: number, y: number, z: number, radius: number, SphereIndex: number): LuaMultiReturn<[boolean, number]>;
declare function IsAnyEntityAttachedToHandlerFrame(vehicle: number): boolean;
declare function N_0x62ca17b74c435651(vehicle: number): boolean;
declare function IsAnyEntityEntirelyInsideGarage(garageHash: number, p1: boolean, p2: boolean, p3: boolean, p4: number): boolean;
declare function N_0x673ed815d6e323b7(garageHash: number, p1: boolean, p2: boolean, p3: boolean, p4: number): boolean;
declare function IsAnyHostilePedNearPoint(ped: number, x: number, y: number, z: number, radius: number): boolean;
declare function N_0x68772db2b2526f9f(ped: number, x: number, y: number, z: number, radius: number): boolean;
declare function IsAnyObjectNearPoint(x: number, y: number, z: number, range: number, p4: boolean): boolean;
declare function IsAnyPedNearPoint(x: number, y: number, z: number, radius: number): boolean;
declare function IsAnyPedRappellingFromHeli(vehicle: number): boolean;
declare function N_0x291e373d483e7ee7(vehicle: number): boolean;
declare function AnyPassengersRappeling(vehicle: number): boolean;
declare function IsAnyPassengerRappelingFromVehicle(vehicle: number): boolean;
declare function IsAnyPedShootingInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: boolean, p7: boolean): boolean;
declare function IsAnySpeechPlaying(ped: number): boolean;
declare function IsAnyVehicleNearPoint(x: number, y: number, z: number, radius: number): boolean;
declare function IsAreaOccupied(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: boolean, p8: boolean, p9: boolean, p10: boolean, p11: number, p12: boolean): boolean;
declare function IsAudioSceneActive(scene: string): boolean;
declare function IsAussieVersion(): boolean;
declare function IsAutoSaveInProgress(): boolean;
declare function IsBigVehicle(vehicle: number): boolean;
declare function IsBigmapActive(): boolean;
declare function IsBigmapFull(): boolean;
declare function IsBitSet(address: number, offset: number): boolean;
declare function IsBlipFlashing(blip: number): boolean;
declare function IsBlipOnMinimap(blip: number): boolean;
declare function IsBlipShortRange(blip: number): boolean;
declare function IsBoatAnchoredAndFrozen(vehicle: number): boolean;
declare function N_0xb0ad1238a709b1a2(vehicle: number): boolean;
declare function IsBonnetCinematicCamRendering(): boolean;
declare function N_0xd7360051c885628b(): boolean;
declare function IsBulletInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, ownedByPlayer: boolean): boolean;
declare function IsBulletInArea(x: number, y: number, z: number, radius: number, ownedByPlayer: boolean): boolean;
declare function IsBulletInBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
declare function IsCamActive(cam: number): boolean;
declare function IsCamInterpolating(cam: number): boolean;
declare function IsCamPlayingAnim(cam: number, animName: string, animDictionary: string): boolean;
declare function IsCamRendering(cam: number): boolean;
declare function IsCamShaking(cam: number): boolean;
declare function IsCamSplinePaused(p0: number): boolean;
declare function IsCinematicCamInputActive(): boolean;
declare function N_0xf5f1e89a970b7796(): boolean;
declare function IsCinematicCamActive(): boolean;
declare function IsCinematicCamRendering(): boolean;
declare function IsCinematicCamShaking(): boolean;
declare function IsCinematicIdleCamRendering(): boolean;
declare function N_0xca9d2aa3e326d720(): boolean;
declare function IsCinematicShotActive(p0: number): boolean;
declare function IsCollisionMarkedOutside(x: number, y: number, z: number): boolean;
declare function N_0xeea5ac2eda7c33e8(x: number, y: number, z: number): boolean;
declare function AreCoordsCollidingWithExterior(x: number, y: number, z: number): boolean;
declare function IsCommandLineBenchmarkValueSet(): boolean;
declare function N_0xa049a5be0f04f2f8(): boolean;
declare function IsCommerceDataValid(): boolean;
declare function N_0xea14eef5b7cd2c30(): boolean;
declare function IsCommerceStoreOpen(): boolean;
declare function N_0x2eac52b4019e2782(): boolean;
declare function IsContentItemLocked(itemHash: number): boolean;
declare function IsOutfitEmpty(itemHash: number): boolean;
declare function IsDlcDataEmpty(itemHash: number): boolean;
declare function IsControlEnabled(padIndex: number, control: number): boolean;
declare function IsControlJustPressed(padIndex: number, control: number): boolean;
declare function IsControlJustReleased(padIndex: number, control: number): boolean;
declare function IsControlPressed(padIndex: number, control: number): boolean;
declare function IsControlReleased(padIndex: number, control: number): boolean;
declare function IsConversationPedDead(ped: number): boolean;
declare function IsCopPedInArea_3d(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
declare function IsCopVehicleInArea_3d(x1: number, x2: number, y1: number, y2: number, z1: number, z2: number): boolean;
declare function IsCutsceneActive(): boolean;
declare function IsCutscenePlaybackFlagSet(flag: number): boolean;
declare function N_0x71b74d2ae19338d0(flag: number): boolean;
declare function IsCutscenePlaying(): boolean;
declare function IsDamageTrackerActiveOnNetworkId(netID: number): boolean;
declare function IsDamageTrackerActiveOnPlayer(player: number): boolean;
declare function N_0xb2092a1eaa7fd45f(player: number): boolean;
declare function IsDecalAlive(decal: number): boolean;
declare function IsDisabledControlJustPressed(padIndex: number, control: number): boolean;
declare function IsDisabledControlJustReleased(padIndex: number, control: number): boolean;
declare function IsDisabledControlPressed(padIndex: number, control: number): boolean;
declare function IsDisabledControlReleased(padIndex: number, control: number): boolean;
declare function N_0xfb6c4072e9a32e92(padIndex: number, control: number): boolean;
declare function IsDlcPresent(dlcHash: number): boolean;
declare function IsDlcVehicleMod(hash: number): boolean;
declare function N_0x0564b9ff9631b82c(hash: number): boolean;
declare function IsDoorClosed(doorHash: number): boolean;
declare function IsDoorRegisteredWithSystem(doorHash: number): boolean;
declare function N_0xc153c43ea202c8c1(doorHash: number): boolean;
declare function DoesDoorExist(doorHash: number): boolean;
declare function IsDrivebyTaskUnderneathDrivingTask(ped: number): boolean;
declare function IsDuiAvailable(duiObject: number): boolean;
declare function IsDuplicityVersion(): boolean;
declare function IsDurangoVersion(): boolean;
declare function IsEntityAMissionEntity(entity: number): boolean;
declare function IsEntityAPed(entity: number): boolean;
declare function IsEntityAVehicle(entity: number): boolean;
declare function IsEntityAnObject(entity: number): boolean;
declare function IsEntityAtCoord(entity: number, xPos: number, yPos: number, zPos: number, xSize: number, ySize: number, zSize: number, p7: boolean, p8: boolean, p9: number): boolean;
declare function IsEntityAtEntity(entity1: number, entity2: number, xSize: number, ySize: number, zSize: number, p5: boolean, p6: boolean, p7: number): boolean;
declare function IsEntityAttached(entity: number): boolean;
declare function IsEntityAttachedToAnyObject(entity: number): boolean;
declare function IsEntityAttachedToAnyPed(entity: number): boolean;
declare function IsEntityAttachedToAnyVehicle(entity: number): boolean;
declare function IsEntityAttachedToEntity(_from: number, to: number): boolean;
declare function IsEntityAttachedToHandlerFrame(vehicle: number, entity: number): boolean;
declare function SetPedEnabledBikeRingtone(vehicle: number, entity: number): boolean;
declare function IsVehicleNearEntity(vehicle: number, entity: number): boolean;
declare function IsEntityDead(entity: number): boolean;
declare function IsEntityFocus(entity: number): boolean;
declare function IsEntityGhostedToLocalPlayer(entity: number): boolean;
declare function N_0x21d04d7bc538c146(entity: number): boolean;
declare function IsEntityAGhost(entity: number): boolean;
declare function IsEntityInAir(entity: number): boolean;
declare function IsEntityInAngledArea(entity: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, debug: boolean, includez: boolean, p10: number): boolean;
declare function IsEntityInArea(entity: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p7: boolean, p8: boolean, p9: number): boolean;
declare function IsEntityInWater(entity: number): boolean;
declare function IsEntityInZone(entity: number, zone: string): boolean;
declare function IsEntityOccluded(entity: number): boolean;
declare function IsEntityOnFire(entity: number): boolean;
declare function IsEntityOnScreen(entity: number): boolean;
declare function IsEntityPlayingAnim(entity: number, animDict: string, animName: string, taskFlag: number): boolean;
declare function IsEntityPositionFrozen(entity: number): boolean;
declare function IsEntityStatic(entity: number): boolean;
declare function IsEntityTouchingEntity(entity: number, targetEntity: number): boolean;
declare function IsEntityTouchingModel(entity: number, modelHash: number): boolean;
declare function IsEntityUpright(entity: number, angle: number): boolean;
declare function IsEntityUpsidedown(entity: number): boolean;
declare function IsEntityVisible(entity: number): boolean;
declare function IsEntityVisibleToScript(entity: number): boolean;
declare function IsEntityWaitingForWorldCollision(entity: number): boolean;
declare function IsExplosionActiveInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
declare function N_0x6070104b699b2ef4(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
declare function IsExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): boolean;
declare function IsExplosionInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
declare function IsExplosionInSphere(explosionType: number, x: number, y: number, z: number, radius: number): boolean;
declare function IsFirstPersonAimCamActive(): boolean;
declare function IsFlashLightOn(ped: number): boolean;
declare function SetWeaponSmokegrenadeAssigned(ped: number): boolean;
declare function IsFloatingHelpTextOnScreen(hudIndex: number): boolean;
declare function N_0x2432784aca090da4(hudIndex: number): boolean;
declare function IsFollowPedCamActive(): boolean;
declare function IsFollowVehicleCamActive(): boolean;
declare function IsFrontendFading(): boolean;
declare function IsFrontendReadyForControl(): boolean;
declare function N_0x3bab9a4e4f2ff5c7(): boolean;
declare function IsGameInControlOfMusic(): boolean;
declare function IsGameplayCamLookingBehind(): boolean;
declare function IsGameplayCamRendering(): boolean;
declare function IsGameplayCamShaking(): boolean;
declare function IsGameplayHintActive(): boolean;
declare function IsGarageEmpty(garageHash: number, p1: boolean, p2: number): boolean;
declare function IsHandlerFrameAboveContainer(handler: number, container: number): boolean;
declare function N_0x89d630cf5ea96d23(handler: number, container: number): boolean;
declare function IsHeliLandingAreaBlocked(vehicle: number): boolean;
declare function N_0x634148744f385576(vehicle: number): boolean;
declare function IsHeliPartBroken(vehicle: number, p1: boolean, p2: boolean, p3: boolean): boolean;
declare function IsHelpMessageBeingDisplayed(): boolean;
declare function IsHelpMessageFadingOut(): boolean;
declare function IsHelpMessageOnScreen(): boolean;
declare function IsHornActive(vehicle: number): boolean;
declare function IsHoveringOverMissionCreatorBlip(): boolean;
declare function N_0x4167efe0527d706e(): boolean;
declare function IsHudComponentActive(id: number): boolean;
declare function IsHudHidden(): boolean;
declare function IsHudPreferenceSwitchedOn(): boolean;
declare function IsInItemset(p0: number, p1: number): boolean;
declare function IsInPowerSavingMode(): boolean;
declare function N_0x684a41975f077262(): boolean;
declare function IsInVehicleCamDisabled(): boolean;
declare function N_0x4f32c0d5a90a9b40(): boolean;
declare function IsIncidentValid(incidentId: number): boolean;
declare function IsInteriorCapped(interiorID: number): boolean;
declare function IsInteriorDisabled(interior: number): boolean;
declare function IsInteriorEntitySetActive(interior: number, entitySetName: string): boolean;
declare function N_0x35f7dd45e8c0a16d(interior: number, entitySetName: string): boolean;
declare function IsInteriorPropEnabled(interior: number, entitySetName: string): boolean;
declare function IsInteriorReady(interiorID: number): boolean;
declare function IsInteriorRenderingDisabled(): boolean;
declare function IsInteriorScene(): boolean;
declare function IsIplActive(iplName: string): boolean;
declare function IsItemsetValid(p0: number): boolean;
declare function IsLookInverted(): boolean;
declare function IsMemoryCardInUse(): boolean;
declare function IsMessageBeingDisplayed(): boolean;
declare function IsMinigameInProgress(): boolean;
declare function IsMinimapInInterior(): boolean;
declare function N_0x9049fe339d5f6f6f(): boolean;
declare function IsMinimapRendering(): boolean;
declare function N_0xaf754f20eb5cd51a(): boolean;
declare function IsRadarEnabled(): boolean;
declare function IsMissionCompletePlaying(): boolean;
declare function IsMissionCompleteReadyForUi(): boolean;
declare function N_0x6f259f82d873b8b8(): boolean;
declare function IsMissionCreatorBlip(blip: number): boolean;
declare function IsMissionNewsStoryUnlocked(newsStory: number): boolean;
declare function GetNumberOfPassengerVoiceVariations(newsStory: number): boolean;
declare function IsMissionTrain(vehicle: number): boolean;
declare function IsMobilePhoneCallOngoing(): boolean;
declare function IsMobilePhoneRadioActive(): boolean;
declare function IsModelAPed(model: number): boolean;
declare function IsModelAVehicle(model: number): boolean;
declare function IsModelInCdimage(model: number): boolean;
declare function IsModelValid(model: number): boolean;
declare function IsMountedWeaponTaskUnderneathDrivingTask(ped: number): boolean;
declare function IsMouseCursorAboveInstructionalButtons(): boolean;
declare function N_0x3d9acb1eb139e702(): boolean;
declare function IsMoveBlendRatioRunning(ped: number): boolean;
declare function IsMoveBlendRatioSprinting(ped: number): boolean;
declare function IsMoveBlendRatioStill(ped: number): boolean;
declare function IsMoveBlendRatioWalking(ped: number): boolean;
declare function IsMpGamerTagActive(gamerTagId: number): boolean;
declare function N_0x4e929e7a5796fd26(gamerTagId: number): boolean;
declare function IsMpGamerTagFree(gamerTagId: number): boolean;
declare function AddTrevorRandomModifier(gamerTagId: number): boolean;
declare function IsMpGamerTagMovieActive(): boolean;
declare function N_0x6e0eb3eb47c8d7aa(): boolean;
declare function HasMpGamerTag(): boolean;
declare function IsMultiplayerChatActive(): boolean;
declare function IsTextChatActive(): boolean;
declare function IsMusicOneshotPlaying(): boolean;
declare function N_0xa097ab275061fb21(): boolean;
declare function IsNamedRendertargetLinked(modelHash: number): boolean;
declare function IsNamedRendertargetRegistered(name: string): boolean;
declare function IsNavigatingMenuContent(): number;
declare function N_0x4e3cd0ef8a489541(): number;
declare function IsNavmeshLoadedInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
declare function IsNavmeshRequiredRegionOwnedByAnyThread(): boolean;
declare function N_0x705a844002b39dc0(): boolean;
declare function IsNetworkIdOwnedByParticipant(netId: number): boolean;
declare function N_0xa1607996431332df(netId: number): boolean;
declare function NetworkCanNetworkIdBeSeen(netId: number): boolean;
declare function IsNetworkLoadingScene(): boolean;
declare function IsNewLoadSceneActive(): boolean;
declare function IsNewLoadSceneLoaded(): boolean;
declare function IsNextWeatherType(weatherType: string): boolean;
declare function IsNuiFocusKeepingInput(): boolean;
declare function IsNuiFocused(): boolean;
declare function IsObjectAPickup(object: number): boolean;
declare function N_0xfc481c641ebbd27d(object: number): boolean;
declare function IsObjectAPortablePickup(object: number): boolean;
declare function N_0x0378c08504160d0d(object: number): boolean;
declare function IsObjectEntirelyInsideGarage(garageHash: number, entity: number, p2: number, p3: number): boolean;
declare function N_0x372ef6699146a1e4(garageHash: number, entity: number, p2: number, p3: number): boolean;
declare function IsObjectNearPoint(objectHash: number, x: number, y: number, z: number, range: number): boolean;
declare function IsObjectPartiallyInsideGarage(garageHash: number, entity: number, p2: number): boolean;
declare function N_0xf0eed5a6bc7b237a(garageHash: number, entity: number, p2: number): boolean;
declare function IsObjectVisible(object: number): boolean;
declare function IsObjectWithinBrainActivationRange(object: number): boolean;
declare function IsOnlinePoliciesMenuActive(): boolean;
declare function N_0x6f72cd94f7b5b68c(): boolean;
declare function IsOrbisVersion(): boolean;
declare function IsPauseMenuActive(): boolean;
declare function IsPauseMenuRestarting(): boolean;
declare function IsPcVersion(): boolean;
declare function IsPedAPlayer(ped: number): boolean;
declare function IsPedActiveInScenario(ped: number): boolean;
declare function IsPedAimingFromCover(ped: number): boolean;
declare function IsPedArmed(ped: number, typeFlags: number): boolean;
declare function IsPedBeingArrested(ped: number): boolean;
declare function IsPedBeingJacked(ped: number): boolean;
declare function IsPedBeingStealthKilled(ped: number): boolean;
declare function IsPedBeingStunned(ped: number, p1: number): boolean;
declare function IsPedBlushColorValid(colorID: number): boolean;
declare function N_0x604e810189ee3a59(colorID: number): boolean;
declare function IsPedBlushColorValid_2(colorId: number): boolean;
declare function N_0xf41b5d290c99a3d6(colorId: number): boolean;
declare function IsPedBodyBlemishValid(colorID: number): boolean;
declare function N_0x09e7eca981d9b210(colorID: number): boolean;
declare function IsPedClimbing(ped: number): boolean;
declare function IsPedComponentVariationGen9Exclusive(ped: number, componentId: number, drawableId: number): boolean;
declare function IsPedComponentVariationValid(ped: number, componentId: number, drawableId: number, textureId: number): boolean;
declare function IsPedCuffed(ped: number): boolean;
declare function IsPedCurrentWeaponSilenced(ped: number): boolean;
declare function IsPedDeadOrDying(ped: number, p1: boolean): boolean;
declare function IsPedDefensiveAreaActive(ped: number, p1: boolean): boolean;
declare function N_0xba63d9fe45412247(ped: number, p1: boolean): boolean;
declare function IsPedDiving(ped: number): boolean;
declare function IsPedDoingBeastJump(ped: number): boolean;
declare function N_0x451d05012ccec234(ped: number): boolean;
declare function IsPedDoingDriveby(ped: number): boolean;
declare function IsPedDucking(ped: number): boolean;
declare function IsPedEvasiveDiving(ped: number, evadingEntity: number): LuaMultiReturn<[boolean, number]>;
declare function IsPedExclusiveDriverOfVehicle(ped: number, vehicle: number, outIndex: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xb09d25e77c33eb3f(ped: number, vehicle: number, outIndex: number): LuaMultiReturn<[boolean, number]>;
declare function IsPedFacingPed(ped: number, otherPed: number, angle: number): boolean;
declare function IsPedFalling(ped: number): boolean;
declare function IsPedFatallyInjured(ped: number): boolean;
declare function IsPedFleeing(ped: number): boolean;
declare function IsPedGettingIntoAVehicle(ped: number): boolean;
declare function IsPedGettingUp(ped: number): boolean;
declare function IsPedGoingIntoCover(ped: number): boolean;
declare function IsPedGroupMember(ped: number, groupId: number): boolean;
declare function IsPedHairColorValid(colorID: number): boolean;
declare function N_0xe0d36e5d9e99cc21(colorID: number): boolean;
declare function IsPedHairColorValid_2(colorId: number): boolean;
declare function N_0xed6d8e27a43b8cde(colorId: number): boolean;
declare function IsPedHangingOnToVehicle(ped: number): boolean;
declare function IsPedHeadingTowardsPosition(ped: number, x: number, y: number, z: number, p4: number): boolean;
declare function N_0xfcf37a457cb96dc0(ped: number, x: number, y: number, z: number, p4: number): boolean;
declare function IsPedHeadtrackingEntity(ped: number, entity: number): boolean;
declare function IsPedHeadtrackingPed(ped1: number, ped2: number): boolean;
declare function IsPedHelmetUnk(ped: number): boolean;
declare function N_0xb9496ce47546db2c(ped: number): boolean;
declare function IsPedHuman(ped: number): boolean;
declare function IsPedHurt(ped: number): boolean;
declare function IsPedInAnyBoat(ped: number): boolean;
declare function IsPedInAnyHeli(ped: number): boolean;
declare function IsPedInAnyPlane(ped: number): boolean;
declare function IsPedInAnyPoliceVehicle(ped: number): boolean;
declare function IsPedInAnySub(ped: number): boolean;
declare function IsPedInAnyTaxi(ped: number): boolean;
declare function IsPedInAnyTrain(ped: number): boolean;
declare function IsPedInAnyVehicle(ped: number, atGetIn: boolean): boolean;
declare function IsPedInCombat(ped: number, target: number): boolean;
declare function IsPedInCover(ped: number, exceptUseWeapon: boolean): boolean;
declare function IsPedInCoverFacingLeft(ped: number): boolean;
declare function IsPedInCurrentConversation(ped: number): boolean;
declare function IsPedInFlyingVehicle(ped: number): boolean;
declare function IsPedInGroup(ped: number): boolean;
declare function IsPedInHighCover(ped: number): boolean;
declare function N_0x6a03bf943d767c93(ped: number): boolean;
declare function IsPedStandingInCover(ped: number): boolean;
declare function IsPedInMeleeCombat(ped: number): boolean;
declare function IsPedInModel(ped: number, modelHash: number): boolean;
declare function IsPedInParachuteFreeFall(ped: number): boolean;
declare function IsPedInVehicle(ped: number, vehicle: number, atGetIn: boolean): boolean;
declare function IsPedInWrithe(ped: number): boolean;
declare function IsPedInjured(ped: number): boolean;
declare function IsPedJacking(ped: number): boolean;
declare function IsPedJumping(ped: number): boolean;
declare function IsPedJumpingOutOfVehicle(ped: number): boolean;
declare function IsPedLipstickColorValid(colorID: number): boolean;
declare function N_0x0525a2c2562f3cd4(colorID: number): boolean;
declare function IsPedLipstickColorValid_2(colorId: number): boolean;
declare function N_0x3e802f11fbe27674(colorId: number): boolean;
declare function IsPedMale(ped: number): boolean;
declare function IsPedModel(ped: number, modelHash: number): boolean;
declare function IsPedOnAnyBike(ped: number): boolean;
declare function IsPedOnFoot(ped: number): boolean;
declare function IsPedOnMount(ped: number): boolean;
declare function IsPedOnSpecificVehicle(ped: number, vehicle: number): boolean;
declare function IsPedOnVehicle(ped: number): boolean;
declare function IsPedOpeningADoor(ped: number): boolean;
declare function N_0x26af0e8e30bd2a2c(ped: number): boolean;
declare function IsPedPerformingDependentComboLimit(ped: number): boolean;
declare function N_0xebd0edba5be957cf(ped: number): boolean;
declare function IsPedPerformingMeleeAction(ped: number): boolean;
declare function N_0xdcca191df9980fd7(ped: number): boolean;
declare function IsPedPerformingStealthKill(ped: number): boolean;
declare function IsPedPlantingBomb(ped: number): boolean;
declare function IsPedPlayingBaseClipInScenario(ped: number): boolean;
declare function N_0x621c6e4729388e41(ped: number): boolean;
declare function IsPedProne(ped: number): boolean;
declare function IsPedRagdoll(ped: number): boolean;
declare function IsPedReloading(ped: number): boolean;
declare function IsPedRespondingToEvent(ped: number, event: number): boolean;
declare function IsPedRingtonePlaying(ped: number): boolean;
declare function IsPedRunning(ped: number): boolean;
declare function IsPedRunningArrestTask(ped: number): boolean;
declare function IsPedRunningMeleeTask(ped: number): boolean;
declare function N_0xd1871251f3b5acd7(ped: number): boolean;
declare function IsPedRunningMobilePhoneTask(ped: number): boolean;
declare function IsPedRunningRagdollTask(ped: number): boolean;
declare function IsPedShaderEffectValid(ped: number): boolean;
declare function N_0x81aa517fbba05d39(ped: number): boolean;
declare function IsPedShooting(ped: number): boolean;
declare function IsPedShootingInArea(ped: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p7: boolean, p8: boolean): boolean;
declare function IsPedSittingInAnyVehicle(ped: number): boolean;
declare function IsPedSittingInVehicle(ped: number, vehicle: number): boolean;
declare function IsPedSprinting(ped: number): boolean;
declare function IsPedStill(ped: number): boolean;
declare function IsPedStopped(ped: number): boolean;
declare function IsPedStrafing(ped: number): boolean;
declare function IsPedSwappingWeapon(Ped: number): boolean;
declare function N_0x3795688a307e1eb6(Ped: number): boolean;
declare function IsPedSwimming(ped: number): boolean;
declare function IsPedSwimmingUnderWater(ped: number): boolean;
declare function IsPedTakingOffHelmet(ped: number): boolean;
declare function N_0x14590ddbedb1ec85(ped: number): boolean;
declare function IsPedTracked(ped: number): boolean;
declare function IsPedTryingToEnterALockedVehicle(ped: number): boolean;
declare function IsPedUsingActionMode(ped: number): boolean;
declare function IsPedUsingAnyScenario(ped: number): boolean;
declare function IsPedUsingScenario(ped: number, scenario: string): boolean;
declare function IsPedVaulting(ped: number): boolean;
declare function IsPedWalking(ped: number): boolean;
declare function IsPedWeaponComponentActive(ped: number, weaponHash: number, componentHash: number): boolean;
declare function IsPedWeaponReadyToShoot(ped: number): boolean;
declare function IsPedWearingHelmet(ped: number): boolean;
declare function IsPedheadshotImgUploadAvailable(): boolean;
declare function N_0xebb376779a760aa8(): boolean;
declare function IsPedheadshotReady(id: number): boolean;
declare function IsPedheadshotValid(id: number): boolean;
declare function IsPickupWeaponObjectValid(object: number): boolean;
declare function N_0x11d1e53a726891fe(object: number): boolean;
declare function IsPlaneLandingGearIntact(plane: number): boolean;
declare function N_0x4198ab0022b15f87(plane: number): boolean;
declare function VehicleHasLandingGear(plane: number): boolean;
declare function IsPlaybackGoingOnForVehicle(vehicle: number): boolean;
declare function IsPlaybackUsingAiGoingOnForVehicle(vehicle: number): boolean;
declare function IsPlayerBattleAware(player: number): boolean;
declare function N_0x38d28da81e4e9bf9(player: number): boolean;
declare function IsPlayerBeingArrested(player: number, atArresting: boolean): boolean;
declare function IsPlayerBluetoothEnable(player: number): boolean;
declare function N_0x65faee425de637b0(player: number): boolean;
declare function IsPlayerCamControlDisabled(): boolean;
declare function N_0x7c814d2fb49f40c0(): boolean;
declare function IsPlayerClimbing(player: number): boolean;
declare function IsPlayerControlOn(player: number): boolean;
declare function IsPlayerDead(player: number): boolean;
declare function IsPlayerDrivingDangerously(player: number, _type: number): boolean;
declare function N_0xf10b44fd479d69f3(player: number, _type: number): boolean;
declare function IsPlayerEntirelyInsideGarage(garageHash: number, player: number, p2: number, p3: number): boolean;
declare function N_0x024a60deb0ea69f0(garageHash: number, player: number, p2: number, p3: number): boolean;
declare function IsPlayerFreeAiming(player: number): boolean;
declare function IsPlayerFreeAimingAtEntity(player: number, entity: number): boolean;
declare function IsPlayerFreeForAmbientTask(player: number): boolean;
declare function IsPlayerInCutscene(player: number): boolean;
declare function IsPlayerLoggingInNp(): boolean;
declare function IsPlayerOnline(): boolean;
declare function IsPlayerPartiallyInsideGarage(garageHash: number, player: number, p2: number): boolean;
declare function N_0x1761dc5d8471cbaa(garageHash: number, player: number, p2: number): boolean;
declare function IsPlayerPlaying(player: number): boolean;
declare function IsPlayerPressingHorn(player: number): boolean;
declare function IsPlayerReadyForCutscene(player: number): boolean;
declare function IsPlayerRidingTrain(player: number): boolean;
declare function IsPlayerScriptControlOn(player: number): boolean;
declare function IsPlayerSwitchInProgress(): boolean;
declare function N_0xd9d2cfff49fab35f(): boolean;
declare function IsPlayerTargettingAnything(player: number): boolean;
declare function IsPlayerTargettingEntity(player: number, entity: number): boolean;
declare function IsPlayerTeleportActive(): boolean;
declare function IsPlayerVehRadioEnable(): boolean;
declare function N_0x5f43d83fd6738741(): boolean;
declare function IsPlayerVehicleRadioEnabled(): boolean;
declare function IsPlayerWantedLevelGreater(player: number, wantedLevel: number): boolean;
declare function IsPlayingPhoneGestureAnim(ped: number): boolean;
declare function IsPlaylistUnk(tvChannel: number, p1: number): boolean;
declare function IsPointInAngledArea(xPos: number, yPos: number, zPos: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p10: boolean, includez: boolean): boolean;
declare function IsPointObscuredByAMissionEntity(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): boolean;
declare function IsPointOnRoad(x: number, y: number, z: number, vehicle: number): boolean;
declare function IsPopMultiplierAreaUnk(id: number): boolean;
declare function IsPositionOccupied(x: number, y: number, z: number, range: number, p4: boolean, checkVehicles: boolean, checkPeds: boolean, p7: boolean, p8: boolean, ignoreEntity: number, p10: boolean): boolean;
declare function IsPrevWeatherType(weatherType: string): boolean;
declare function IsPrincipalAceAllowed(principal: string, object: string): boolean;
declare function IsProjectileInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
declare function IsProjectileTypeInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p7: number, weaponHash: number, ownedByPlayer: boolean): boolean;
declare function IsProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, _type: number, ownedByPlayer: boolean): boolean;
declare function IsProjectileTypeWithinDistance(x: number, y: number, z: number, projHash: number, radius: number, ownedByPlayer: boolean): boolean;
declare function N_0x34318593248c8fb2(x: number, y: number, z: number, projHash: number, radius: number, ownedByPlayer: boolean): boolean;
declare function IsProjectileTypeInRadius(x: number, y: number, z: number, projHash: number, radius: number, ownedByPlayer: boolean): boolean;
declare function IsPs3Version(): boolean;
declare function IsRadarHidden(): boolean;
declare function IsRadarPreferenceSwitchedOn(): boolean;
declare function IsRadioFadedOut(): boolean;
declare function N_0x0626a247d2405330(): boolean;
declare function IsRadioRetuning(): boolean;
declare function IsRadioStationVisible(radioStation: string): boolean;
declare function IsRecording(): boolean;
declare function IsReportugcMenuOpen(): boolean;
declare function N_0x9135584d09a3437e(): boolean;
declare function IsRockstarMessageReadyForScript(): boolean;
declare function N_0xbc1cc91205ec8d6e(): boolean;
declare function IsScaleformMovieMethodReturnValueReady(method_return: number): boolean;
declare function N_0x768ff8961ba904d6(method_return: number): boolean;
declare function GetScaleformMovieFunctionReturnBool(method_return: number): boolean;
declare function IsScenarioGroupEnabled(scenarioGroup: string): boolean;
declare function IsScenarioOccupied(p0: number, p1: number, p2: number, p3: number, p4: boolean): boolean;
declare function IsScenarioTypeEnabled(scenarioType: string): boolean;
declare function IsScreenFadedIn(): boolean;
declare function IsScreenFadedOut(): boolean;
declare function IsScreenFadingIn(): boolean;
declare function IsScreenFadingOut(): boolean;
declare function IsScreenblurFadeRunning(): boolean;
declare function N_0x7b226c785a52a0a9(): boolean;
declare function IsScriptGlobalShaking(): boolean;
declare function N_0xc912af078af19212(): boolean;
declare function IsScriptedConversationLoaded(): boolean;
declare function IsScriptedConversationOngoing(): boolean;
declare function IsScriptedHudComponentActive(id: number): boolean;
declare function IsScriptedHudComponentHiddenThisFrame(id: number): boolean;
declare function N_0x09c0403ed9a751c2(id: number): boolean;
declare function IsScriptedScenarioPedUsingConditionalAnim(ped: number, animDict: string, anim: string): boolean;
declare function IsScriptedSpeechPlaying(p0: number): boolean;
declare function IsScubaGearLightEnabled(ped: number): boolean;
declare function IsSeatWarpOnly(vehicle: number, seatIndex: number): boolean;
declare function N_0xf7f203e31f96f6a1(vehicle: number, seatIndex: number): boolean;
declare function IsShockingEventInSphere(eventType: number, x: number, y: number, z: number, radius: number): boolean;
declare function IsSniperBulletInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
declare function IsSniperInverted(): boolean;
declare function IsSocialClubActive(): boolean;
declare function N_0xc406be343fc4b9af(): boolean;
declare function IsSpecialAbilityActive(player: number): boolean;
declare function IsSpecialAbilityEnabled(player: number): boolean;
declare function IsSpecialAbilityMeterFull(player: number): boolean;
declare function IsSpecialAbilityUnlocked(playerModel: number): boolean;
declare function IsSphereVisible(x: number, y: number, z: number, radius: number): boolean;
declare function IsSphereVisibleToAnotherMachine(p0: number, p1: number, p2: number, p3: number): boolean;
declare function IsSphereVisibleToPlayer(p0: number, p1: number, p2: number, p3: number, p4: number): boolean;
declare function IsSrlLoaded(): boolean;
declare function IsStoreAvailableToUser(): boolean;
declare function N_0x883d79c4071e18b3(): boolean;
declare function IsStreamPlaying(): boolean;
declare function IsStreamingAdditionalText(p0: number): boolean;
declare function IsStreamingFileReady(registerAs: string): boolean;
declare function IsStreamvolActive(): boolean;
declare function N_0xbc9823ab80a3dcac(): boolean;
declare function IsStringNull(_string: string): boolean;
declare function IsStringNullOrEmpty(_string: string): boolean;
declare function IsStuntJumpInProgress(): boolean;
declare function IsStuntJumpMessageShowing(): boolean;
declare function N_0x2272b0a1343129f4(): boolean;
declare function IsSubtitlePreferenceSwitchedOn(): boolean;
declare function IsSwitchReadyForDescent(): boolean;
declare function N_0xdfa80cb25d0a19b3(): boolean;
declare function IsSwitchSkippingDescent(): boolean;
declare function DestroyPlayerInPauseMenu(): boolean;
declare function IsSynchronizedSceneHoldLastFrame(sceneID: number): boolean;
declare function N_0x7f2f4f13ac5257ef(sceneID: number): boolean;
declare function IsSynchronizedSceneLooped(sceneID: number): boolean;
declare function IsSynchronizedSceneRunning(sceneId: number): boolean;
declare function IsSystemUiBeingDisplayed(): boolean;
declare function IsTaskMoveNetworkActive(ped: number): boolean;
declare function N_0x921ce12c489c4c41(ped: number): boolean;
declare function IsTaskMoveNetworkReadyForTransition(ped: number): boolean;
declare function N_0x30ed88d5e0c56a37(ped: number): boolean;
declare function IsTaxiLightOn(vehicle: number): boolean;
declare function IsTennisMode(ped: number): boolean;
declare function IsThisAMinigameScript(): boolean;
declare function IsThisModelABicycle(model: number): boolean;
declare function IsThisModelABike(model: number): boolean;
declare function IsThisModelABoat(model: number): boolean;
declare function IsThisModelACar(model: number): boolean;
declare function IsThisModelAHeli(model: number): boolean;
declare function IsThisModelAJetski(model: number): boolean;
declare function IsThisModelASubmersible(model: number): boolean;
declare function IsThisModelAnEmergencyBoat(model: number): boolean;
declare function IsThisModelAPlane(model: number): boolean;
declare function IsThisModelAQuadbike(model: number): boolean;
declare function IsThisModelATrain(model: number): boolean;
declare function IsThisModelAnAmphibiousCar(model: number): boolean;
declare function IsThisModelAnAmphibiousQuadbike(model: number): boolean;
declare function N_0xa1a9fc1c76a6730d(model: number): boolean;
declare function IsThreadActive(threadId: number): boolean;
declare function IsTimeEqualTo(timeA: number, timeB: number): boolean;
declare function AreIntegersEqual(timeA: number, timeB: number): boolean;
declare function IsTimeLessThan(timeA: number, timeB: number): boolean;
declare function SubtractBFromAAndCheckIfNegative(timeA: number, timeB: number): boolean;
declare function IsTimeMoreThan(timeA: number, timeB: number): boolean;
declare function SubtractAFromBAndCheckIfNegative(timeA: number, timeB: number): boolean;
declare function IsToggleModOn(vehicle: number, modType: number): boolean;
declare function IsTrackedPedVisible(ped: number): boolean;
declare function IsTrackedPointVisible(point: number): boolean;
declare function IsTurretSeat(vehicle: number, seatIndex: number): boolean;
declare function N_0xe33ffa906ce74880(vehicle: number, seatIndex: number): boolean;
declare function IsTvPlaylistItemPlaying(videoCliphash: number): boolean;
declare function N_0x0ad973ca1e077b60(videoCliphash: number): boolean;
declare function LoadTvChannel(videoCliphash: number): boolean;
declare function IsUsingKeyboard(padIndex: number): boolean;
declare function GetLastInputMethod(padIndex: number): boolean;
declare function IsInputDisabled(padIndex: number): boolean;
declare function IsUsingKeyboard_2(padIndex: number): boolean;
declare function N_0x13337b38db572509(padIndex: number): boolean;
declare function IsInputJustDisabled(padIndex: number): boolean;
declare function IsValidInterior(interior: number): boolean;
declare function IsValidMpGamerTagMovie(gamerTagId: number): boolean;
declare function N_0xeb709a36958abe0d(gamerTagId: number): boolean;
declare function HasMpGamerTag_2(gamerTagId: number): boolean;
declare function HasMpGamerTagCrewFlagsSet(gamerTagId: number): boolean;
declare function IsVehicleAConvertible(vehicle: number, p1: boolean): boolean;
declare function IsVehicleAlarmActivated(vehicle: number): boolean;
declare function IsVehicleAlarmSet(vehicle: number): boolean;
declare function IsVehicleAttachedToCargobob(cargobob: number, vehicleAttached: number): boolean;
declare function IsVehicleAttachedToTowTruck(towTruck: number, vehicle: number): boolean;
declare function IsVehicleAttachedToTrailer(vehicle: number): boolean;
declare function IsVehicleAudiblyDamaged(vehicle: number): boolean;
declare function N_0x5db8010ee71fdef2(vehicle: number): boolean;
declare function IsVehicleBeingHalted(vehicle: number): boolean;
declare function N_0xc69bb1d832a710ef(vehicle: number): boolean;
declare function IsVehicleBumperBouncing(vehicle: number, frontBumper: boolean): boolean;
declare function N_0x27b926779deb502d(vehicle: number, frontBumper: boolean): boolean;
declare function IsVehicleBumperBrokenOff(vehicle: number, front: boolean): boolean;
declare function IsVehicleDamaged(vehicle: number): boolean;
declare function IsVehicleDoorDamaged(veh: number, doorID: number): boolean;
declare function IsVehicleDoorFullyOpen(vehicle: number, doorIndex: number): boolean;
declare function IsVehicleDriveable(vehicle: number, isOnFireCheck: boolean): boolean;
declare function IsVehicleEngineOnFire(vehicle: number): boolean;
declare function N_0xec69adf931aae0c3(vehicle: number): boolean;
declare function IsVehicleEngineStarting(vehicle: number): boolean;
declare function IsVehicleExtraTurnedOn(vehicle: number, extraId: number): boolean;
declare function IsVehicleHighDetail(vehicle: number): boolean;
declare function IsVehicleInBurnout(vehicle: number): boolean;
declare function IsVehicleInGarageArea(garageName: string, vehicle: number): boolean;
declare function IsVehicleInSubmarineMode(vehicle: number): boolean;
declare function GetIsSubmarineVehicleTransformed(vehicle: number): boolean;
declare function IsVehicleInteriorLightOn(vehicle: number): boolean;
declare function IsVehicleModHswExclusive(vehicle: number, modType: number, modIndex: number): boolean;
declare function IsVehicleModel(vehicle: number, model: number): boolean;
declare function IsVehicleNeedsToBeHotwired(vehicle: number): boolean;
declare function IsVehicleNeonLightEnabled(vehicle: number, index: number): boolean;
declare function IsVehicleNodeIdValid(vehicleNodeId: number): boolean;
declare function IsVehicleOnAllWheels(vehicle: number): boolean;
declare function IsVehicleParachuteActive(vehicle: number): boolean;
declare function N_0x3de51e9c80b116cf(vehicle: number): boolean;
declare function IsVehiclePreviouslyOwnedByPlayer(vehicle: number): boolean;
declare function IsVehicleRadioEnabled(vehicle: number): boolean;
declare function N_0x0be4be946463f917(vehicle: number): boolean;
declare function IsVehicleRadioLoud(vehicle: number): boolean;
declare function IsVehicleRocketBoostActive(vehicle: number): boolean;
declare function IsVehicleSearchlightOn(vehicle: number): boolean;
declare function IsVehicleSeatAccessible(ped: number, vehicle: number, seatIndex: number, side: boolean, onEnter: boolean): boolean;
declare function N_0x639431e895b9aa57(ped: number, vehicle: number, seatIndex: number, side: boolean, onEnter: boolean): boolean;
declare function IsVehicleSeatFree(vehicle: number, seatIndex: number): boolean;
declare function IsVehicleSirenAudioOn(vehicle: number): boolean;
declare function N_0xb5cc40fbcb586380(vehicle: number): boolean;
declare function IsVehicleSirenSoundOn(vehicle: number): boolean;
declare function IsVehicleSirenOn(vehicle: number): boolean;
declare function IsVehicleSlipstreamLeader(vehicle: number): boolean;
declare function N_0x48c633e94a8142a7(vehicle: number): boolean;
declare function IsVehicleSprayable(vehicle: number): boolean;
declare function N_0x8d474c8faeff6cde(vehicle: number): boolean;
declare function IsVehicleShopResprayAllowed(vehicle: number): boolean;
declare function IsVehicleStolen(vehicle: number): boolean;
declare function IsVehicleStopped(vehicle: number): boolean;
declare function IsVehicleStoppedAtTrafficLights(vehicle: number): boolean;
declare function IsVehicleStuckOnRoof(vehicle: number): boolean;
declare function IsVehicleStuckTimerUp(vehicle: number, p1: number, p2: number): boolean;
declare function IsVehicleTyreBurst(vehicle: number, wheelID: number, completely: boolean): boolean;
declare function IsVehicleVisible(vehicle: number): boolean;
declare function IsVehicleWanted(vehicle: number): boolean;
declare function IsVehicleWeaponDisabled(weaponHash: number, vehicle: number, owner: number): boolean;
declare function N_0x563b65a643ed072e(weaponHash: number, vehicle: number, owner: number): boolean;
declare function IsVehicleWindowIntact(vehicle: number, windowIndex: number): boolean;
declare function IsWarningMessageActive(): boolean;
declare function IsMedicalDisabled(): boolean;
declare function IsWarningMessageActive_2(): boolean;
declare function N_0xaf42195a42c63bba(): boolean;
declare function IsWaypointActive(): boolean;
declare function IsWaypointPlaybackGoingOnForPed(p0: number): boolean;
declare function IsWaypointPlaybackGoingOnForVehicle(vehicle: number): boolean;
declare function IsWeaponValid(weaponHash: number): boolean;
declare function IsWorldPointWithinBrainActivationRange(): boolean;
declare function IsXbox360Version(): boolean;
declare function KnockOffPedProp(ped: number, p1: boolean, p2: boolean, p3: boolean, p4: boolean): void;
declare function KnockPedOffVehicle(ped: number): void;
declare function LandingMenuIsActive(): boolean;
declare function N_0x3bbbd13e5041a79e(): boolean;
declare function Leaderboards2ReadByHandle(): LuaMultiReturn<[boolean, number, number]>;
declare function Leaderboards2ReadByPlatform(gamerHandleCsv: string, platformName: string): LuaMultiReturn<[boolean, number]>;
declare function N_0xf1ae5dcdbfca2721(gamerHandleCsv: string, platformName: string): LuaMultiReturn<[boolean, number]>;
declare function Leaderboards2ReadByRadius(p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function Leaderboards2ReadByRank(p1: number, p2: number): LuaMultiReturn<[boolean, number]>;
declare function Leaderboards2ReadByRow(p2: number, p4: number, p6: number): LuaMultiReturn<[boolean, number, number, number, number]>;
declare function Leaderboards2ReadByScoreFloat(p1: number, p2: number): LuaMultiReturn<[boolean, number]>;
declare function Leaderboards2ReadByScoreInt(p1: number, p2: number): LuaMultiReturn<[boolean, number]>;
declare function Leaderboards2ReadFriendsByRow(p2: number, p3: boolean, p4: number, p5: number): LuaMultiReturn<[boolean, number, number]>;
declare function Leaderboards2ReadRankPrediction(): LuaMultiReturn<[boolean, number, number, number]>;
declare function N_0xc38dc1e90d22547c(): LuaMultiReturn<[boolean, number, number, number]>;
declare function Leaderboards2WriteData(p0: number): LuaMultiReturn<[boolean, number]>;
declare function Leaderboards2WriteDataForEventType(): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xc980e62e33df1d5c(): LuaMultiReturn<[boolean, number, number]>;
declare function LeaderboardsCacheDataRow(p0: number): LuaMultiReturn<[boolean, number]>;
declare function LeaderboardsClearCacheData(): void;
declare function LeaderboardsDeaths(statName: number, value: number): void;
declare function N_0x428eaf89e24f6c36(statName: number, value: number): void;
declare function LeaderboardsGetCacheDataRow(p0: number, p1: number, p2: number): LuaMultiReturn<[boolean, number]>;
declare function LeaderboardsGetCacheExists(p0: number): boolean;
declare function LeaderboardsGetCacheNumberOfRows(p0: number): number;
declare function N_0x58a651cd201d89ad(p0: number): number;
declare function LeaderboardsGetCacheTime(p0: number): number;
declare function LeaderboardsGetColumnId(p0: number, p1: number, p2: number): number;
declare function LeaderboardsGetColumnType(p0: number, p1: number, p2: number): number;
declare function LeaderboardsGetNumberOfColumns(p0: number, p1: number): number;
declare function LeaderboardsReadAnyPending(): boolean;
declare function N_0xa31fd15197b192bd(): boolean;
declare function LeaderboardsReadClear(p0: number, p1: number, p2: number): number;
declare function LeaderboardsReadClearAll(): number;
declare function LeaderboardsReadPending(p0: number, p1: number, p2: number): boolean;
declare function LeaderboardsReadSuccessful(p0: number, p1: number, p2: number): boolean;
declare function LeaderboardsWriteAddColumn(p0: number, p1: number, p2: number): void;
declare function N_0x0bca1d2c47b0d269(p0: number, p1: number, p2: number): void;
declare function LeaderboardsWriteAddColumnLong(p0: number, p1: number, p2: number): void;
declare function N_0x2e65248609523599(p0: number, p1: number, p2: number): void;
declare function LeaveCursorMode(): void;
declare function LinkNamedRendertarget(modelHash: number): void;
declare function LinkStaticEmitterToEntity(emitterName: string, entity: number): void;
declare function N_0x651d3228960d08af(emitterName: string, entity: number): void;
declare function LoadAllObjectsNow(): void;
declare function LoadAllPathNodes(keepInMemory: boolean): boolean;
declare function LoadCloudHat(name: string, transitionTime: number): void;
declare function SetCloudHatTransition(name: string, transitionTime: number): void;
declare function LoadContentChangeSetGroup(hash: number): void;
declare function LoadGlobalWaterType(waterType: number): void;
declare function LoadMissionCreatorPhoto(p0: string, p3: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x4862437a486f91b0(p0: string, p3: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function LoadMovieMeshSet(movieMeshSetName: string): number;
declare function LoadResourceFile(resourceName: string, fileName: string): string;
declare function LoadRopeData(ropeId: number, rope_preset: string): void;
declare function LoadScene(x: number, y: number, z: number): void;
declare function LoadStream(streamName: string, soundSet: string): boolean;
declare function LoadStreamWithStartOffset(streamName: string, startOffset: number, soundSet: string): boolean;
declare function LoadWaterFromPath(resourceName: string, fileName: string): boolean;
declare function LoadingscreenGetLoadFreemode(): boolean;
declare function N_0xef7d17bc6c85264c(): boolean;
declare function LoadingscreenGetLoadFreemodeWithEventName(): boolean;
declare function N_0x8aa464d4e0f6accd(): boolean;
declare function LoadingscreenIsLoadingFreemode(): boolean;
declare function N_0xc6dc823253fbb366(): boolean;
declare function IsUiLoadingMultiplayer(): boolean;
declare function LoadingscreenSetIsLoadingFreemode(toggle: boolean): void;
declare function N_0xc7e7181c09f33b69(toggle: boolean): void;
declare function LoadingscreenSetLoadFreemode(toggle: boolean): void;
declare function GetBroadcastFinshedLosSound(toggle: boolean): void;
declare function N_0xb0c56bd3d808d863(toggle: boolean): void;
declare function LoadingscreenSetLoadFreemodeWithEventName(toggle: boolean): void;
declare function N_0xfc309e94546fcdb5(toggle: boolean): void;
declare function IsInLoadingScreen(toggle: boolean): void;
declare function LocalizationGetSystemDateFormat(): number;
declare function GetUserLanguageId(): number;
declare function LocalizationGetSystemLanguage(): number;
declare function N_0x497420e022796b3f(): number;
declare function LockLoadingScreenButtons(): void;
declare function N_0xb1577667c3708f9b(): void;
declare function LockMinimapAngle(angle: number): void;
declare function LockMinimapPosition(x: number, y: number): void;
declare function LockRadioStation(radioStationName: string, toggle: boolean): void;
declare function N_0x94f2e83ead7e6b82(radioStationName: string, toggle: boolean): void;
declare function SetRadioStationDisabled(radioStationName: string, toggle: boolean): void;
declare function LockRadioStationTrackList(radioStation: string, trackListName: string): void;
declare function Log10(value: number): number;
declare function LogDebugInfo(p0: string): void;
declare function N_0x2162c446dfdf38fd(p0: string): void;
declare function LowerConvertibleRoof(vehicle: number, instantlyLower: boolean): void;
declare function LowerRetractableWheels(vehicle: number): void;
declare function N_0x5335be58c083e74e(vehicle: number): void;
declare function MakePedReload(ped: number): boolean;
declare function MarkObjectForDeletion(object: number): void;
declare function ModifyVehicleTopSpeed(vehicle: number, value: number): void;
declare function SetVehicleEnginePowerMultiplier(vehicle: number, value: number): void;
declare function ModifyWater(x: number, y: number, height: number, radius: number): void;
declare function MoveVehicleDecals(p0: number, p1: number): void;
declare function MumbleAddVoiceChannelListen(channel: number): void;
declare function MumbleAddVoiceTargetChannel(targetId: number, channel: number): void;
declare function MumbleAddVoiceTargetPlayer(targetId: number, player: number): void;
declare function MumbleAddVoiceTargetPlayerByServerId(targetId: number, serverId: number): void;
declare function MumbleClearVoiceChannel(): void;
declare function MumbleClearVoiceTarget(targetId: number): void;
declare function MumbleClearVoiceTargetChannels(targetId: number): void;
declare function MumbleClearVoiceTargetPlayers(targetId: number): void;
declare function MumbleGetTalkerProximity(): number;
declare function MumbleGetVoiceChannelFromServerId(serverId: number): number;
declare function MumbleIsActive(): boolean;
declare function MumbleIsConnected(): boolean;
declare function MumbleIsPlayerTalking(player: number): boolean;
declare function MumbleRemoveVoiceChannelListen(channel: number): void;
declare function MumbleRemoveVoiceTargetChannel(targetId: number, channel: number): void;
declare function MumbleRemoveVoiceTargetPlayer(targetId: number, player: number): void;
declare function MumbleRemoveVoiceTargetPlayerByServerId(targetId: number, serverId: number): void;
declare function MumbleSetActive(state: boolean): void;
declare function MumbleSetAudioInputDistance(distance: number): void;
declare function MumbleSetAudioInputIntent(intentHash: number): void;
declare function MumbleSetAudioOutputDistance(distance: number): void;
declare function MumbleSetServerAddress(address: string, port: number): void;
declare function MumbleSetSubmixForServerId(serverId: number, submixId: number): void;
declare function MumbleSetTalkerProximity(value: number): void;
declare function MumbleSetVoiceChannel(channel: number): void;
declare function MumbleSetVoiceTarget(targetId: number): void;
declare function MumbleSetVolumeOverride(player: number, volume: number): void;
declare function MumbleSetVolumeOverrideByServerId(serverId: number, volume: number): void;
declare function N_0x0032a6dba562c518(): void;
declare function N_0x006e4b040ed37ec3(p0: number): void;
declare function N_0x0077f15613d36993(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x011883f41211432a(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: number): void;
declare function N_0x0150b6ff25a9e2e5(): void;
declare function N_0x015b03ee1c43e6ec(p0: number): void;
declare function N_0x0205f5365292d2eb(vehicle: number, p1: number): void;
declare function N_0x0218ba067d249dea(): void;
declare function N_0x0225778816fdc28c(p0: number): void;
declare function N_0x02369d5c8a51fdcf(toggle: boolean): void;
declare function N_0x023acab2dc9dc4a4(): number;
declare function N_0x02deaac8f8ea7fe7(p0: string): void;
declare function N_0x02e93c796abd3a97(p0: boolean): void;
declare function N_0x03300b57fcac6ddb(p0: boolean): void;
declare function N_0x0395cb47b022e62c(p0: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x03c2eebb04b3fb72(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function N_0x03ea03af85a85cb7(ped: number, p1: boolean, p2: boolean, p3: boolean, p4: boolean, p5: boolean, p6: boolean, p7: boolean, p8: number): boolean;
declare function N_0x03f1a106bda7dd3e(): void;
declare function N_0x0419b167ee128f33(p0: number, p1: number): number;
declare function N_0x041c7f2a6c9894e6(p0: number, p1: number, p2: number): number;
declare function N_0x04655f9d075d0ae5(toggle: boolean): void;
declare function N_0x04918a41bc9b8157(p0: number, p1: number, p2: number): number;
declare function N_0x0581730ab9380412(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function N_0x0596843b34b95ce5(p0: number, p1: number): void;
declare function N_0x06087579e7aa85a9(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): boolean;
declare function N_0x061cb768363d6424(ped: number, toggle: boolean): void;
declare function N_0x062d5ead4da2fa6a(): void;
declare function N_0x063ae2b2cc273588(vehicle: number, p1: boolean): void;
declare function N_0x06462a961e94b67c(): void;
declare function N_0x065d03a9d6b2c6b5(p0: number, p1: number): void;
declare function N_0x06eaf70ae066441e(p0: number): void;
declare function N_0x06ee9048fd080382(p0: boolean): void;
declare function N_0x07dbd622d9533857(p0: number): number;
declare function N_0x07eab372c8841d99(p0: number, p1: number, p2: number): number;
declare function N_0x0811381ef5062fec(p0: number): void;
declare function N_0x08e8eeadfd0dc4a0(amount: number): boolean;
declare function N_0x0a436b8643716d14(): void;
declare function N_0x0a9c7f36e5d7b683(p0: number): void;
declare function N_0x0aa27680a0bd43fa(): void;
declare function N_0x0ae73d8df3a762b2(p0: boolean): void;
declare function N_0x0b3e35ac043707d9(p0: number, p1: number): void;
declare function N_0x0b40ed49d7d6ff84(): void;
declare function N_0x0b565b0aae56a0e8(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function N_0x0b568201dd99f0eb(p0: boolean): void;
declare function N_0x0b8b7f74bf061c6d(): number;
declare function N_0x0c698d8f099174c7(p0: number): void;
declare function N_0x0cf54f20de43879c(p0: number): void;
declare function N_0x0cf6cc51aa18f0f8(p0: number, p1: number, p2: number): number;
declare function N_0x0d01d20616fc73fb(p0: number, p1: number): void;
declare function N_0x0d30eb83668e63c5(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x0d77a82dc2d0da59(): LuaMultiReturn<[number, number]>;
declare function N_0x0dd362f14f18942a(amount: number, p1: number, p2: number): void;
declare function N_0x0e4299c549f0d1f1(toggle: boolean): void;
declare function N_0x0ede326d47cd0f3e(ped: number, player: number): boolean;
declare function N_0x0f1a4b45b7693b95(p0: number, p1: number): void;
declare function N_0x0f62619393661d6e(p0: number, p1: number, p2: number): void;
declare function N_0x0f6f1ebbc4e1d5e6(scriptIndex: number, p1: string): boolean;
declare function N_0x0ffb3c758e8c07b9(ped: number, p1: boolean): number;
declare function N_0x10144267dd22866c(overlayHash: number, p1: number, character: number): number;
declare function N_0x107a473d7a6647a9(vehicle: number): void;
declare function N_0x108be26959a9d9bb(toggle: boolean): void;
declare function N_0x110f526ab784111f(ped: number, p1: number): void;
declare function N_0x112209ce0290c03a(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x1153fa02a659051c(): void;
declare function N_0x11579d940949c49e(p0: number): void;
declare function N_0x116fb94dc4b79f17(p0: string): void;
declare function N_0x1171a97a3d3981b6(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x1178e104409fe58c(p0: number, p1: number): void;
declare function N_0x1185a8087587322c(p0: boolean): void;
declare function N_0x1216e0bfa72cc703(p0: number, p1: number): void;
declare function N_0x12ded8ca53d47ea5(p0: number): void;
declare function N_0x1312ddd8385aee4e(p0: number, p1: number): void;
declare function N_0x1398582b7f72b3ed(p0: number): void;
declare function N_0x13b350b8ad0eee10(): void;
declare function N_0x13f1fcb111b820b0(p0: boolean): void;
declare function N_0x140e6a44870a11ce(): void;
declare function N_0x144da052257ae7d8(p0: number): void;
declare function N_0x14922ed3e38761f0(): boolean;
declare function N_0x149aee66f0cb3a99(p0: number, p1: number): void;
declare function N_0x14d29bb12d47f68c(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x14e0b2d1ad1044e0(): LuaMultiReturn<[number, number, number, number]>;
declare function N_0x14eda9ee27bd1626(p0: number): void;
declare function N_0x14fc5833464340a8(): void;
declare function N_0x155467aca0f55705(): number;
declare function N_0x159b7318403a1cd8(p0: number): void;
declare function N_0x1612c45f9e3e0d44(): void;
declare function N_0x162c23ca83ed0a62(p0: number): boolean;
declare function N_0x164c5ff663790845(p0: number): void;
declare function N_0x16da8172459434aa(): number;
declare function N_0x170910093218c8b9(p0: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x17c9e241111a674d(p0: number, p1: number): void;
declare function N_0x17fca7199a530203(): void;
declare function N_0x182f266c2d9e2beb(vehicle: number, p1: number): void;
declare function N_0x19853b5b17d77bca(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x19af7ed9b9d23058(): void;
declare function N_0x19bfed045c647c49(ped: number): boolean;
declare function N_0x1a092bb0c3808b96(entity: number, p1: boolean): void;
declare function N_0x1a330d297aac6bc1(ped: number, p1: number): void;
declare function N_0x1a6cbb06e2d0d79d(p0: number, p1: number): void;
declare function N_0x1a7ce7cd3e653485(p0: number): void;
declare function N_0x1a8ea222f9c67dbb(p0: number): LuaMultiReturn<[number, number]>;
declare function N_0x1b7abe26cbcbf8c7(ped: number, p1: number, p2: number): void;
declare function N_0x1bb299305c3e8c13(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x1bbc135a4d25edde(p0: boolean): void;
declare function N_0x1c073274e065c6d2(vehicle: number, toggle: boolean): void;
declare function N_0x1c57c94a6446492a(p0: number, p1: number): void;
declare function N_0x1cba05ae7bd7ee05(p0: number): void;
declare function N_0x1d12a56fc95be92e(): boolean;
declare function N_0x1d4dc17c38feaff0(): boolean;
declare function N_0x1d610eb0fea716d9(p0: number): boolean;
declare function N_0x1dc9b749e7ae282b(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x1e3f1b1b891a2aaa(p0: number, p1: number): void;
declare function N_0x1e77fa7a62ee6c4c(p0: number): number;
declare function N_0x1e9057a74fd73e23(): void;
declare function N_0x1eae0a6e978894a2(p0: number, p1: boolean): void;
declare function N_0x1f2300cb7fa7b7f6(): number;
declare function N_0x1f34b0626c594380(p0: number, p1: number): void;
declare function N_0x1f351cf1c6475734(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;
declare function N_0x1f7bc3539f9e0224(): void;
declare function N_0x1f8e00fb18239600(p0: number): void;
declare function N_0x2016c603d6b8987c(ped: number, toggle: boolean): void;
declare function N_0x202a5ed9ce01d6e7(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): void;
declare function N_0x20746f7b1032a3c7(p0: boolean, p1: boolean, p2: boolean, p3: boolean): void;
declare function N_0x208784099002bc30(missionNameLabel: string, p1: number): void;
declare function N_0x20c6c7e4eb082a7f(p0: boolean): void;
declare function N_0x2107a3773771186d(): boolean;
declare function N_0x211c4ef450086857(): void;
declare function N_0x214cd562a939246a(): boolean;
declare function N_0x21c235bc64831e5a(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: boolean): Vector3;
declare function N_0x225798743970412b(p0: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x226c284c830d0ca8(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x22e21fbcfc88c149(scriptIndex: number, p1: string): number;
declare function N_0x2302c0264ea58d31(): void;
declare function N_0x2310a8f9421ebf43(p0: number): void;
declare function N_0x2311dd7159f00582(vehicle: number, p1: boolean): void;
declare function N_0x23227df0b2115469(): void;
declare function N_0x237440e46d918649(p0: number): void;
declare function N_0x2382ab11450ae7ba(p0: number, p1: number): void;
declare function N_0x23f09eadc01449d6(padIndex: number): boolean;
declare function N_0x241fca5b1aa14f75(): boolean;
declare function N_0x243296a510b562b6(): void;
declare function N_0x247acbc4abbc9d1c(p0: boolean): void;
declare function N_0x24a49beaf468dc90(p0: number, p2: number, p3: number, p4: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x24c024ba8379a70a(p0: number, p1: number): void;
declare function N_0x24e4e51fc16305f9(): number;
declare function N_0x25361a96e0f7e419(p0: number, p1: number, p2: number, p3: number): number;
declare function N_0x2542269291c6ac84(p0: number): number;
declare function N_0x2555cf7da5473794(): number;
declare function N_0x2570e26be63964e3(): boolean;
declare function N_0x259ba6d4e6f808f1(p0: number): void;
declare function N_0x25aaa32bdc98f2a3(): number;
declare function N_0x25d990f8e0e3f13c(): void;
declare function N_0x25fc3e33a31ad0c9(p0: boolean): void;
declare function N_0x261e97ad7bcf3d40(p0: boolean): void;
declare function N_0x265559da40b3f327(p0: number): void;
declare function N_0x265635150fb0d82e(): void;
declare function N_0x26d7399b9587fe89(p0: number): void;
declare function N_0x26d99d5a82fd18e8(p0: number): void;
declare function N_0x26e13d440e7f6064(vehicle: number, value: number): void;
declare function N_0x26f07dd83a5f7f98(): number;
declare function N_0x271017b9ba825366(p0: number, p1: boolean): void;
declare function N_0x271401846bd26e92(p0: boolean, p1: boolean): void;
declare function N_0x2735233a786b1bef(ped: number, p1: number): void;
declare function N_0x2790f4b17d098e26(toggle: boolean): void;
declare function N_0x27aa1c973cacfe63(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;
declare function N_0x27cfb1b1e078cb2d(): void;
declare function N_0x27f248c3febfaad3(p0: number, p1: number): void;
declare function N_0x27feb5254759cde3(textureDict: string, p1: boolean): boolean;
declare function N_0x2818ff6638cb09de(p0: number): void;
declare function N_0x282b6739644f4347(p0: number): void;
declare function N_0x283b6062a2c01e9b(): void;
declare function N_0x288df530c92dad6f(ped: number, value: number): void;
declare function N_0x28b022a17b068a3a(p0: number, p1: number): void;
declare function N_0x28ecb8ac2f607db2(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x2916a928514c9827(): void;
declare function N_0x293220da1b46cebc(p0: number, p1: number, p2: number): void;
declare function N_0x29682e2ccf21e9b5(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number, p12: number, p13: number): void;
declare function N_0x2a251aa48b2b46db(): void;
declare function N_0x2a7cec72c3443bcc(p0: number, p1: number, p2: number): void;
declare function N_0x2a893980e96b659a(p0: boolean): boolean;
declare function N_0x2a93c46aab1eacc9(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x2acabed337622df2(p0: string): void;
declare function N_0x2afc2d19b50797f2(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x2b1c623823db0d9d(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;
declare function N_0x2b40a97646381508(p0: number): void;
declare function N_0x2b51edbefc301339(p0: number, p1: string): boolean;
declare function N_0x2b694afcf64e6994(ped: number, p1: boolean): void;
declare function N_0x2bf66d2e7414f686(): number;
declare function N_0x2c173ae2bdb9385e(blip: number): number;
declare function N_0x2c1d8b3b19e517cc(p0: number, p1: number): number;
declare function N_0x2c42340f916c5930(p0: number): number;
declare function N_0x2c4a1590abf43e8b(vehicle: number, p1: boolean): void;
declare function N_0x2c9f302398e13141(blip: number, p1: number): void;
declare function N_0x2cd90358f67d0aa8(p0: number): void;
declare function N_0x2ce9d95e4051aecd(p0: number): void;
declare function N_0x2d3b147afad49de0(textureDict: string, textureName: string, x: number, y: number, width: number, height: number, p6: number, red: number, green: number, blue: number, alpha: number, p11: number): void;
declare function N_0x2d5dc831176d0114(p0: number): boolean;
declare function N_0x2d7a9b577e72385e(p0: number): void;
declare function N_0x2d874d4ae612a65f(): number;
declare function N_0x2da41ed6e1fcd7a5(p0: number, TypeOfWeapon: number): LuaMultiReturn<[number, number]>;
declare function N_0x2dd39bf3e2f9c47f(): number;
declare function N_0x2de6c5e2e996f178(p0: number): void;
declare function N_0x2dfc81c9b9608549(ped: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x2e0259babc27a327(p0: number): void;
declare function N_0x2e0bf682cc778d49(p0: number): boolean;
declare function N_0x2e22fefa0100275e(): boolean;
declare function N_0x2e4c123d1c8a710e(p2: number, p3: number, p4: number, p5: number, p6: number): LuaMultiReturn<[number, number, number]>;
declare function N_0x2f057596f2bd0061(): boolean;
declare function N_0x2f074c904d85129e(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function N_0x2f137b508de238f2(p0: boolean): void;
declare function N_0x2f3c3d9f50681de4(p0: number, p1: boolean): void;
declare function N_0x2f41a3bae005e5fa(p0: number, p1: number): void;
declare function N_0x2f7ceb6520288061(p0: boolean): void;
declare function N_0x2f7f2b26dd3f18ee(p0: number, p1: number): void;
declare function N_0x2fa2494b47fdd009(p0: number, p1: number): void;
declare function N_0x2fa3173480008493(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x2fab6614ce22e196(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x2fcb133ca50a49eb(p0: number): number;
declare function N_0x3001bef2feca3680(): boolean;
declare function N_0x30432a0118736e00(): number;
declare function N_0x3044240d2e0fa842(): boolean;
declare function N_0x30ca2ef91d15adf8(): number;
declare function N_0x31125fd509d9043f(p0: number): void;
declare function N_0x31574b1b41268673(p0: number, p1: number): void;
declare function N_0x316db59cd14c1774(p0: number): void;
declare function N_0x31ba138f6304fb9f(p0: number, p1: number): void;
declare function N_0x31e90b8873a4cd3b(player: number, p1: number): void;
declare function N_0x31f924b53eaddf65(p0: boolean): void;
declare function N_0x324c5aa411da7737(p0: number): void;
declare function N_0x32cac93c9de73d32(): number;
declare function N_0x32ebd154cb6b8b99(p0: number, p1: number, p2: number): void;
declare function N_0x32f34ff7f617643b(p0: number, p1: number): void;
declare function N_0x336b3d200ab007cb(p0: number, p1: number, p2: number, p3: number, p4: number): number;
declare function N_0x33d47e85b476abcd(p0: boolean): boolean;
declare function N_0x33d72899e24c3365(p0: number, p1: number): number;
declare function N_0x33df47cc0642061b(): boolean;
declare function N_0x33e3c6c6f2f0b506(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x3441cad2f2231923(vehicle: number, p1: boolean): void;
declare function N_0x346ef3ecaaab149e(): void;
declare function N_0x34770b9ce0e03b91(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x352e2b5cf420bf3b(p0: number, p1: number): void;
declare function N_0x357b152ef96c30b6(): number;
declare function N_0x35a3cd97b2c0a6d2(blip: number): void;
declare function N_0x35bb21de06784373(p0: number, p1: number): void;
declare function N_0x35e0654f4bad7971(p0: boolean): void;
declare function N_0x36391f397731595d(p0: number): number;
declare function N_0x367ef5e2f439b4c6(p0: number): void;
declare function N_0x36ccb9be67b970fd(ropeId: number, p1: boolean): void;
declare function N_0x36de109527a2c0c4(toggle: boolean): void;
declare function N_0x36f1b38855f2a8df(player: number): void;
declare function N_0x36f32de87082343e(p0: number, p1: number): void;
declare function N_0x36f6626459d91457(p0: number): void;
declare function N_0x37d5f739fd494675(p0: number): number;
declare function N_0x380b4968d1e09e55(): void;
declare function N_0x38491439b6ba7f7d(p0: number, p1: number): number;
declare function N_0x3855fb5eb2c5e8b2(p0: number): number;
declare function N_0x38b7c51ab1edc7d8(entity: number, toggle: boolean): void;
declare function N_0x38baaa5dd4c9d19f(value: number): void;
declare function N_0x38c1cb1cb119a016(p0: number, p1: number): void;
declare function N_0x393bd2275ceb7793(): number;
declare function N_0x39455bf4f4f55186(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number, p12: number): number;
declare function N_0x394cd08e31313c28(): void;
declare function N_0x397baa01068baa96(): number;
declare function N_0x39917e1b4cb0f911(p0: boolean): void;
declare function N_0x39a5fb7eaf150840(p0: number, p1: number): void;
declare function N_0x3a48ab4445d499be(): number;
declare function N_0x3b2fd68db5f8331c(object: number, toggle: boolean, R: number, G: number, B: number): void;
declare function SetObjectColour(object: number, toggle: boolean, R: number, G: number, B: number): void;
declare function N_0x3b458ddb57038f08(vehicle: number, doorIndex: number, toggle: boolean): void;
declare function N_0x3bd770d281982db5(p0: number, p1: number): number;
declare function N_0x3c5c1e2c2ff814b1(toggle: boolean): void;
declare function N_0x3c788e7f6438754d(checkpointHandle: number, x: number, y: number, z: number): void;
declare function N_0x3de3aa516fb126a4(p0: number): void;
declare function N_0x3e38e28a1d80ddf6(ped: number): boolean;
declare function N_0x3e9679c1dfcf422c(p0: number, p1: number): void;
declare function N_0x3ebeac6c3f81f6bd(p0: number): void;
declare function N_0x3fa36981311fa4ff(netId: number, state: boolean): void;
declare function N_0x3fc795691834481d(p0: number, p1: number): void;
declare function N_0x4008edf7d6e48175(p0: boolean): void;
declare function N_0x405dc2aef6af95b9(roomHashKey: number): void;
declare function N_0x40763ea7b9b783e7(p0: string, p1: number, p2: number): number;
declare function N_0x407dc5e97db1a4d3(p0: number, p1: number): void;
declare function N_0x4128464231e3ca0b(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x41290b40fa63e6da(p0: number): void;
declare function N_0x412f1364fa066cfb(p0: number): number;
declare function N_0x41350b4fc28e3941(p0: boolean): void;
declare function N_0x419615486bbf1956(p0: number): void;
declare function N_0x4237e822315d8ba9(): boolean;
declare function N_0x425aecf167663f48(ped: number, p1: boolean): void;
declare function N_0x4282e08174868be3(): number;
declare function N_0x428ad3e26c8d9eb0(vehicle: number, x: number, y: number, z: number, p4: number): void;
declare function N_0x430a7631a84c9be7(p0: number): void;
declare function N_0x4348bfda56023a2f(p0: number, p1: number): number;
declare function N_0x43fa0dfc5df87815(vehicle: number, p1: boolean): void;
declare function N_0x43fa7cbe20dab219(p0: number): void;
declare function N_0x4419966c9936071a(vehicle: number): void;
declare function N_0x444c4525ece0a4b9(): void;
declare function N_0x44919cc079bb60bf(p0: number): void;
declare function N_0x44aca259d67651db(p1: number): number;
declare function N_0x450819d8cf90c416(): boolean;
declare function N_0x45a83257ed02d9bc(): void;
declare function N_0x45e816772e93a9db(): number;
declare function N_0x45f35c0edc33b03b(netScene: number, modelHash: number, x: number, y: number, z: number, p5: number, p6: string, p7: number, p8: number, flags: number): void;
declare function N_0x4669b3ed80f24b4e(player: number): void;
declare function N_0x469f2ecdec046337(p0: boolean): void;
declare function N_0x46b05bcae43856b0(ped: number, flag: number): boolean;
declare function N_0x46d1a61a21f566fc(p0: number): void;
declare function N_0x46f3add1e2d5baf2(p0: number, p1: number): void;
declare function N_0x472397322e92a856(): void;
declare function N_0x4737980e8a283806(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x4811bbac21c5fcd5(p0: number): void;
declare function N_0x483aca1176ca93f1(): void;
declare function N_0x48621c9fca3ebd28(p0: number): void;
declare function N_0x487912fd248efddf(p0: number, p1: number): boolean;
declare function N_0x4879e4fe39074cdf(): boolean;
declare function N_0x48f069265a0e4bec(name: string): number;
declare function N_0x490861b88f4fd846(p0: number): void;
declare function N_0x49e50bdb8ba4dab2(ped: number, toggle: boolean): void;
declare function N_0x4a7d6e727f941747(p0: number): LuaMultiReturn<[number, number]>;
declare function N_0x4a9fde3a5a6d0437(toggle: boolean): void;
declare function N_0x4ad280eb48b2d8e6(vehicle: number, togle: boolean): void;
declare function N_0x4ad490ae1536933b(p0: number, p1: number): number;
declare function N_0x4af92acd3141d96c(): void;
declare function N_0x4aff7e02e485e92b(): void;
declare function N_0x4b5b620c9b59ed34(p0: number, p1: number): void;
declare function N_0x4c134b4df76025d0(p0: number, p1: number): void;
declare function N_0x4c2330e61d3deb56(interior: number): number;
declare function N_0x4c2a9fdc22377075(): void;
declare function N_0x4c3b75694f7e0d9c(p0: number, p1: number, p2: number): void;
declare function N_0x4c89fe2bdeb3f169(): number;
declare function N_0x4c9034162368e206(): number;
declare function N_0x4cebc1ed31e8925e(cutsceneName: string): boolean;
declare function N_0x4d02279c83be69fe(): number;
declare function N_0x4d953df78ebf8158(): void;
declare function N_0x4d9d109f63fee1d4(p0: number, p1: boolean): void;
declare function N_0x4dc416f246a41fc8(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x4dcdf92bf64236cd(p0: string, p1: string): void;
declare function N_0x4df7cfff471a7fb1(p0: number): boolean;
declare function N_0x4e52e752c76e7e7a(p0: number): void;
declare function N_0x4ed9c8d6da297639(): number;
declare function N_0x4fcd976da686580c(p0: number): number;
declare function N_0x4fcdbd3f0a813c25(p0: number, p1: number): void;
declare function N_0x50276ef8172f5f12(ped: number): void;
declare function N_0x5068f488ddb54dd8(): number;
declare function N_0x50a8a36201dbf83e(): boolean;
declare function N_0x511f1a683387c7e2(ped: number): number;
declare function N_0x51db102f4a3ba5e0(toggle: boolean): void;
declare function N_0x51f30db60626a20e(vehicle: number, x: number, y: number, z: number, rotX: number, rotY: number, rotZ: number, p7: number, p8: number): boolean;
declare function N_0x5324a0e3e4ce3570(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x53c10c8bd774f2c9(): number;
declare function N_0x53c31853ec9531ff(p0: number): void;
declare function N_0x53cae13e9b426993(p0: number): void;
declare function N_0x53ddc75bc3ac0a90(vehicle: number): void;
declare function N_0x5407b7288d0478b7(p0: number): number;
declare function N_0x547237aa71ab44de(p0: number): void;
declare function N_0x54e22ea2c1956a8d(p0: number): void;
declare function N_0x54f157e0336a3822(ped: number, p1: string, p2: number): void;
declare function N_0x5501b7a5cdb79d37(player: number): void;
declare function N_0x55384438fc55ad8e(value: number): void;
declare function N_0x5539c3ebf104a53a(p0: boolean): void;
declare function N_0x5574637681911fda(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x559ebf901a8c68e0(gamerHandle: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x55a1e095db052fa5(p0: number, p1: number): void;
declare function N_0x55a8becaf28a4eb7(): number;
declare function N_0x55ecf4d13d9903b0(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x55f5a5f07134de60(): void;
declare function N_0x55fcc0c390620314(player1: number, player2: number, toggle: boolean): void;
declare function N_0x560b423d73015e77(p0: number): number;
declare function N_0x5688585e6d563cd8(p0: number): void;
declare function N_0x56eb5e94318d3fb6(vehicle: number, p1: boolean): void;
declare function N_0x577599cced639ca2(p0: number): void;
declare function N_0x57d760d55f54e071(p0: number): void;
declare function N_0x583df8e3d4afbd98(): number;
declare function N_0x5845066d8a1ea7f7(vehicle: number, x: number, y: number, z: number, p4: number): void;
declare function N_0x584770794d758c18(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x58bb377bec7cd5f4(p0: boolean, p1: boolean): void;
declare function N_0x59328eb08c5ceb2b(): boolean;
declare function N_0x593feae1f73392d4(): number;
declare function N_0x59424bd75174c9b1(): void;
declare function N_0x59c3757b3b7408e8(vehicle: number, toggle: boolean, p2: number): void;
declare function N_0x59d421683d31835a(p0: number): void;
declare function N_0x5a34cd9c3c5bec44(p0: number): boolean;
declare function N_0x5a43c76f7fc7ba5f(): void;
declare function N_0x5a556b229a169402(): boolean;
declare function N_0x5a7f62fda59759bd(): void;
declare function N_0x5ad3932daeb1e5d3(): void;
declare function N_0x5b0316762afd4a64(): number;
declare function N_0x5b1f2e327b6b6fe1(): number;
declare function N_0x5b6010b3cbc29095(p0: number, p1: boolean): void;
declare function N_0x5b73c77d9eb66e24(p0: boolean): void;
declare function N_0x5b9853296731e88d(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function N_0x5ba68a0840d546ac(p0: number, p1: number): number;
declare function N_0x5bbcf35bf6e456f7(toggle: boolean): void;
declare function N_0x5bd5f255321c4aaf(p0: number): number;
declare function N_0x5bf29846c6527c54(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x5c3b791d580e0bc2(entity: number, p1: number): void;
declare function N_0x5c41e6babc9e2112(p0: number): void;
declare function N_0x5c48a1d6e3b33179(cam: number): boolean;
declare function N_0x5c497525f803486b(): void;
declare function N_0x5cdaed54b34b0ed0(p0: number): void;
declare function N_0x5d2bfaab8d956e0e(): void;
declare function N_0x5d96cfb59da076a0(vehicle: number, p1: number, p2: number): void;
declare function N_0x5dbf05db5926d089(p0: number): void;
declare function N_0x5debd9c4dc995692(): void;
declare function N_0x5e3aa4ca2b6fb0ee(p0: number): void;
declare function N_0x5e569ec46ec21cae(vehicle: number, toggle: boolean): void;
declare function N_0x5ead2bf6484852e4(): boolean;
declare function N_0x5ecd378ee64450ab(p0: number): void;
declare function N_0x5edef0cf8c1dab3c(): boolean;
declare function N_0x5ee5632f47ae9695(vehicle: number, health: number): void;
declare function N_0x5f456788b05faeac(p0: number, p1: number, p2: number): void;
declare function N_0x5f6df3d92271e8a1(toggle: boolean): void;
declare function SetParticleFxBloodScale(toggle: boolean): void;
declare function N_0x5fc472c501ccadb3(player: number): boolean;
declare function N_0x5ff2c33b13a02a11(p0: number): void;
declare function N_0x600f8cb31c7aab6e(p0: number): void;
declare function N_0x60edd13eb3ac1ff3(): boolean;
declare function N_0x60eedc12af66e846(p0: number): void;
declare function N_0x6100b3cefd43452e(p0: number): void;
declare function N_0x613f125ba3bd2eb9(): boolean;
declare function N_0x615d3925e87a3b26(checkpoint: number): void;
declare function N_0x61631f5df50d1c34(p0: boolean): void;
declare function N_0x617f49c2668e6155(): number;
declare function N_0x61f95e5bb3e0a8c6(p0: number): void;
declare function N_0x62374889a4d59f72(): void;
declare function N_0x62454a641b41f3c5(p0: number): void;
declare function N_0x629526aba383bcaa(): void;
declare function N_0x62e849b7eb28e770(p0: boolean): void;
declare function N_0x62ecfcfdee7885d6(): void;
declare function N_0x63b406d7884bfa95(): number;
declare function N_0x63eb2b972a218cac(): void;
declare function N_0x63ecf581bc70e363(p0: number, p1: number): void;
declare function N_0x641f272b52e2f0f8(p0: number, p1: number): void;
declare function N_0x6483c25849031c4f(p0: number, p1: number, p2: number, p3: number): number;
declare function N_0x649c97d52332341a(p0: number): void;
declare function N_0x64d779659bc37b19(entity: number): Vector3;
declare function N_0x64e5c4cc82847b73(): boolean;
declare function N_0x6501129c9e0ffa05(p0: number, p1: number): void;
declare function N_0x65482bfd0923c8a1(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function N_0x6551b1f7f6cd46ea(p0: number): void;
declare function N_0x659f9d71f52843f8(p0: number, p1: number): void;
declare function N_0x65b080555ea48149(p0: number): void;
declare function N_0x65d2ebb47e1cec21(toggle: boolean): void;
declare function N_0x661b5c8654add825(cam: number, p1: boolean): void;
declare function N_0x66972397e0757e7a(p0: number, p1: number, p2: number): void;
declare function N_0x66a49d021870fe88(): void;
declare function N_0x66e3aaface2d1eb8(p0: number, p1: number, p2: number): void;
declare function N_0x66e7cb63c97b7d20(): number;
declare function N_0x675721c9f644d161(): void;
declare function N_0x675d19c6067cae08(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x678f86d8fc040bdb(p0: number): void;
declare function N_0x67fc09bc554a75e5(): number;
declare function N_0x68103e2247887242(): void;
declare function N_0x68b562e124cc0aef(p0: number, p1: number): void;
declare function N_0x690a61a6d13583f6(player: number): boolean;
declare function N_0x690b76bd2763e068(): number;
declare function N_0x692d58df40657e8c(p0: number, p1: number, p2: number, p4: number, p5: boolean): LuaMultiReturn<[boolean, number]>;
declare function N_0x693478acbd7f18e7(): void;
declare function N_0x694e00132f2823ed(entity: number, toggle: boolean): void;
declare function N_0x699e4a5c8c893a18(p0: number, p1: string, p2: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x69ef772b192614c1(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x6a51f78772175a51(toggle: boolean): void;
declare function N_0x6a5d89d7769a40d8(toggle: boolean): void;
declare function N_0x6a60e43998228229(p0: number): void;
declare function N_0x6a7f19756f1a9016(): boolean;
declare function N_0x6a973569ba094650(vehicle: number, p1: number): void;
declare function N_0x6ad0bd5e087866cb(p0: number): void;
declare function N_0x6b7e4fb50d5f3d65(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x6bc0acd0673acebe(p0: number): LuaMultiReturn<[number, number]>;
declare function N_0x6bccf9948492fd85(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x6bfb12ce158e3dd4(p0: number): boolean;
declare function N_0x6bff5f84102df80a(player: number): void;
declare function N_0x6cd79468a1e595c6(padIndex: number): boolean;
declare function N_0x6ce50e47f5543d0c(): void;
declare function N_0x6cebe002e58dee97(componentHash: number): number;
declare function N_0x6d6840cee8845831(action: string): void;
declare function N_0x6dee77aff8c21bd1(): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x6e0a5253375c4584(): number;
declare function N_0x6e4361ff3e8cd7ca(p0: number): number;
declare function N_0x6e91b04e08773030(action: string): void;
declare function N_0x6eaaefc76acc311f(p0: number): number;
declare function N_0x6ebfb22d646ffc18(vehicle: number, p1: boolean): void;
declare function N_0x6f2135b6129620c1(toggle: boolean): void;
declare function N_0x6f361b8889a792a3(): void;
declare function N_0x6fb7bb3607d27fa2(): number;
declare function N_0x6fcf8ddea146c45b(p0: number): boolean;
declare function N_0x6fd97159fe3c971a(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x6fd992c4a1c1b986(): number;
declare function N_0x6fddad856e36988a(vehicle: number, toggle: boolean): void;
declare function N_0x6fddf453c0c756ec(): boolean;
declare function N_0x701fda1e82076ba4(): void;
declare function N_0x702bc4d605522539(p0: number): void;
declare function N_0x7033eefd9b28088e(p0: number): void;
declare function N_0x703cc7f60cbb2b57(p0: number): void;
declare function N_0x705a276ebff3133d(): boolean;
declare function N_0x70a382adec069dd3(coordX: number, coordY: number, coordZ: number): void;
declare function N_0x70b8ec8fc108a634(p0: boolean, p1: number): void;
declare function N_0x710bcda8071eded1(): boolean;
declare function N_0x711794453cfd692b(p0: number, p1: number): void;
declare function N_0x7148e0f43d11f0d9(): void;
declare function N_0x71b008056e5692d6(): void;
declare function N_0x71e7b2e657449aad(): number;
declare function N_0x723c1ce13fbfdb67(p0: number, p1: number): void;
declare function N_0x7241ccb7d020db69(entity: number, toggle: boolean): void;
declare function N_0x725012a415dba050(p0: number, p2: number): LuaMultiReturn<[number, number]>;
declare function N_0x7295c203dd659dfe(): void;
declare function N_0x72beccf4b829522e(p0: number, p1: number): void;
declare function N_0x72eb7ba9b69bf6ab(): boolean;
declare function N_0x73001e34f85137f8(p0: number): void;
declare function N_0x733c87d4ce22bea2(ped: number): void;
declare function N_0x734e1714d077da9a(p0: number, p1: number): void;
declare function N_0x73561d4425a021a2(p0: number, p1: number): void;
declare function N_0x737e398138550fff(vehicle: number, toggle: boolean): void;
declare function N_0x741a3d8380319a81(): void;
declare function N_0x742b58f723233ed9(p0: number): number;
declare function N_0x74a0fd0688f1ee45(p0: number): number;
declare function N_0x74fb3e29e6d10fa9(): number;
declare function N_0x754615490a029508(): number;
declare function N_0x759650634f07b6b4(p0: number): boolean;
declare function N_0x75ba1cb3b7d40caf(ped: number, p1: boolean): void;
declare function N_0x760910b49d2b98ea(): void;
declare function N_0x762db2d380b48d04(p0: number): void;
declare function N_0x76b3f29d3f967692(p0: number, p1: number): void;
declare function N_0x76d26a22750e849e(vehicle: number): void;
declare function N_0x77faddcbe3499df7(p0: number): void;
declare function N_0x7808619f31ff22db(): number;
declare function N_0x7813e8b8c4ae4799(pickup: number): void;
declare function N_0x78321bea235fd8cd(p0: number, p1: boolean): boolean;
declare function N_0x78ceee41f49f421f(p0: number, p1: number): void;
declare function N_0x78e8e3a640178255(entity: number): void;
declare function N_0x793ff272d5b365f4(): number;
declare function N_0x796a877e459b99ea(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x79c0e43eb9b944e2(hash: number): boolean;
declare function N_0x79d310a861697cc9(profileSetting: number, settingValue: number): void;
declare function N_0x79edac677ca62f81(transactionId: number): boolean;
declare function N_0x7a42b2e236e71415(): void;
declare function N_0x7ac24eab6d74118d(p0: boolean): boolean;
declare function N_0x7b18da61f6bae9d5(p0: number): void;
declare function N_0x7b8a361c1813fbef(): void;
declare function N_0x7bae68775557ae0b(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function N_0x7bbe7ff626a591fe(p0: number): void;
declare function N_0x7c226d5346d4d10a(p0: number): void;
declare function N_0x7c4fccd2e4deb394(): boolean;
declare function N_0x7d36291161859389(p0: number): void;
declare function N_0x7d395ea61622e116(p0: boolean): void;
declare function N_0x7d6f9a3ef26136a0(vehicle: number, toggle: boolean, p2: boolean): void;
declare function N_0x7d8ba05688ad64c7(p0: number): void;
declare function N_0x7db18ca8cad5b098(): number;
declare function N_0x7db53b37a2f211a0(): number;
declare function N_0x7e07c78925d5fd96(p0: number): number;
declare function N_0x7e2bd3ef6c205f09(p0: string, p1: boolean): void;
declare function N_0x7e6946f68a38b74f(p0: number): boolean;
declare function N_0x7ec3c679d0e7e46b(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x7ec6f9a478a6a512(): void;
declare function N_0x7ecdf98587e92dec(p0: number): void;
declare function N_0x7eec2a316c250073(p0: number, p1: number, p2: number): void;
declare function N_0x7ef7649b64d7ff10(entity: number): boolean;
declare function N_0x7f2c4cdf2e82df4c(p0: number): boolean;
declare function N_0x7f8f6405f4777af6(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: boolean): number;
declare function N_0x7f96f23fa9b73327(modelHash: number): void;
declare function N_0x7fa5d82b8f58ec06(): boolean;
declare function N_0x7fcc39c46c3c03bd(p0: number): boolean;
declare function N_0x7ffcbfee44ecfabf(): number;
declare function N_0x80054d7fcc70eec6(ped: number): void;
declare function N_0x801879a9b4f4b2fb(): boolean;
declare function N_0x80e3357fdef45c21(vehicle: number, toggle: boolean): void;
declare function N_0x810b5fcc52ec7ff0(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x814af7dcaacc597b(p0: number): void;
declare function N_0x817b86108eb94e51(p0: boolean): LuaMultiReturn<[number, number, number, number, number, number, number, number]>;
declare function N_0x81cbae94390f9f89(): void;
declare function N_0x820e9892a77e97cd(p0: number, p1: number): void;
declare function N_0x8235f1bead557629(vehicle: number, toggle: boolean): void;
declare function N_0x823ec8e82ba45986(p0: number): void;
declare function N_0x8269816f6cfd40f8(name: string): number;
declare function N_0x826d1ee4d1cafc78(p0: number, p1: number): void;
declare function N_0x829cd22e043a2577(p0: number): number;
declare function N_0x82acc484ffa3b05f(p0: number): number;
declare function N_0x82e0ac411e41a5b4(toggle: boolean): void;
declare function N_0x82ebb79e258fa2b7(entity: number, interiorID: number): void;
declare function N_0x830c3a44eb3f2cf9(p0: number): void;
declare function N_0x834344a414c7c85d(p0: number, p1: number): void;
declare function N_0x83660b734994124d(p0: number, p1: number, damageDealt: number): LuaMultiReturn<[number, number]>;
declare function N_0x836b62713e0534ca(): boolean;
declare function N_0x83a169eabcdb10a2(p0: number, p1: number): void;
declare function N_0x83fe8d7229593017(): void;
declare function N_0x8410c5e0cd847b9d(): void;
declare function N_0x8423541e8b3a1589(p0: number, p1: number, p2: number): void;
declare function N_0x84a810b375e69c0e(): number;
declare function N_0x84b418e93894ac1c(): number;
declare function N_0x84de3b5fb3e666f0(ropeId: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x84dfc579c2fc214c(p0: number): void;
declare function N_0x851cd923176eba7c(): void;
declare function N_0x8533cafde1f0f336(p0: number): number;
declare function N_0x858ec9fd25de04aa(p0: number, p1: number): void;
declare function N_0x85f6c9aba1de2bcf(): number;
declare function N_0x86255b1fc929e33e(p0: number): number;
declare function N_0x8634cef2522d987b(ped: number, p1: string, value: number): void;
declare function N_0x8664170ef165c4a6(p0: number, p1: number): void;
declare function N_0x870289a558348378(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x870b8b7a766615c8(p0: number, p1: number, p2: number): void;
declare function N_0x87ddeb611b329a9c(multiplier: number): void;
declare function N_0x88087ee1f28024ae(p0: number): void;
declare function N_0x8821196d91fa2de5(vehicle: number, toggle: boolean): void;
declare function N_0x88578f6ec36b4a3a(p0: number, p1: number): number;
declare function N_0x887fa38787de8c72(vehicle: number): void;
declare function N_0x8881c98a31117998(p0: number): void;
declare function N_0xa90e7227a9303fa9(p0: number): void;
declare function N_0x88b588b41ff7868e(): number;
declare function N_0x88bc673ca9e0ae99(vehicle: number, p1: boolean): void;
declare function N_0x892b6ab8f33606f5(p0: number, entity: number): void;
declare function N_0x8951eb9c6906d3c8(): void;
declare function N_0x8989cbd7b4e82534(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function N_0x8a4416c0db05fa66(newsStoryData: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x8b0c2964ba471961(): number;
declare function N_0x8b4ffc790ca131ef(p0: number, p1: number, p2: number, p3: number): number;
declare function N_0x8b9cdbd6c566c38c(): number;
declare function N_0x8bf907833be275de(p0: number, p1: number): void;
declare function N_0x8c8d2739ba44af0f(p0: number): boolean;
declare function N_0x8c9d11605e59d955(p0: number): void;
declare function N_0x8caab2bd3ea58bd4(p0: number): void;
declare function N_0x8cc469ab4d349b7c(p0: number, p1: string, p2: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x8cde909a0370bb3a(toggle: boolean): void;
declare function N_0x8cff648fbd7330f1(p0: number): void;
declare function N_0x8d74e26f54b4e5c3(p0: string): void;
declare function N_0x8d768602adef2245(player: number, p1: number): void;
declare function N_0x8d8adb562f09a245(p0: number): void;
declare function N_0x8d9df6eca8768583(threadId: number): void;
declare function N_0x8dca505a5c196f05(p0: number, p1: number): void;
declare function N_0x8e243837643d9583(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x8ec74ceb042e7cff(p0: number): void;
declare function N_0x8ef52acaecc51d9c(toggle: boolean): void;
declare function N_0x8f08017f9d7c47bd(p0: number, p2: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x8f0d5ba1c2cc91d7(toggle: boolean): void;
declare function N_0x906ca41a4b74eca4(): number;
declare function N_0x908311265d42a820(p0: number): void;
declare function N_0x9097eb6d4bb9a12a(player: number, entity: number): void;
declare function N_0x90cd7c6871fbf1b4(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x916ca67d26fd1e37(p0: string): void;
declare function N_0x91ef6ee6419e5b97(p0: boolean): void;
declare function N_0x9237e334f6e43156(p0: number): number;
declare function N_0x92da6e70ef249bd1(p0: string, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x92fc0eedfac04a14(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function N_0x930f504203f561c9(p0: number): void;
declare function N_0x933bbeeb8c61b5f4(): boolean;
declare function N_0x94538037ee44f5cf(p0: boolean): void;
declare function N_0x9465e683b12d3f6b(): void;
declare function N_0x9489659372a81585(): boolean;
declare function N_0x949f397a288b28b3(p0: number): void;
declare function N_0x95a7dabddbb78ae7(iplName1: string, iplName2: string): void;
declare function N_0x95baf97c82464629(p0: number, p1: number): void;
declare function N_0x9640e30a7f395e4b(vehicle: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x9641588dab93b4b5(p0: number): void;
declare function N_0x96e2929292a4db77(componentHash: number): number;
declare function N_0x96e6d5150dbf1c09(p0: number, p1: number, p2: number): void;
declare function N_0x973d76aa760a6cb6(p0: boolean): void;
declare function N_0x977ca98939e82e4b(weaponObject: number, p1: number): void;
declare function N_0x97841634ef7df1d6(vehicle: number, toggle: boolean): void;
declare function N_0x97e7e2c04245115b(p0: number): void;
declare function N_0x97ffb4adeed08066(p0: number, p1: number): void;
declare function N_0x9849de24fcf23ccc(vehicle: number, toggle: boolean): void;
declare function N_0x98c3cf913d895111(_string: string, length: number): string;
declare function N_0x98d18905bf723b99(): number;
declare function N_0x98e2bc1ca26287c3(): void;
declare function N_0x98edf76a7271e4f2(): void;
declare function N_0x9911f4a24485f653(p0: boolean): void;
declare function N_0x998e18ceb44487fc(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x99a05839c46ce316(toggle: boolean): void;
declare function N_0x99cad8e7afdb60fa(vehicle: number, p1: number, p2: number): void;
declare function N_0x9a62ec95ae10e011(): number;
declare function N_0x9a75585fb2e54fad(x: number, y: number, z: number, radius: number): void;
declare function N_0x9a77dfd295e29b09(ped: number, toggle: boolean): void;
declare function N_0x9ac92eed5e4793ab(): void;
declare function N_0x9b079e5221d984d3(p0: boolean): void;
declare function N_0x9b4bd21d69b1e609(): void;
declare function N_0x9b5016a6433a68c5(): number;
declare function N_0x9bd7bd55e4533183(p0: number, p1: number, p2: number): void;
declare function N_0x9bddc73cc6a115d4(vehicle: number, p1: boolean, p2: boolean): void;
declare function N_0x9becd4b9fef3f8a6(vehicle: number, p1: boolean): void;
declare function N_0x9c6a6c19b6c0c496(ped: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x9d252648778160df(p0: number): number;
declare function N_0x9d30687c57baa0bb(p0: number): void;
declare function N_0x9d3af56e94c9ae98(vehicle: number, p1: number): void;
declare function N_0x9d724b400a7e8ffc(p0: number, p1: number): void;
declare function N_0x9d7afcbf21c51712(toggle: boolean): void;
declare function N_0x9de5d2f723575ed0(): boolean;
declare function N_0x9dfe13ecdc1ec196(p0: boolean, p1: boolean): void;
declare function SetTimeIdleDrop(p0: boolean, p1: boolean): void;
declare function N_0x9e30e91fb03a2caf(): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x9e6542f0ce8e70a3(toggle: boolean): void;
declare function N_0x9ebd751e5787baf2(p0: boolean): void;
declare function N_0x9ec8858184cd253a(): number;
declare function N_0x9edd76e87d5d51ba(player: number): void;
declare function N_0x9f260bfb59adbca3(player: number, entity: number): void;
declare function N_0x9f3f689b814f2599(vehicle: number, p1: boolean): void;
declare function N_0x9f97da93681f87ea(): void;
declare function N_0x9fcb3cbfb3ead69a(p0: number, p1: number): void;
declare function N_0x9fedf86898f100e9(): number;
declare function N_0xa01bc64dd4bfbbac(vehicle: number, seatIndex: number): number;
declare function N_0xa08fe5e49bdc39dd(p0: number, p1: number, p2: boolean): void;
declare function N_0xa0ad167e4b39d9a2(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number, p12: number, p13: number): number;
declare function N_0xa0cefcea390aab9b(p0: number): void;
declare function N_0xa0f93d5465b3094d(p0: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xa0fa4ec6a05da44e(): number;
declare function N_0xa0fe76168a189ddb(): number;
declare function N_0xa12d3a5a3753cc23(): number;
declare function N_0xa17784fca9548d15(p0: number, p1: number, p2: number): void;
declare function N_0xa1ae736541b0fca3(p1: boolean): number;
declare function N_0xa213b11dff526300(): boolean;
declare function N_0xa238192f33110615(): LuaMultiReturn<[boolean, number, number, number]>;
declare function N_0xa247f9ef01d8082e(p0: number): void;
declare function N_0xa2767257a320fc82(p0: number, p1: boolean): void;
declare function N_0xa2c1f5e92afe49ed(): void;
declare function N_0xa2c9ac24b4061285(ped: number, weaponHash: number): number;
declare function N_0xa2ccbe62cd4c91a4(toggle: number): void;
declare function N_0xa2e9c1ab8a92e8cd(toggle: boolean): void;
declare function N_0xa306f470d1660581(): number;
declare function N_0xa3c53804bdb68ed2(p0: number, p1: number): void;
declare function N_0xa3f3564a5b3646c0(ped: number): boolean;
declare function N_0xa468e0be12b12c70(): boolean;
declare function N_0xa46b73faa3460ae1(p0: boolean): void;
declare function N_0xa4822f1cf23f4810(p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): LuaMultiReturn<[boolean, number, Vector3, Vector3]>;
declare function N_0xa4a0065e39c9f25c(): LuaMultiReturn<[boolean, number, number, boolean, boolean]>;
declare function N_0xa4a9a4c40e615885(p0: number): void;
declare function N_0xa51338e0dccd4065(p0: number, p1: number, p2: number): void;
declare function N_0xa51b086b0b2c0f7a(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xa52d5247a4227e14(p0: number): void;
declare function N_0xa5eafe473e45c442(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;
declare function N_0xa660faf550eb37e5(p0: number, p1: boolean): void;
declare function N_0xa6eef01087181edd(p0: number, p1: number): number;
declare function N_0xa6f54bb2ffca35ea(p0: number): void;
declare function N_0xa6fceccf4721d679(p0: number): void;
declare function N_0xa7092afe81944852(): void;
declare function N_0xa736cf7fb7c5bff4(): LuaMultiReturn<[number, number, number, number]>;
declare function N_0xa761d4ac6115623d(): number;
declare function N_0xa7862bc5ed1dfd7e(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xa78b8fa58200da56(p0: number): void;
declare function N_0xa7dcdf4ded40a8f4(vehicle: number, p1: boolean): void;
declare function N_0xa85a21582451e951(doorHash: number, p1: boolean): void;
declare function N_0xa8733668d1047b51(p0: number): void;
declare function N_0xa8a7d434afb4b97b(p0: string, p1: number): void;
declare function N_0xa8acb6459542a8c8(): number;
declare function N_0xa943fd1722e11efd(): number;
declare function N_0xa95cfb4e02390842(p0: number, p1: number, p2: number): void;
declare function N_0xa95f667a755725da(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xa9b61a329bfdcbea(p0: number, p1: boolean): void;
declare function N_0xaa059c615de9dd03(p0: number, p1: number): void;
declare function N_0xaa19f5572c38b564(p0: number): LuaMultiReturn<[number, number]>;
declare function N_0xaa525dff66bb82f5(p0: number, p1: number, p2: number): void;
declare function N_0xaa5fafcd2c5f5e47(): Vector3;
declare function N_0xaa653ae61924b0a0(vehicle: number, toggle: boolean): void;
declare function N_0xaa76052dda9bfc3e(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function N_0xaaa6a3698a69e048(p0: number): number;
declare function N_0xaabd62873ffb1a33(p0: number, p1: number): void;
declare function N_0xaae9be70ec7c69ab(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number): void;
declare function N_0xab04325045427aae(vehicle: number, p1: boolean): void;
declare function N_0xab13a5565480b6d9(ped: number, p1: string): number;
declare function N_0xab31ef4de6800ce9(p0: number, p1: number): void;
declare function N_0xab6781a5f3101470(p0: number, p1: number): void;
declare function N_0xac2890471901861c(p0: number): void;
declare function N_0xad27d957598e49e9(ped: number, p1: number, p2: number, hash: number, p4: number, p5: number): void;
declare function N_0xad73ce5a09e42d12(player: number): void;
declare function N_0xadb57e5b663cca8b(p0: number): LuaMultiReturn<[number, number]>;
declare function N_0xadd6627c4d325458(p0: number): void;
declare function N_0xadf084fb8f075d06(p0: number): boolean;
declare function N_0xae3fee8709b39dcb(vehicle: number): boolean;
declare function N_0xae51bc858f32ba66(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0xaeab987727c5a8a4(p0: number): boolean;
declare function N_0xaedf1bc1c133d6e3(): number;
declare function N_0xaf348afcb575a441(roomName: string): void;
declare function N_0xaf60e6a2936f982a(p0: number, p1: number): void;
declare function N_0xafc976fd0580c7b3(ped: number, toggle: boolean): void;
declare function N_0xafe24e4d29249e4a(object: number, p1: number, p2: number, p3: boolean): boolean;
declare function N_0xaff47709f1d5dcce(): number;
declare function N_0xb1381b97f70c7b30(): void;
declare function N_0xb13e88e655e5a3bc(): void;
declare function N_0xb17bc6453f6cf5ac(p0: number, p1: number): void;
declare function N_0xb1b6216ca2e7b55e(p0: number, p1: boolean, p2: boolean): void;
declare function N_0xb1d2bb1e1631f5b1(): boolean;
declare function N_0xb26f670685631727(p0: number): void;
declare function N_0xb282749d5e028163(p0: number, p1: number): void;
declare function N_0xb2d0bde54f0e8e5a(object: number, toggle: boolean): void;
declare function N_0xb2e0c0d6922d31f2(vehicle: number, toggle: boolean): void;
declare function N_0xb2ebe8cbc58b90e9(): number;
declare function N_0xb309ebea797e001f(p0: number): number;
declare function N_0xb3352e018d6f89df(toggle: boolean): void;
declare function N_0xb37e4e6a2388ca7b(): boolean;
declare function N_0xb3c641f3630bf6da(p0: number): void;
declare function N_0xb3da2606774a8e2d(): boolean;
declare function N_0xb45eff719d8427a6(p0: number): void;
declare function N_0xb4c2ec463672474e(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xb4deae67f35e2acd(p0: number): void;
declare function N_0xb51b9ab9ef81868c(toggle: boolean): void;
declare function N_0xb542de8c3d1cb210(p0: boolean): void;
declare function N_0xb552929b85fc27ec(p0: number, p1: number): void;
declare function N_0xb569f41f3e7e83a4(p0: number): void;
declare function N_0xb5b58e24868cb09e(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0xb5b7742424bd4445(p0: number, p1: number): void;
declare function N_0xb5d3453c98456528(): number;
declare function N_0xb606e6cc59664972(p0: number): void;
declare function N_0xb68cfaf83a02768d(vehicle: number, toggle: boolean): void;
declare function N_0xb743f735c03d7810(ropeId: number, p1: number): void;
declare function N_0xb746d20b17f2a229(): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xb7b873520c84c118(): void;
declare function N_0xb7c6d80fb371659a(): void;
declare function N_0xb81cf134aeb56ffb(): void;
declare function N_0xb885852c39cc265d(): void;
declare function N_0xb8b52e498014f5b0(ped: number): boolean;
declare function N_0xb9351a07a0d458b1(p0: number): number;
declare function N_0xb9562064627ff9db(p0: number, p1: number): void;
declare function N_0xb9cf1f793a9f1bf1(): boolean;
declare function N_0xba0127da25fd54c9(p0: number, p1: number): void;
declare function N_0xba3d194057c79a7b(p0: string): void;
declare function N_0xba4b8d83bdc75551(p0: number): void;
declare function N_0xba7f0b77d80a4eb7(p0: number, p1: number): void;
declare function N_0xba8d65c1c65702e5(toggle: boolean): void;
declare function N_0xba9749cc94c1fd85(): number;
declare function N_0xbaa2f0490e146be8(p0: number): void;
declare function N_0xbb2333bb87ddd87f(p0: number, p1: number): void;
declare function N_0xbb90e12cac1dab25(p0: number): void;
declare function N_0xbc0ce682d4d05650(ropeId: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number, p12: number, p13: number): void;
declare function N_0xbc9490ca15aea8fb(player: number): void;
declare function N_0xbcedb009461da156(): number;
declare function N_0xbd0efb25cca8f97a(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xbd545d44cce70597(): boolean;
declare function N_0xbdb6f89c729cf388(): boolean;
declare function N_0xbe197eaa669238f4(p0: number, p1: number, p2: number, p3: number): number;
declare function N_0xbe3db208333d9844(): number;
declare function N_0xbe5c1255a1830ff5(vehicle: number, toggle: boolean): void;
declare function N_0xbeb2d9a1d9a8f55a(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xbed8ca5ff5e04113(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xbed9f5693f34ed17(statName: number, p1: number, outValue: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xbef34b1d9624d5dd(p0: boolean): void;
declare function N_0xbf22e0f32968e967(player: number, p1: boolean): void;
declare function N_0xbf371cd2b64212fd(p0: number): void;
declare function N_0xbf4dc1784be94dfa(ped: number, p1: boolean, hash: number): void;
declare function N_0xbf4f34a85ca2970c(): void;
declare function N_0xbf72910d0f26f025(): number;
declare function N_0xbfafdb5faaa5c5ab(p0: number): void;
declare function N_0xbffe53ae7e67fcdc(p0: number, p1: number): void;
declare function N_0xc01d2470f22cde5a(): void;
declare function N_0xc03fab2c2f92289b(p0: number): void;
declare function N_0xc0416b061f2b7e5e(p0: boolean): void;
declare function N_0xc0e0d686ddfc6eae(): number;
declare function N_0xc0ed6438e6d39ba8(p0: number, p1: number, p2: number): void;
declare function N_0xc13c38e47ea5df31(p0: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xc141b8917e0017ec(): void;
declare function N_0xc14bd9f5337219b2(p0: number): void;
declare function N_0xc1805d05e6d4fe10(vehicle: number): void;
declare function N_0xc1e963c58664b556(p0: number): void;
declare function N_0xc2c97ea97711d1ae(): boolean;
declare function N_0xc2d2ad9eaae265b8(): boolean;
declare function N_0xc2ee020f5fb4db53(ped: number): void;
declare function N_0xc30bdaee47256c13(p0: number): number;
declare function N_0xc32ea7a2f6ca7557(): number;
declare function N_0xc3376f42b1faccc6(player: number): void;
declare function SetAreasGeneratorOrientation(player: number): void;
declare function N_0xc34bc448da29f5e9(entity: number, toggle: boolean): void;
declare function N_0xc35a6d07c93802b2(): void;
declare function N_0xc361aa040d6637a8(vehicle: number, p1: boolean): void;
declare function N_0xc42dd763159f3461(): boolean;
declare function N_0xc434133d9ba52777(p0: number, TypeOfWeapon: number): LuaMultiReturn<[number, number]>;
declare function N_0xc4637a6d03c24cc3(): boolean;
declare function N_0xc4b3347bd68bd609(p0: number): void;
declare function N_0xc50ce861b55eab8b(vehicle: number, p1: boolean): void;
declare function N_0xc56fbf2f228e1dac(modelHash: number, p1: number, p2: number): number;
declare function N_0xc571d0e77d8bbc29(): boolean;
declare function N_0xc594b315edf2d4af(ped: number): void;
declare function N_0xc5a35c73b68f3c49(): boolean;
declare function N_0xc5c8f970d4edff71(p0: number): void;
declare function N_0xc6033d32241f6fb5(object: number, toggle: boolean): void;
declare function N_0xc61b86c9f61eb404(toggle: boolean): void;
declare function N_0xc64a06d939f826f5(): LuaMultiReturn<[boolean, number, number, number]>;
declare function N_0xc67db108a9ade3be(p0: number, p1: number): void;
declare function N_0xc67e2da1cbe759e2(): void;
declare function N_0xc6e0e2616a7576bb(): number;
declare function N_0xc6e74cf8c884c880(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function N_0xc7f29ca00f46350e(p0: boolean): void;
declare function N_0xc830417d630a50f9(transactionId: number): boolean;
declare function N_0xc8391c309684595a(): void;
declare function N_0xc847b43f369ac0b5(): void;
declare function N_0xc87e740d9f3872cc(): number;
declare function N_0xc8b1b2425604cdd0(): boolean;
declare function N_0xc8b5c4a79cc18b94(cam: number): void;
declare function N_0xc8e1071177a23be5(): LuaMultiReturn<[boolean, number, number, number]>;
declare function N_0xc8ede9bdbccba6d4(p1: number, p2: number, p3: number): number;
declare function N_0xca465d9cc0d231ba(p0: number): void;
declare function N_0xca4ae345a153d573(p0: boolean): void;
declare function N_0xca575c391fea25cc(p0: number): void;
declare function N_0xca59ccae5d01e4ce(): void;
declare function N_0xca6b2f7ce32ab653(p0: number, p2: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xcac57395b151135f(player: number, p1: boolean): void;
declare function N_0xcb0360efefb2580d(padIndex: number): void;
declare function N_0xcb645e85e97ea48b(): boolean;
declare function N_0xcb82a0bf0e3e3265(p0: number): number;
declare function N_0xcc25a4553dfbf9ea(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0xcc6e963682533882(object: number): void;
declare function N_0xccd078c2665d2973(p0: boolean): void;
declare function N_0xcd018c591f94cb43(ped: number, p1: boolean): void;
declare function N_0xcd0f5b5d932ae473(): void;
declare function N_0xcd4d66b43b1dd28d(p0: number, p1: number, p2: number): void;
declare function N_0xcd74233600c4ea6b(toggle: boolean): void;
declare function N_0xcea7c8e1b48ff68c(p0: number, p1: number): void;
declare function N_0xced08cbe8ebb97c7(p0: number, p1: number): void;
declare function N_0xceda60a74219d064(p0: number, p1: boolean): void;
declare function N_0xcf9159024555488c(p0: number): void;
declare function N_0xcfd16f0db5a3535c(toggle: boolean): void;
declare function N_0xcfd778e7904c255e(vehicle: number): void;
declare function N_0xcfeb46dcd7d8d5eb(p0: boolean): void;
declare function N_0xd05a3241b9a86f19(p0: number, p1: number): void;
declare function N_0xd10282b6e3751ba0(): number;
declare function N_0xd1942374085c8469(p0: number): void;
declare function N_0xd1a1ee3b4fa8e760(p0: number): void;
declare function N_0xd1c55b110e4df534(p0: number): void;
declare function N_0xd1c9b92bdd3f151d(p0: number, p1: number, p2: number): void;
declare function N_0xd2049635deb9c375(): void;
declare function N_0xd29334ed1a256dbf(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0xd2dccd8e16e20997(p0: number): void;
declare function N_0xd313de83394af134(): boolean;
declare function N_0xd3301660a57c9272(p0: number): void;
declare function N_0xd33daa36272177c4(ped: number): void;
declare function N_0xd3e51c0ab8c26eee(p0: number, p1: number): number;
declare function N_0xd4196117af7bb974(p0: number, p1: number): number;
declare function N_0xd4367d310f079db0(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xd4a7a435b3710d05(x: number, y: number, z: number, radius: number): void;
declare function N_0xd558bec0bba7e8d2(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0xd565f438137f0e10(p0: number, p1: number): void;
declare function N_0xd642319c54aadeb6(): number;
declare function N_0xd6ca58b3b53a0f22(p0: number): void;
declare function N_0xd6d7478ca62b8d41(p0: number, p1: number): void;
declare function N_0xd7b6c73cad419bcf(p0: boolean): void;
declare function N_0xd7b80e7c3befc396(p0: number, p1: number): void;
declare function N_0xd8122c407663b995(): number;
declare function N_0xd821056b9acf8052(player: number, p1: number): void;
declare function N_0xd9454b5752c857dc(): void;
declare function N_0xd9f692d349249528(): void;
declare function N_0xda07819e452ffe8f(p0: number): void;
declare function N_0xdaf80797fc534bec(p0: number): void;
declare function N_0xdaf87174be7454ff(p0: number): boolean;
declare function N_0xdb1ea9411c8911ec(checkpointHandle: number): void;
declare function N_0xdb41d07a45a6d4b7(p0: number): number;
declare function N_0xdb663cc9ff3407a9(player: number): number;
declare function N_0xdb90c6cca48940f1(p0: boolean): void;
declare function N_0xdbc631f109350b8c(vehicle: number, p1: boolean): void;
declare function N_0xdbf860cf1db8e599(p0: number): number;
declare function N_0xdc6f8601faf2e893(entity: number, toggle: boolean): void;
declare function N_0xdcc07526b8ec45af(player: number): boolean;
declare function N_0xdce97bdf8a0eabc8(): void;
declare function N_0xdd2620b7b9d16ff1(player: number, p1: number): boolean;
declare function N_0xdd6bcf9e94425df9(): void;
declare function N_0xdd79df9f4d26e1c9(): void;
declare function N_0xde03620f8703a9df(): number;
declare function N_0xde45d1a1ef45ee61(player: number, toggle: boolean): void;
declare function SetHudAnimStopLevel(player: number, toggle: boolean): void;
declare function N_0xde68e30d89f97132(amount: number, p1: number): void;
declare function N_0xdeaaf77eb3687e97(p0: number, p1: number): LuaMultiReturn<[number, number]>;
declare function N_0xdf4b952f7d381b95(): number;
declare function N_0xdfbd93bf2943e29b(p0: number): void;
declare function N_0xdfcdb14317a9b361(p0: number): void;
declare function N_0xdfe68c4b787e1bfb(ped: number): void;
declare function N_0xe058175f8eafe79a(p0: boolean): void;
declare function N_0xe05dd0e9707003a3(p0: number, p1: boolean): void;
declare function N_0xe05f6aeefeb0bb02(p0: number, p1: number, p2: number): void;
declare function N_0xe0f82d68c7039158(p0: number): void;
declare function N_0xe111a7c0d200cbc5(p0: number, p1: number): void;
declare function N_0xe154b48b68ef72bc(p0: number): boolean;
declare function N_0xe1615ec03b3bb4fd(): boolean;
declare function N_0xe16aa70ce9beedc3(p0: number): number;
declare function N_0xe23adc6fcb1f29ae(p0: number, p1: number, p2: number): void;
declare function N_0xe2892e7e55d7073a(p0: number): void;
declare function N_0xe2bb399d90942091(p0: number, p1: number): void;
declare function N_0xe2e244ab823b4483(amount: number, p1: number): void;
declare function N_0xe2f53f172b45ede1(): void;
declare function N_0xe3261d791eb44acb(p0: number): void;
declare function N_0xe36a98d8ab3d3c66(p0: boolean): void;
declare function N_0xe3d969d2785ffb5e(): void;
declare function N_0xe3e2c1b4c59dbc77(unk: number): void;
declare function N_0xe3e5a7c64ca2c6ed(): number;
declare function N_0xe42d626eec94e5d9(p0: number, p1: number, p2: number, p3: number): LuaMultiReturn<[number, number, number]>;
declare function N_0xe496a53ba5f50a56(p0: number): number;
declare function N_0xe4c3b169876d33d7(p0: number): void;
declare function N_0xe4dcec7fd5b739a5(ped: number): void;
declare function N_0xe4e6dd5566d28c82(): void;
declare function N_0xe4f6e8d07a2f0f51(p0: number): number;
declare function N_0xe532ec1a63231b4f(p0: number, p1: number): void;
declare function N_0xe5810ac70602f2f5(vehicle: number, p1: number): void;
declare function N_0xe59343e9e96529e7(): number;
declare function N_0xe5e9746a66359f9d(): number;
declare function N_0xe63d7c6eececb66b(toggle: boolean): void;
declare function N_0xe66377cddada4810(entity: number, p1: boolean): void;
declare function N_0xe6717e652b8c8d8a(p0: number, p1: number): void;
declare function N_0xe67c6dfd386ea5e7(p0: boolean): void;
declare function N_0xe6d2cedd370ff98e(p0: number, p1: number): void;
declare function N_0xe75a4a2e5e316d86(): boolean;
declare function N_0xe791df1f73ed2c8b(p0: number): number;
declare function N_0xe851e480b814d4ba(vehicle: number, p1: boolean): void;
declare function N_0xe8718faf591fd224(vehicle: number): boolean;
declare function N_0xe8853fbce7d8d0d6(): number;
declare function N_0xe906ec930f5fe7c8(p0: number, p1: number): void;
declare function N_0xe95b0c7d5ba3b96b(ped: number): boolean;
declare function N_0xea8c0ddb10e2822a(p0: number, p1: number): void;
declare function N_0xea95c0853a27888e(): void;
declare function N_0xea9960d07dadcf10(p0: number): number;
declare function N_0xeaf0fa793d05c592(): number;
declare function N_0xeb078ca2b5e82add(p0: number, p1: number): void;
declare function N_0xeb2104e905c6f2e9(): number;
declare function N_0xeb6f1a9b5510a5d2(p0: number, p1: boolean): void;
declare function N_0xeb81a3dadd503187(): void;
declare function N_0xebcab9e5048434f4(): number;
declare function N_0xebd3205a207939ed(p0: number): void;
declare function N_0xebf8284d8cadeb53(): void;
declare function N_0xebfa8d50addc54c4(p0: number): boolean;
declare function N_0xec4b4b3b9908052a(ped: number, unk: number): void;
declare function N_0xec72c258667be5ea(p0: number): number;
declare function N_0xecb41ac6ab754401(): boolean;
declare function N_0xed3c76adfa6d07c4(ped: number): void;
declare function N_0xed5ede9e676643c9(p0: number, p1: number): void;
declare function N_0xed5fd7af10f5e262(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xed76d195e6e3bf7f(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xedbc8405b3895cc9(p0: number, p1: number): void;
declare function N_0xedbf6c9b0d2c65c8(p0: number): void;
declare function N_0xeebfc7a7efdc35b4(vehicle: number): number;
declare function N_0xef398beee4ef45f9(p0: boolean): void;
declare function N_0xef39ee20c537e98c(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function N_0xef9d388f8d377f44(vehicle: number, p1: boolean): void;
declare function N_0xefabc7722293da7c(): void;
declare function N_0xf033419d1b81fae8(p0: number): number;
declare function N_0xf051d9bfb6ba39c0(p0: number): void;
declare function N_0xf06a6f41cb445443(p0: number): void;
declare function N_0xf083835b70ba9bfe(): void;
declare function N_0xf11f01d98113536a(p0: number): LuaMultiReturn<[number, number]>;
declare function N_0xf13fe2a80c05c561(): boolean;
declare function N_0xf1a1803d3476f215(value: number): void;
declare function N_0xf22ca0fd74b80e7a(p0: number): boolean;
declare function N_0xf2385935bffd4d92(ped: number): boolean;
declare function N_0xf239400e16c23e08(padIndex: number, p1: number): void;
declare function N_0xf25e02cb9c5818f8(): void;
declare function N_0xf284ac67940c6812(): number;
declare function N_0xf287f506767cc8a9(): number;
declare function N_0xf2bebcdfafdaa19e(toggle: boolean): void;
declare function N_0xf2ca003f167e21d2(): number;
declare function ReturnZero(): number;
declare function N_0xf2e07819ef1a5289(): boolean;
declare function N_0xf3365489e0dd50f9(vehicle: number, toggle: boolean): void;
declare function N_0xf3b0e0aed097a3f5(p0: number, p1: number): number;
declare function N_0xf3f776ada161e47d(p0: number, p1: number): void;
declare function N_0xf49abc20d8552257(p0: number): void;
declare function N_0xf4a0dadb70f57fa6(): void;
declare function N_0xf51d36185993515d(checkpoint: number, posX: number, posY: number, posZ: number, unkX: number, unkY: number, unkZ: number): void;
declare function N_0xf534d94dfa2ead26(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0xf55e4046f6f831dc(p0: number, p1: number): void;
declare function N_0xf56dfb7b61be7276(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number, p12: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xf6baaaf762e1bf40(p0: string, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xf6f4383b7c92f11a(p0: number): void;
declare function N_0xf78b803082d4386f(p0: number): void;
declare function N_0xf78f94d60248c737(vehicle: number, p1: boolean): boolean;
declare function N_0xf814fec6a19fd6e0(): void;
declare function N_0xf8155a7f03ddfc8e(p0: number): void;
declare function N_0xf83d0febe75e62c9(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number): void;
declare function N_0xf854439efbb3b583(): void;
declare function N_0xf8ad2eed7c47e8fe(ped: number, p1: boolean, p2: boolean): void;
declare function N_0xf8b49f5ba7f850e7(vehicle: number, p1: number): void;
declare function N_0xf8c54a461c3e11dc(): LuaMultiReturn<[number, number, number, number]>;
declare function N_0xf9096193df1f99d4(p0: number): void;
declare function N_0xf92099527db8e2a7(p0: number, p1: number): void;
declare function N_0xf9acf4a08098ea25(ped: number, p1: boolean): void;
declare function N_0xf9f2922717b819ec(): number;
declare function N_0xfa07759e6fddd7cf(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xfa1e0e893d915215(toggle: boolean): void;
declare function N_0xfa2888e3833c8e96(): void;
declare function N_0xfa3ffb0eebc288a3(p0: boolean): void;
declare function N_0xfa83ca6776038f64(x: number, y: number, z: number): void;
declare function N_0xfaa457ef263e8763(name: string): number;
declare function N_0xfab944d4d481accb(ped: number, toggle: boolean): void;
declare function N_0xfac18e7356bd3210(): void;
declare function N_0xfac75988a7d078d3(player: number): void;
declare function N_0xfae628f1e9adb239(p0: number, p1: number, p2: number): void;
declare function N_0xfaf2a78061fd9ef4(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xfb00ca71da386228(): void;
declare function N_0xfb199266061f820a(): boolean;
declare function N_0xfb1f9381e80fa13f(p0: number, p1: number): LuaMultiReturn<[number, number]>;
declare function N_0xfb680d403909dc70(p0: number, p1: number): void;
declare function N_0xfb80ab299d2ee1bd(toggle: boolean): void;
declare function N_0xfcc228e07217fcac(p0: number): void;
declare function N_0xfcf6788fc4860cd4(checkpoint: number): void;
declare function N_0xfd3151cd37ea2245(entity: number): void;
declare function N_0xfd325494792302d7(ped: number, toggle: boolean): void;
declare function SetTimeExclusiveDisplayTexture(ped: number, toggle: boolean): void;
declare function N_0xfd75dabc0957bf33(p0: boolean): void;
declare function N_0xfdc07c58e8aab715(pickupHash: number): void;
declare function N_0xfe4c1d0d3b9cc17e(p0: number, p1: boolean): boolean;
declare function N_0xfec9a3b1820f3331(ped: number): boolean;
declare function N_0xff266d1d0eb1195d(): void;
declare function N_0xff4803bc019852d9(p0: number, p1: number): void;
declare function N_0xff8f3a92b75ed67a(): number;
declare function N_0xffee8fa29ab9a18e(player: number): void;
declare function NetGameserverBasketAddItem(quantity: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xf30980718c8ed876(quantity: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkShopBasketAddItem(quantity: number): LuaMultiReturn<[boolean, number]>;
declare function NetGameserverBasketApplyServerData(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xe1a0450ed46a7812(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkShopBasketApplyServerData(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function NetGameserverBasketDelete(): boolean;
declare function NetGameserverBasketEnd(): boolean;
declare function N_0xa65568121df2ea26(): boolean;
declare function N_0xe547e9114277098f(): boolean;
declare function NetworkShopBasketEnd(): boolean;
declare function NetGameserverBasketIsFull(): boolean;
declare function N_0x27f76cc6c55ad30e(): boolean;
declare function NetworkShopBasketIsFull(): boolean;
declare function NetGameserverBasketStart(categoryHash: number, actionHash: number, flags: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkShopBasketStart(categoryHash: number, actionHash: number, flags: number): LuaMultiReturn<[boolean, number]>;
declare function NetGameserverBeginService(categoryHash: number, itemHash: number, actionTypeHash: number, value: number, flags: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x3c5fd37b5499582e(categoryHash: number, itemHash: number, actionTypeHash: number, value: number, flags: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkShopBeginService(categoryHash: number, itemHash: number, actionTypeHash: number, value: number, flags: number): LuaMultiReturn<[boolean, number]>;
declare function NetGameserverCatalogIsReady(): boolean;
declare function N_0x3c4487461e9b0dcb(): boolean;
declare function NetGameserverCatalogItemExists(name: string): boolean;
declare function N_0xbd4d7eaf8a30f637(name: string): boolean;
declare function NetworkShopIsItemUnlocked(name: string): boolean;
declare function NetworkShopDoesItemExist(name: string): boolean;
declare function NetGameserverCatalogItemExistsHash(hash: number): boolean;
declare function N_0x247f0f73a182ea0b(hash: number): boolean;
declare function NetworkShopIsItemUnlockedHash(hash: number): boolean;
declare function NetworkShopDoesItemExistHash(hash: number): boolean;
declare function NetGameserverCheckoutStart(transactionId: number): boolean;
declare function N_0x39be7cea8d9cc8e6(transactionId: number): boolean;
declare function NetworkShopCheckoutStart(transactionId: number): boolean;
declare function NetGameserverDeleteCharacterSlot(slot: number, transfer: boolean, reason: number): boolean;
declare function N_0x51f1a8e48c3d2f6d(slot: number, transfer: boolean, reason: number): boolean;
declare function NetGameserverDeleteCharacterSlotGetStatus(): number;
declare function N_0x0a6d923dffc9bd89(): number;
declare function NetGameserverDeleteSetTelemetryNonceSeed(): boolean;
declare function N_0x112cef1615a1139f(): boolean;
declare function NetworkShopDeleteSetTelemetryNonceSeed(): boolean;
declare function NetGameserverEndService(transactionId: number): boolean;
declare function N_0xe2a99a9b524befff(transactionId: number): boolean;
declare function NetworkShopEndService(transactionId: number): boolean;
declare function NetworkShopTerminateService(transactionId: number): boolean;
declare function NetGameserverGetBalance(inventory: boolean, playerbalance: boolean): boolean;
declare function N_0x35a1b3e1d1315cfa(inventory: boolean, playerbalance: boolean): boolean;
declare function NetGameserverGetCatalogState(state: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xcf38dafbb49ede5e(state: number): LuaMultiReturn<[boolean, number]>;
declare function NetGameserverGetPrice(itemHash: number, categoryHash: number, p2: boolean): number;
declare function NetworkShopGetPrice(itemHash: number, categoryHash: number, p2: boolean): number;
declare function NetGameserverGetTransactionManagerData(): LuaMultiReturn<[boolean, number, boolean]>;
declare function N_0x897433d292b44130(): LuaMultiReturn<[boolean, number, boolean]>;
declare function NetGameserverIsCatalogValid(): boolean;
declare function N_0x2b949a1e6aec8f6a(): boolean;
declare function NetGameserverIsSessionRefreshPending(): boolean;
declare function N_0x810e8431c0614bf9(): boolean;
declare function NetworkShopGetTransactionsDisabled(): boolean;
declare function NetGameserverIsSessionValid(charSlot: number): boolean;
declare function N_0xb24f0944da203d9e(charSlot: number): boolean;
declare function NetworkShopGetTransactionsEnabledForCharacter(charSlot: number): boolean;
declare function NetGameserverSessionApplyReceivedData(charSlot: number): boolean;
declare function N_0x2f41d51ba3bcd1f1(charSlot: number): boolean;
declare function NetworkShopSessionApplyReceivedData(charSlot: number): boolean;
declare function NetGameserverSetTelemetryNonceSeed(p0: number): boolean;
declare function N_0x9507d4271988e1ae(p0: number): boolean;
declare function NetworkShopSetTelemetryNonceSeed(p0: number): boolean;
declare function NetGameserverStartSession(charSlot: number): boolean;
declare function N_0xa135ac892a58fc07(charSlot: number): boolean;
declare function NetworkShopStartSession(charSlot: number): boolean;
declare function NetGameserverTransferBankToWallet(charSlot: number, amount: number): boolean;
declare function N_0xd47a2c1ba117471d(charSlot: number, amount: number): boolean;
declare function NetworkTransferBankToWallet(charSlot: number, amount: number): boolean;
declare function NetGameserverTransferCashGetStatus(): number;
declare function N_0x23789e777d14ce44(): number;
declare function NetGameserverTransferCashGetStatus_2(): number;
declare function N_0x350aa5ebc03d3bd2(): number;
declare function NetGameserverTransferCashSetTelemetryNonceSeed(): boolean;
declare function N_0x498c1e05ce5f7877(): boolean;
declare function NetworkShopCashTransferSetTelemetryNonceSeed(): boolean;
declare function NetGameserverTransferWalletToBank(charSlot: number, amount: number): boolean;
declare function N_0xc2f7fe5309181c7d(charSlot: number, amount: number): boolean;
declare function NetworkTransferWalletToBank(charSlot: number, amount: number): boolean;
declare function NetGameserverUseServerTransactions(): boolean;
declare function NetToEnt(netHandle: number): number;
declare function NetToObj(netHandle: number): number;
declare function NetToPed(netHandle: number): number;
declare function NetToVeh(netHandle: number): number;
declare function NetworkAcceptInvite(): boolean;
declare function N_0x62a0296c1bb1ceb3(): boolean;
declare function NetworkAcceptPresenceInvite(p0: number): boolean;
declare function NetworkAccessTunableBool(tunableContext: string, tunableName: string): boolean;
declare function N_0xaa6a47a573abb75a(tunableContext: string, tunableName: string): boolean;
declare function NetworkAccessTunableBoolHash(tunableContext: number, tunableName: number): boolean;
declare function N_0xea16b69d93d71a45(tunableContext: number, tunableName: number): boolean;
declare function NetworkAccessTunableFloat(tunableContext: string, tunableName: string, value: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xe5608ca7bc163a5f(tunableContext: string, tunableName: string, value: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkAccessTunableFloatHash(tunableContext: number, tunableName: number, value: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x972bc203bbc4c4d5(tunableContext: number, tunableName: number, value: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkAccessTunableInt(tunableContext: string, tunableName: string, value: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x8be1146dfd5d4468(tunableContext: string, tunableName: string, value: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkAccessTunableIntHash(tunableContext: number, tunableName: number, value: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x40fce03e50e8dbe8(tunableContext: number, tunableName: number, value: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkActionFollowInvite(): number;
declare function N_0xc88156ebb786f8d5(): number;
declare function NetworkAddEntityAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): number;
declare function N_0x376c6375ba60293a(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): number;
declare function NetworkAddEntityArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): number;
declare function NetworkAddEntityDisplayedBoundaries(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): number;
declare function N_0x25b99872d588a101(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): number;
declare function NetworkAddEntityToSynchronisedScene(entity: number, netScene: number, animDict: string, animName: string, speed: number, speedMulitiplier: number, flag: number): void;
declare function NetworkAddFollowers(p1: number): number;
declare function N_0x236406f60cf216d6(p1: number): number;
declare function NetworkAddFriend(message: string): LuaMultiReturn<[boolean, number]>;
declare function NetworkAddPedToSynchronisedScene(ped: number, netScene: number, animDict: string, animnName: string, blendInSpeed: number, blendOutSpeed: number, duration: number, flag: number, playbackRate: number, p9: number): void;
declare function NetworkAddSynchronisedSceneCamera(netScene: number, animDict: string, animName: string): void;
declare function N_0xcf8bd3b0bd6d42d7(netScene: number, animDict: string, animName: string): void;
declare function NetworkAllocateTunablesRegistrationDataMap(): boolean;
declare function N_0xfafc23aee23868db(): boolean;
declare function NetworkAllowLocalEntityAttachment(entity: number, toggle: boolean): void;
declare function N_0x267c78c60e806b9a(entity: number, toggle: boolean): void;
declare function NetworkAmIBlockedByGamer(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkAmIBlockedByPlayer(player: number): boolean;
declare function NetworkAmIMutedByGamer(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkAmIMutedByPlayer(player: number): boolean;
declare function NetworkApplyCachedPlayerHeadBlendData(ped: number, player: number): boolean;
declare function N_0x99b72c7abde5c910(ped: number, player: number): boolean;
declare function NetworkCopyPedBlendData(ped: number, player: number): boolean;
declare function NetworkApplyPedScarData(ped: number, p1: number): void;
declare function N_0xe66c690248f11150(ped: number, p1: number): void;
declare function NetworkApplyTransitionParameter(p0: number, p1: number): void;
declare function N_0x521638ada1ba0d18(p0: number, p1: number): void;
declare function NetworkApplyTransitionParameterString(p0: number, _string: string, p2: boolean): void;
declare function N_0xebefc2e77084f599(p0: number, _string: string, p2: boolean): void;
declare function NetworkApplyVoiceProximityOverride(x: number, y: number, z: number): void;
declare function IsNetworkVehicleBeenDamagedByAnyObject(x: number, y: number, z: number): void;
declare function NetworkAreCutsceneEntities(): boolean;
declare function NetworkAreHandlesTheSame(): LuaMultiReturn<[boolean, number, number]>;
declare function NetworkAreSocialClubPoliciesCurrent(): boolean;
declare function N_0xba9775570db788cf(): boolean;
declare function NetworkAreTransitionDetailsValid(p0: number): boolean;
declare function N_0x2615aa2a695930c1(p0: number): boolean;
declare function NetworkAttachSynchronisedSceneToEntity(netScene: number, entity: number, bone: number): void;
declare function NetworkBail(): void;
declare function NetworkBailTransition(): void;
declare function NetworkBailTransitionQuickmatch(): void;
declare function NetworkBlockInvites(toggle: boolean): void;
declare function NetworkBlockJoinQueueInvites(toggle: boolean): void;
declare function N_0xcfeb8af24fc1d0bb(toggle: boolean): void;
declare function NetworkBlockInvites_2(toggle: boolean): void;
declare function NetworkBlockKickedPlayers(p0: boolean): void;
declare function N_0x6b07b9ce4d390375(p0: boolean): void;
declare function NetworkBuyAirstrike(cost: number, p1: boolean, p2: boolean): void;
declare function NetworkBuyBackupGang(p0: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkBuyBounty(amount: number, victim: number, p2: boolean, p3: boolean): void;
declare function NetworkBuyContraband(p0: number, p1: number, p2: number, p3: boolean, p4: boolean): void;
declare function N_0x30fd873ece50e9f6(p0: number, p1: number, p2: number, p3: boolean, p4: boolean): void;
declare function NetworkBuyFairgroundRide(amountSpent: number, p1: number, p2: boolean, p3: boolean): void;
declare function N_0x8a7b3952dd64d2b5(amountSpent: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkBuyHealthcare(cost: number, p1: boolean, p2: boolean): void;
declare function NetworkBuyHeliStrike(cost: number, p1: boolean, p2: boolean): void;
declare function NetworkBuyItem(amount: number, item: number, p2: number, p3: number, p4: boolean, item_name: string, p6: number, p7: number, p8: number, p9: boolean): void;
declare function NetworkBuyLotteryTicket(p0: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkBuyProperty(propertyCost: number, propertyName: number, p2: boolean, p3: boolean): void;
declare function NetworkBuySmokes(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkCacheLocalPlayerHeadBlendData(): void;
declare function N_0xbd0be0bfc927eac1(): void;
declare function NetworkCanAccessMultiplayer(loadingState: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xaf50da1a3f8b1ba4(loadingState: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkCanBail(): boolean;
declare function NetworkCanBet(amount: number): boolean;
declare function N_0x3a54e33660ded67f(amount: number): boolean;
declare function NetworkCanBuyLotteryTicket(cost: number): boolean;
declare function NetworkCanCommunicateWithGamer(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkCanCommunicateWithGamer_2(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x8f5d1ad832aeb06c(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkCanEnterMultiplayer(): boolean;
declare function NetworkCanGamerPlayMultiplayerWithMe(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x135f9b7b7add2185(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkCanPlayMultiplayerWithGamer(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x07dd29d5e22763f1(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkCanReceivePlayerCash(p0: number, p1: number, p2: number, p3: number): boolean;
declare function NetworkCanSessionEnd(): boolean;
declare function NetworkCanSetWaypoint(): boolean;
declare function NetworkCanShareJobCash(): boolean;
declare function N_0x1c2473301b1c66ba(): boolean;
declare function NetworkCanSpendMoney(p0: number, p1: boolean, p2: boolean, p3: boolean, p4: number): boolean;
declare function N_0xab3caa6b422164da(p0: number, p1: boolean, p2: boolean, p3: boolean, p4: number): boolean;
declare function NetworkCanSpendMoney_2(p0: number, p1: boolean, p2: boolean, p3: boolean, p5: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x7303e27cc6532080(p0: number, p1: boolean, p2: boolean, p3: boolean, p5: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkCanViewGamerUserContent(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xb57a49545ba53ce7(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkCancelRespawnSearch(): void;
declare function N_0xfb8f2a6f3df08cbe(): void;
declare function NetworkCasinoCanGamble(p0: number): boolean;
declare function NetworkCasinoCanPurchaseChipsWithPvc(): boolean;
declare function NetworkCasinoCanPurchaseChipsWithPvc_2(): boolean;
declare function NetworkCasinoCanUseGamblingType(hash: number): boolean;
declare function NetworkCasinoPurchaseChips(p0: number, p1: number): boolean;
declare function NetworkCasinoSellChips(p0: number, p1: number): boolean;
declare function NetworkChangeTransitionSlots(p0: number, p1: number): void;
declare function N_0xeeeda5e6d7080987(p0: number, p1: number): void;
declare function NetworkCheckCommunicationPrivileges(p0: number, p1: number, p2: boolean): boolean;
declare function N_0x83f28ce49fbbffba(p0: number, p1: number, p2: boolean): boolean;
declare function NetworkCheckDataManagerSucceededForHandle(friendDataIndex: number, networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x44b37cdcae765aae(friendDataIndex: number, networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkCheckUserContentPrivileges(p0: number, p1: number, p2: boolean): boolean;
declare function N_0x595f028698072dd9(p0: number, p1: number, p2: boolean): boolean;
declare function NetworkClanAnimation(animDict: string, animName: string): boolean;
declare function N_0x729e3401f0430686(animDict: string, animName: string): boolean;
declare function NetworkClanAnyDownloadMembershipPending(): boolean;
declare function N_0xb3f64a6a91432477(): boolean;
declare function NetworkIsClanMembershipFinishedDownloading(): boolean;
declare function NetworkClanDownloadMembership(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkClanDownloadMembershipPending(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkClanGetEmblemTxdName(txdName: string): LuaMultiReturn<[boolean, number]>;
declare function N_0x5835d9cd92e83184(txdName: string): LuaMultiReturn<[boolean, number]>;
declare function NetworkGetPlayerCrewEmblemTxdName(txdName: string): LuaMultiReturn<[boolean, number]>;
declare function NetworkClanGetLocalMembershipsCount(): number;
declare function N_0x1f471b79acc90bef(): number;
declare function GetNumMembershipDesc(): number;
declare function NetworkClanGetNumMembershipDesc(): number;
declare function NetworkClanGetMembership(membershipIndex: number): LuaMultiReturn<[boolean, number, number]>;
declare function NetworkClanGetMembershipCount(p0: number): LuaMultiReturn<[number, number]>;
declare function NetworkClanGetMembershipDesc(p1: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkClanGetMembershipValid(membershipIndex: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkClanGetUiFormattedTag(bufferSize: number, formattedTag: string): number;
declare function N_0xf45352426ff3a4f0(bufferSize: number, formattedTag: string): number;
declare function NetworkClanIsEmblemReady(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xa134777ff7f33331(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkClanIsRockstarClan(bufferSize: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x7543bb439f63792b(bufferSize: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkClanJoin(clanDesc: number): boolean;
declare function NetworkClanPlayerGetDesc(bufferSize: number): LuaMultiReturn<[boolean, number, number]>;
declare function NetworkClanPlayerIsActive(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkClanReleaseEmblem(p0: number): void;
declare function N_0x113e6e3e50e286b0(p0: number): void;
declare function NetworkClanRemoteMembershipsAreInCache(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkClanRequestEmblem(p0: number): boolean;
declare function N_0x13518ff1c6b28938(p0: number): boolean;
declare function NetworkClanServiceIsValid(): boolean;
declare function NetworkPlayerIsInClan(): boolean;
declare function NetworkClearCharacterWallet(characterSlot: number): void;
declare function N_0xa921ded15fdf28f5(characterSlot: number): void;
declare function NetworkClearClockTimeOverride(): void;
declare function N_0xd972df67326f966e(): void;
declare function NetworkClearFollowInvite(): number;
declare function N_0x439bfde3cd0610f6(): number;
declare function NetworkClearFollowers(): void;
declare function N_0x058f43ec59a8631a(): void;
declare function NetworkClearFoundGamers(): void;
declare function NetworkClearGetGamerStatus(): void;
declare function N_0x86e0660e4f5c956d(): void;
declare function NetworkClearGroupActivity(): void;
declare function N_0x1888694923ef4591(): void;
declare function NetworkClearPropertyId(): void;
declare function N_0xc2b82527ca77053e(): void;
declare function NetworkClearTransitionCreatorHandle(): void;
declare function NetworkClearVoiceChannel(): void;
declare function N_0xe036a705f989e049(): void;
declare function NetworkClearVoiceProximityOverride(): void;
declare function N_0xf03755696450470c(): void;
declare function NetworkCloseTransitionMatchmaking(): void;
declare function N_0x43f4dba69710e01e(): void;
declare function NetworkConcealEntity(entity: number, toggle: boolean): void;
declare function NetworkConcealPlayer(player: number, toggle: boolean, p2: boolean): void;
declare function NetworkCreateSynchronisedScene(x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, rotationOrder: number, holdLastFrame: boolean, looped: boolean, p9: number, animTime: number, animSpeed: number): number;
declare function NetworkDeductCash(amount: number, p1: string, p2: string, p3: boolean, p4: boolean, p5: boolean): void;
declare function NetworkDeleteCharacter(characterSlot: number, p1: boolean, p2: boolean): void;
declare function NetworkDidFindGamersSucceed(): boolean;
declare function N_0xf9b83b77929d8863(): boolean;
declare function NetworkDidGetGamerStatusSucceed(): boolean;
declare function N_0x5ae17c6b0134b7f1(): boolean;
declare function NetworkDisableInvincibleFlashing(player: number, toggle: boolean): void;
declare function N_0x9dd368bf06983221(player: number, toggle: boolean): void;
declare function NetworkDisableLeaveRemotePedBehind(toggle: boolean): void;
declare function N_0xc505036a35afd01b(toggle: boolean): void;
declare function NetworkDisableProximityMigration(netID: number): void;
declare function N_0x407091cf6037118e(netID: number): void;
declare function NetworkDisplaynamesFromHandlesStart(p1: number): LuaMultiReturn<[number, number]>;
declare function N_0xd66c9e72b3cc4982(p1: number): LuaMultiReturn<[number, number]>;
declare function NetworkDoTransitionQuickmatch(p0: number, p1: number, p2: number, p3: number): boolean;
declare function N_0x71fb0ebcd4915d56(p0: number, p1: number, p2: number, p3: number): boolean;
declare function NetworkDoTransitionQuickmatchAsync(p0: number, p1: number, p2: number, p3: number): boolean;
declare function N_0xa091a5e44f0072e5(p0: number, p1: number, p2: number, p3: number): boolean;
declare function NetworkDoTransitionQuickmatchWithGroup(p0: number, p1: number, p2: number, p3: number, p5: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkDoTransitionToFreemode(p1: number, p2: boolean, players: number, p4: boolean): LuaMultiReturn<[boolean, number]>;
declare function NetworkDoTransitionToGame(p0: boolean, maxPlayers: number): boolean;
declare function NetworkDoTransitionToNewFreemode(players: number, p3: boolean, p4: boolean, p5: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function NetworkDoTransitionToNewGame(p0: boolean, maxPlayers: number, p2: boolean): boolean;
declare function NetworkDoesEntityExistWithNetworkId(netId: number): boolean;
declare function NetworkDoesNetworkIdExist(netId: number): boolean;
declare function NetworkDoesTunableExist(tunableContext: string, tunableName: string): boolean;
declare function NetworkDoesTunableExistHash(tunableContext: number, tunableName: number): boolean;
declare function N_0xe4e53e1419d81127(tunableContext: number, tunableName: number): boolean;
declare function NetworkEarnBoss(p0: number, p1: number, p2: number): void;
declare function N_0x08b0ca7a6ab3ac32(p0: number, p1: number, p2: number): void;
declare function NetworkEarnBossAgency(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x0cb1be0633c024a8(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkEarnBountyHunterReward(p0: number): void;
declare function N_0xf6b170f9a02e9e87(p0: number): void;
declare function NetworkEarnCasinoHeist(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function NetworkEarnCasinoHeistBonus(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function NetworkEarnCollectableCompletedCollection(amount: number, p1: number): void;
declare function NetworkEarnFmbbWageBonus(p0: number): void;
declare function N_0xfffba1b1f7c0b6f4(p0: number): void;
declare function NetworkEarnFromAiTargetKill(p0: number, p1: number): void;
declare function N_0x515b4a22e4d3c6d7(p0: number, p1: number): void;
declare function NetworkEarnFromAmbientJob(p0: number, p1: string, p2: number): number;
declare function N_0xfb6db092fbae29e6(p0: number, p1: string, p2: number): number;
declare function NetworkEarnFromArenaCareerProgression(amount: number, p1: number): void;
declare function NetworkEarnFromArenaSkillLevelProgression(amount: number, p1: number): void;
declare function NetworkEarnFromArenaWar(amount: number, p1: number, p2: number, p3: number): void;
declare function NetworkEarnFromArmourTruck(amount: number): void;
declare function N_0xf514621e8ea463d0(amount: number): void;
declare function NetworkEarnFromAssassinateTargetKilled(amount: number): void;
declare function NetworkEarnFromAssassinateTargetKilled_2(amount: number): void;
declare function NetworkEarnFromAutoshopBusiness(p0: number, p1: number): void;
declare function N_0x36a7fd5a7194b03e(p0: number, p1: number): void;
declare function NetworkEarnFromAutoshopIncome(p0: number): void;
declare function N_0xc66d1cf99ed7fe25(p0: number): void;
declare function NetworkEarnFromBbEventBonus(amount: number): void;
declare function NetworkEarnFromBbEventCargo(amount: number): void;
declare function NetworkEarnFromBendJob(amount: number, heistHash: string): void;
declare function N_0x61326ee6df15b0ca(amount: number, heistHash: string): void;
declare function NetworkEarnFromMissionH(amount: number, heistHash: string): void;
declare function NetworkEarnFromBetting(amount: number, p1: string): void;
declare function NetworkEarnFromBikeShopBusiness(p0: number, p1: number): void;
declare function NetworkEarnFromBikerIncome(p0: number): void;
declare function NetworkEarnFromBounty(amount: number, p3: number): LuaMultiReturn<[number, number]>;
declare function NetworkEarnFromBusinessBattle(p0: number): void;
declare function N_0x42fce14f50f27291(p0: number): void;
declare function NetworkEarnFromBusinessHubSell(p0: number, p1: number, p2: number): void;
declare function N_0x0b39cf0d53f1c883(p0: number, p1: number, p2: number): void;
declare function NetworkEarnFromBusinessHubSource(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkEarnFromBusinessProduct(amount: number, p1: number, p2: number, p3: number): void;
declare function N_0x8586789730b10caf(amount: number, p1: number, p2: number, p3: number): void;
declare function NetworkEarnFromCarclubMembership(p0: number): void;
declare function N_0xbc6227792a188e2e(p0: number): void;
declare function NetworkEarnFromCashingOut(amount: number): void;
declare function NetworkEarnFromCasinoAward(amount: number, hash: number): void;
declare function NetworkEarnFromCasinoMissionParticipation(amount: number): void;
declare function NetworkEarnFromCasinoMissionReward(amount: number): void;
declare function NetworkEarnFromCasinoStoryMissionReward(amount: number): void;
declare function NetworkEarnFromChallengeWin(p0: number, p2: boolean): number;
declare function N_0x2b171e6b2f64d8df(p0: number, p2: boolean): number;
declare function NetworkEarnFromClubManagementParticipation(p0: number): void;
declare function N_0xa75eac69f59e96e7(p0: number): void;
declare function NetworkEarnFromCollectablesActionFigures(amount: number): void;
declare function NetworkEarnFromCollectionItem(amount: number, p1: number): void;
declare function NetworkEarnFromCompleteCollection(amount: number): void;
declare function NetworkEarnFromContraband(amount: number, p1: number): void;
declare function N_0xeca658ce2a4e5a72(amount: number, p1: number): void;
declare function NetworkEarnFromCrateDrop(amount: number): void;
declare function N_0xb1cc1b9ec3007a2a(amount: number): void;
declare function NetworkEarnFromCriminalMastermindBonus(p0: number, p1: number, p2: number): void;
declare function N_0xd20d79671a598594(p0: number, p1: number, p2: number): void;
declare function NetworkEarnFromDailyObjectiveEvent(amount: number): void;
declare function NetworkEarnFromDailyObjectives(p0: number, p1: string, p2: number): void;
declare function N_0x6ea318c91c1a8786(p0: number, p1: string, p2: number): void;
declare function NetworkEarnFromDailyObjective(p0: number, p1: string, p2: number): void;
declare function NetworkEarnFromDarChallenge(amount: number, p1: number): void;
declare function NetworkEarnFromDestroyingContraband(p0: number): void;
declare function N_0x84c0116d012e8fc2(p0: number): void;
declare function NetworkEarnFromDoomsdayFinaleBonus(amount: number, vehicleHash: number): void;
declare function NetworkEarnFromFmbbBossWork(p0: number): void;
declare function N_0x1fda0aa679c9919b(p0: number): void;
declare function NetworkEarnFromFmbbPhonecallMission(p0: number): void;
declare function N_0xc5156361f26e2212(p0: number): void;
declare function NetworkEarnFromGangPickup(amount: number): void;
declare function N_0xa03d4ace0a3284ce(amount: number): void;
declare function NetworkEarnFromGangopsAwards(amount: number, unk: string, p2: number): void;
declare function NetworkEarnFromGangopsElite(amount: number, unk: string, actIndex: number): void;
declare function NetworkEarnFromGangopsJobsFinale(amount: number, unk: string): void;
declare function NetworkEarnFromGangopsJobsPrepParticipation(amount: number): void;
declare function NetworkEarnFromGangopsJobsSetup(amount: number, unk: string): void;
declare function NetworkEarnFromGangopsWages(amount: number, p1: number): void;
declare function NetworkEarnFromGangopsWagesBonus(amount: number, p1: number): void;
declare function NetworkEarnFromHackerTruckMission(p0: number, amount: number, p2: number, p3: number): void;
declare function NetworkEarnFromHoldups(amount: number): void;
declare function NetworkEarnFromImportExport(amount: number, modelHash: number): void;
declare function NetworkEarnFromJob(amount: number, p1: string): void;
declare function NetworkEarnFromJobBonus(p0: number): LuaMultiReturn<[number, number]>;
declare function N_0x6816fb4416760775(p0: number): LuaMultiReturn<[number, number]>;
declare function NetworkEarnFromJobX2(amount: number, p1: string): void;
declare function NetworkEarnFromNotBadsport(amount: number): void;
declare function N_0x4337511fa8221d36(amount: number): void;
declare function NetworkEarnFromPersonalVehicle(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): void;
declare function N_0x3f4d00167e41e0ad(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): void;
declare function NetworkEarnFromPickup(amount: number): void;
declare function NetworkEarnFromPremiumJob(amount: number, p1: string): void;
declare function N_0xc8407624cef2354b(amount: number, p1: string): void;
declare function NetworkEarnFromProperty(amount: number, propertyName: number): void;
declare function NetworkEarnFromRcTimeTrial(amount: number): void;
declare function NetworkEarnFromRdrBonus(amount: number, p1: number): void;
declare function NetworkEarnFromRockstar(amount: number): void;
declare function NetworkEarnFromSellBase(amount: number, baseNameHash: number): void;
declare function NetworkEarnFromSellBunker(amount: number, bunkerHash: number): void;
declare function N_0x9251b6abf2d0a5b4(amount: number, bunkerHash: number): void;
declare function NetworkEarnFromSellingVehicle(amount: number): void;
declare function NetworkEarnFromSightseeing(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkEarnFromSmuggling(amount: number, p1: number, p2: number, p3: number): void;
declare function NetworkEarnFromSpinTheWheelCash(amount: number): void;
declare function NetworkEarnFromTargetRefund(amount: number, p1: number): void;
declare function NetworkEarnFromTimeTrialWin(amount: number): void;
declare function NetworkEarnFromTunerAward(p0: number, p1: number, p2: number): void;
declare function N_0xb846f547d3792df6(p0: number, p1: number, p2: number): void;
declare function NetworkEarnFromTunerFinale(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0xbcb266247193ac61(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function NetworkEarnFromUpgradeAutoshopLocation(p0: number, p1: number): void;
declare function N_0xc10322a8d3e061ee(p0: number, p1: number): void;
declare function NetworkEarnFromVehicle(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number): void;
declare function NetworkEarnFromVehicleAutoshop(p0: number, p1: number): void;
declare function N_0x533073e8a596008c(p0: number, p1: number): void;
declare function NetworkEarnFromVehicleAutoshopBonus(p0: number): void;
declare function N_0xfe65afe7308e32b2(p0: number): void;
declare function NetworkEarnFromVehicleExport(amount: number, p1: number, p2: number): void;
declare function N_0xedead9a91ec768b3(amount: number, p1: number, p2: number): void;
declare function NetworkEarnFromWagePayment(amount: number): void;
declare function NetworkEarnFromWagePaymentBonus(amount: number): void;
declare function NetworkEarnFromWarehouse(): void;
declare function N_0x3e4adaff1830f146(): void;
declare function NetworkEarnGoon(p0: number, p1: number, p2: number): void;
declare function N_0xcda1c62be2777802(p0: number, p1: number, p2: number): void;
declare function NetworkEarnIslandHeist(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function NetworkEarnJobBonusFirstTimeBonus(p0: number, p1: number, p2: number): void;
declare function N_0x11b0a20c493f7e36(p0: number, p1: number, p2: number): void;
declare function NetworkEarnJobBonusHeistAward(p0: number, p1: number, p2: number): void;
declare function N_0x9d4fdbb035229669(p0: number, p1: number, p2: number): void;
declare function NetworkEndTutorialSession(): void;
declare function NetworkEntityAreaDoesExist(areaHandle: number): boolean;
declare function N_0xe64a3ca08dfa37a9(areaHandle: number): boolean;
declare function NetworkEntityAreaIsOccupied(areaHandle: number): boolean;
declare function N_0x4a2d4e8bf4265b0f(areaHandle: number): boolean;
declare function NetworkExplodeHeli(heli: number, isAudible: boolean, isInvisible: boolean, netScriptEntityId: number): void;
declare function N_0x2a5e0621dd815a9a(heli: number, isAudible: boolean, isInvisible: boolean, netScriptEntityId: number): void;
declare function NetworkExplodeVehicle(vehicle: number, isAudible: boolean, isInvisible: boolean, p3: boolean): void;
declare function NetworkFadeInEntity(entity: number, state: boolean): void;
declare function NetworkFadeOutEntity(entity: number, normal: boolean, slow: boolean): void;
declare function NetworkFindGamersInCrew(p0: number): boolean;
declare function N_0xe532d6811b3a4d2a(p0: number): boolean;
declare function NetworkXAffectsGamers(p0: number): boolean;
declare function NetworkFindMatchedGamers(p0: number, p1: number, p2: number, p3: number): boolean;
declare function N_0xf7b2cfde5c9f700d(p0: number, p1: number, p2: number, p3: number): boolean;
declare function NetworkFinishBroadcastingData(): void;
declare function N_0x64f62afb081e260d(): void;
declare function NetworkForceLocalUseOfSyncedSceneCamera(sceneId: number): void;
declare function N_0xc9b43a33d09cada7(sceneId: number): void;
declare function NetworkGamerHasHeadset(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGamertagFromHandlePending(): boolean;
declare function NetworkGamertagFromHandleStart(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGamertagFromHandleSucceeded(): boolean;
declare function NetworkGetActivityPlayerNum(p0: boolean): number;
declare function NetworkGetAgeGroup(): number;
declare function N_0x9614b71f8adb982b(): number;
declare function NetworkGetAverageLatencyForPlayer(player: number): number;
declare function N_0xd414be129bb81b32(player: number): number;
declare function NetworkGetAverageLatencyForPlayer_2(player: number): number;
declare function N_0x0e3a041ed6ac2b45(player: number): number;
declare function NetworkGetAveragePacketLossForPlayer(player: number): number;
declare function N_0x350c23949e43686c(player: number): number;
declare function NetworkGetBackgroundLoadingRecipients(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x97a770beef227e2b(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function NetworkGetContentModifierListId(contentHash: number): number;
declare function N_0x187382f8a3e0a6c3(contentHash: number): number;
declare function GetTunablesContentModifierId(contentHash: number): number;
declare function NetworkGetCurrentlySelectedGamerHandleFromInviteMenu(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGetDestroyerOfEntity(p0: number, p1: number, weaponHash: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x4caca84440fa26f6(p0: number, p1: number, weaponHash: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGetDesroyerOfEntity(p0: number, p1: number, weaponHash: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGetDestroyerOfNetworkId(netId: number, weaponHash: number): LuaMultiReturn<[number, number]>;
declare function NetworkGetDisplaynamesFromHandles(p0: number, p1: number, p2: number): number;
declare function N_0x58cc181719256197(p0: number, p1: number, p2: number): number;
declare function NetworkGetEntityFromNetworkId(netId: number): number;
declare function NetworkGetEntityIsLocal(entity: number): boolean;
declare function NetworkGetEntityIsNetworked(entity: number): boolean;
declare function N_0xc7827959479dcc78(entity: number): boolean;
declare function NetworkGetEntityKillerOfPlayer(player: number, weaponHash: number): LuaMultiReturn<[number, number]>;
declare function NetworkGetEntityNetScriptId(entity: number): number;
declare function N_0x815f18ad865f057f(entity: number): number;
declare function NetworkGetEntityOwner(entity: number): number;
declare function NetworkGetEvcBalance(): number;
declare function NetworkGetFoundGamer(p1: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGetFriendCount(): number;
declare function NetworkGetFriendName(friendIndex: number): string;
declare function NetworkGetFriendNameFromIndex(friendIndex: number): string;
declare function NetworkGetGamerStatusFromQueue(): boolean;
declare function N_0x2cc848a861d01493(): boolean;
declare function NetworkGetGamerStatusResult(p1: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x02a8bec6fd9af660(p1: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGetGamertagFromHandle(networkHandle: number): LuaMultiReturn<[string, number]>;
declare function NetworkGetGlobalMultiplayerClock(): LuaMultiReturn<[number, number, number]>;
declare function N_0x6d03bfbd643b2a02(): LuaMultiReturn<[number, number, number]>;
declare function NetworkGetServerTime(): LuaMultiReturn<[number, number, number]>;
declare function NetworkGetHostOfScript(scriptName: string, p1: number, p2: number): number;
declare function NetworkGetHostOfThisScript(): number;
declare function NetworkGetInstanceIdOfThisScript(): number;
declare function N_0x638a3a81733086db(): number;
declare function NetworkGetIsHighEarner(): boolean;
declare function NetworkGetLastVelocityReceived(entity: number): Vector3;
declare function N_0x33de49edf4dde77a(entity: number): Vector3;
declare function NetworkGetLocalHandle(bufferSize: number): number;
declare function NetworkGetLocalSceneFromNetworkId(netId: number): number;
declare function N_0x02c40bf885c567b6(netId: number): number;
declare function NetworkUnlinkNetworkedSynchronisedScene(netId: number): number;
declare function NetworkConvertSynchronisedSceneToSynchronizedScene(netId: number): number;
declare function NetworkGetMaxFriends(): number;
declare function NetworkGetMaxNumParticipants(): number;
declare function NetworkGetNumParticipantsHost(): number;
declare function NetworkGetNetworkIdFromEntity(entity: number): number;
declare function NetworkGetNumBodyTrackers(): number;
declare function N_0xd38c4a6d047c019d(): number;
declare function NetworkGetNumConnectedPlayers(): number;
declare function NetworkGetNumFoundGamers(): number;
declare function NetworkGetNumParticipants(): number;
declare function NetworkGetNumPresenceInvites(): number;
declare function N_0xcefa968912d0f78d(): number;
declare function NetworkGetNumScriptParticipants(p1: number, p2: number): LuaMultiReturn<[number, number]>;
declare function N_0x3658e8cd94fc121a(p1: number, p2: number): LuaMultiReturn<[number, number]>;
declare function NetworkGetNumUnackedForPlayer(player: number): number;
declare function NetworkGetOldestResendCountForPlayer(player: number): number;
declare function NetworkGetParticipantIndex(index: number): number;
declare function NetworkGetPlatformPartyMembers(dataSize: number): LuaMultiReturn<[number, number]>;
declare function N_0x120364de2845daf8(dataSize: number): LuaMultiReturn<[number, number]>;
declare function NetworkGetPlatformPartyUnk(): number;
declare function N_0x01abce5e7cbda196(): number;
declare function NetworkGetPlayerCoords(player: number): Vector3;
declare function N_0x125e6d638b8605d4(player: number): Vector3;
declare function NetworkGetPlayerFromGamerHandle(networkHandle: number): LuaMultiReturn<[number, number]>;
declare function NetworkGetPlayerIndex(player: number): number;
declare function NetworkGetPlayerIndexFromPed(ped: number): number;
declare function N_0x6c0e2e0125610278(ped: number): number;
declare function NetworkGetPlayerLoudness(player: number): number;
declare function NetworkGetPlayerOwnsWaypoint(player: number): boolean;
declare function N_0x82377b65e943f72d(player: number): boolean;
declare function NetworkGetPlayerTutorialSessionInstance(player: number): number;
declare function N_0x3b39236746714134(player: number): number;
declare function NetworkGetPositionHashOfThisScript(): number;
declare function N_0x257ed0fadf750bcf(): number;
declare function NetworkGetPresenceInviteContentId(p0: number): string;
declare function N_0x24409fc4c55cb22d(p0: number): string;
declare function NetworkGetPresenceInviteFromAdmin(p0: number): boolean;
declare function N_0x3dbf2df0aeb7d289(p0: number): boolean;
declare function NetworkGetPresenceInviteHandle(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGetPresenceInviteId(p0: number): number;
declare function N_0xdff09646e12ec386(p0: number): number;
declare function NetworkGetPresenceInviteInviter(inviteIndex: number): string;
declare function N_0x4962cc4aa2f345b7(inviteIndex: number): string;
declare function NetworkGetPresenceInviteIsTournament(p0: number): boolean;
declare function N_0x8806cebfabd3ce05(p0: number): boolean;
declare function NetworkGetPresenceInvitePlaylistCurrent(p0: number): number;
declare function N_0x728c4cc7920cd102(p0: number): number;
declare function NetworkGetPresenceInvitePlaylistLength(p0: number): number;
declare function N_0xd39b3fff8ffdd5bf(p0: number): number;
declare function NetworkGetPresenceInviteSessionId(inviteIndex: number): number;
declare function N_0x26e1cd96b0903d60(inviteIndex: number): number;
declare function NetworkGetPrimaryClanDataCancel(): void;
declare function N_0x042e4b70b93e6054(): void;
declare function NetworkGetPrimaryClanDataClear(): number;
declare function N_0x9aa46badad0e27ed(): number;
declare function NetworkGetPrimaryClanDataNew(): LuaMultiReturn<[boolean, number, number]>;
declare function NetworkGetPrimaryClanDataPending(): number;
declare function N_0xb5074db804e28ce7(): number;
declare function NetworkGetPrimaryClanDataStart(p1: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGetPrimaryClanDataSuccess(): number;
declare function N_0x5b4f04f19376a0ba(): number;
declare function NetworkGetPvcBalance(): number;
declare function NetworkGetPvcTransferBalance(): number;
declare function NetworkGetRemainingVcDailyTransfers(): number;
declare function NetworkGetRandomInt(): number;
declare function N_0x599e4fa1f87eb5ff(): number;
declare function NetworkGetRandomIntRanged(rangeStart: number, rangeEnd: number): number;
declare function N_0xe30cf56f1efa5f43(rangeStart: number, rangeEnd: number): number;
declare function NetworkGetRandomIntInRange(rangeStart: number, rangeEnd: number): number;
declare function NetworkGetRemainingTransferBalance(): number;
declare function NetworkGetRemainingVcDailyTransfers_2(): number;
declare function NetworkGetRespawnResult(randomInt: number): LuaMultiReturn<[number, number]>;
declare function NetworkGetRespawnResultFlags(p0: number): number;
declare function N_0x6c34f1208b8923fd(p0: number): number;
declare function NetworkGetRosPrivilege_24(): boolean;
declare function N_0x593570c289a77688(): boolean;
declare function NetworkGetRosPrivilege_25(): boolean;
declare function N_0x91b87c55093de351(): boolean;
declare function NetworkGetRosPrivilege_9(): boolean;
declare function N_0x66b59cffd78467af(): boolean;
declare function NetworkGetScriptStatus(): number;
declare function NetworkGetStringBankBalance(): string;
declare function N_0xa6fa3979bed01b81(): string;
declare function NetworkGetBankBalanceString(): string;
declare function NetworkGetStringBankWalletBalance(): string;
declare function NetworkGetStringWalletBalance(characterSlot: number): string;
declare function NetworkGetTalkerProximity(): number;
declare function NetworkGetTargetingMode(): number;
declare function N_0xdffa5be8381c3314(): number;
declare function NetworkGetThisScriptIsNetworkScript(): boolean;
declare function NetworkGetTimeoutTime(): number;
declare function N_0x5ed0356a0ce3a34f(): number;
declare function NetworkGetTotalNumPlayers(): number;
declare function N_0xcf61d4b4702ee9eb(): number;
declare function NetworkGetTransitionHost(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGetTransitionMembers(dataCount: number): LuaMultiReturn<[number, number]>;
declare function NetworkGetTunableCloudCrc(): number;
declare function N_0x10bd227a753b0d84(): number;
declare function NetworkGetTunablesVersion(): number;
declare function NetworkGetUnreliableResendCountForPlayer(player: number): number;
declare function N_0x3765c3a3e8192e10(player: number): number;
declare function NetworkGetVcBalance(): number;
declare function N_0x5cbad97e059e1b94(): number;
declare function NetworkGetVcBankBalance(): number;
declare function N_0x76ef28da05ea395a(): number;
declare function NetworkGetVcBankBalanceIsNotLessThan(amount: number): boolean;
declare function NetworkGetVcBankWalletBalanceIsNotLessThan(amount: number, characterSlot: number): boolean;
declare function N_0xdc18531d7019a535(amount: number, characterSlot: number): boolean;
declare function NetworkGetVcWalletBalance(characterSlot: number): number;
declare function N_0xa40f9c2623f6a8b5(characterSlot: number): number;
declare function NetworkGetVcWalletBalanceIsNotLessThan(amount: number, characterSlot: number): boolean;
declare function NetworkGivePlayerJobshareCash(amount: number, networkHandle: number): number;
declare function NetworkHandleFromFriend(friendIndex: number, bufferSize: number): number;
declare function NetworkHandleFromMemberId(memberId: string, bufferSize: number): number;
declare function NetworkHandleFromPlayer(player: number, bufferSize: number): number;
declare function NetworkHandleFromUserId(userId: string, bufferSize: number): number;
declare function NetworkHasAgeRestrictedProfile(): boolean;
declare function N_0x1353f87e89946207(): boolean;
declare function NetworkHasCachedPlayerHeadBlendData(player: number): boolean;
declare function N_0x237d5336a9a54108(player: number): boolean;
declare function NetworkHasControlOfDoor(doorHash: number): boolean;
declare function NetworkHasControlOfEntity(entity: number): boolean;
declare function NetworkHasControlOfNetworkId(netId: number): boolean;
declare function NetworkHasControlOfPickup(pickup: number): boolean;
declare function NetworkHasEntityBeenRegisteredWithThisThread(entity: number): boolean;
declare function N_0xb07d3185e11657a5(entity: number): boolean;
declare function NetworkHasFollowInvite(): boolean;
declare function N_0x76d9b976c4c09fde(): boolean;
declare function NetworkHasGameBeenAltered(): boolean;
declare function N_0x659cf2ef7f550c4f(): boolean;
declare function NetworkHasHeadset(): boolean;
declare function NetworkHasInviteBeenAcked(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x71dc455f5cd1c2b1(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkHasInvitedGamer(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkHasInvitedGamerToTransition(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkHasPendingInvite(): boolean;
declare function NetworkHasPlayerStartedTransition(player: number): boolean;
declare function NetworkHasReceivedHostBroadcastData(): boolean;
declare function N_0x5d10b3795f3fc886(): boolean;
declare function NetworkHasRosPrivilege(index: number): boolean;
declare function N_0xa699957e60d80214(index: number): boolean;
declare function NetworkHasRosPrivilegeEndDate(privilege: number): LuaMultiReturn<[boolean, number, Vector3]>;
declare function N_0xc22912b1d85f26b1(privilege: number): LuaMultiReturn<[boolean, number, Vector3]>;
declare function NetworkGetBanData(privilege: number): LuaMultiReturn<[boolean, number, Vector3]>;
declare function NetworkHasSocialClubAccount(): boolean;
declare function N_0x67a5589628e0cff6(): boolean;
declare function NetworkHasSocialNetworkingSharingPriv(): boolean;
declare function N_0x76bf03fadbf154f5(): boolean;
declare function NetworkHasTransitionInviteBeenAcked(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x3f9990bf5f22759c(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkHasValidRosCredentials(): boolean;
declare function N_0x85443ff4c328f53b(): boolean;
declare function NetworkAreRosAvailable(): boolean;
declare function NetworkHaveJustUploadLater(): boolean;
declare function NetworkHasViewGamerUserContentResult(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xcca4318e1ab03f1f(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkHashFromGamerHandle(networkHandle: number): LuaMultiReturn<[number, number]>;
declare function N_0x58575ac3cf2ca8ec(networkHandle: number): LuaMultiReturn<[number, number]>;
declare function NetworkHashFromPlayerHandle(player: number): number;
declare function N_0xbc1d768f2f5d6c05(player: number): number;
declare function NetworkHaveCommunicationPrivileges(p0: number, player: number): boolean;
declare function N_0xaeef48cdf5b6ce7c(p0: number, player: number): boolean;
declare function NetworkHaveOnlinePrivilege_2(): boolean;
declare function N_0x5ea784d197556507(): boolean;
declare function NetworkHaveOnlinePrivileges(): boolean;
declare function NetworkHaveRosBannedPriv(): boolean;
declare function IsRockstarBanned(): boolean;
declare function NetworkHasPlayerBeenBanned(): boolean;
declare function NetworkHaveRosCreateTicketPriv(): boolean;
declare function IsSocialclubBanned(): boolean;
declare function NetworkHaveSocialClubPrivilege(): boolean;
declare function NetworkHaveRosLeaderboardWritePriv(): boolean;
declare function N_0x422d396f80a96547(): boolean;
declare function NetworkGetRosPrivilege_4(): boolean;
declare function NetworkHaveRosMultiplayerPriv(): boolean;
declare function IsPlayerBanned(): boolean;
declare function CanPlayOnline(): boolean;
declare function NetworkGetRosPrivilege_3(): boolean;
declare function NetworkHaveRosSocialClubPriv(): boolean;
declare function N_0x606e4d3e3cccf3eb(): boolean;
declare function NetworkGetRosPrivilege_10(): boolean;
declare function NetworkHaveUserContentPrivileges(p0: number): boolean;
declare function N_0x72d918c99bcacc54(p0: number): boolean;
declare function NetworkHostTransition(p0: number, p1: number, p2: number, p3: number, p4: number, p5: boolean, p6: boolean, p7: number, p8: number, p9: number): boolean;
declare function NetworkInitializeCash(wallet: number, bank: number): void;
declare function N_0x3da5ecd1a56cba6d(wallet: number, bank: number): void;
declare function NetworkInviteGamers(p1: number): LuaMultiReturn<[boolean, number, number, number]>;
declare function NetworkInviteGamersToTransition(p1: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsActivitySession(): boolean;
declare function NetworkIsActivitySpectator(): boolean;
declare function NetworkIsActivitySpectatorFromHandle(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsAddingFriend(): number;
declare function NetworkIsCableConnected(): boolean;
declare function N_0xeffb25453d8600f9(): boolean;
declare function NetworkIsChattingInPlatformParty(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsClockTimeOverridden(): boolean;
declare function N_0xd7c95d322ff57522(): boolean;
declare function NetworkIsCloudAvailable(): boolean;
declare function NetworkIsCloudBackgroundScriptRequestPending(): boolean;
declare function N_0x8132c0eb8b2b3293(): boolean;
declare function HasBgScriptBeenDownloaded(): boolean;
declare function NetworkIsCloudBackgroundScriptsRequestPending(): boolean;
declare function NetworkIsConnectionEndpointRelayServer(player: number): boolean;
declare function N_0x16d3d49902f697bb(player: number): boolean;
declare function NetworkIsDoorNetworked(doorHash: number): boolean;
declare function N_0xc01e93fac20c3346(doorHash: number): boolean;
declare function NetworkHasControlOfPavementStats(doorHash: number): boolean;
declare function NetworkIsEntityConcealed(entity: number): boolean;
declare function NetworkIsEntityFading(entity: number): boolean;
declare function N_0x422f32cc7e56abad(entity: number): boolean;
declare function NetworkIsFindingGamers(): boolean;
declare function NetworkIsFriend(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsFriendHandleOnline(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x87eb7a3ffcb314db(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsFriendOnline_2(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsFriendInMultiplayer(friendName: string): boolean;
declare function NetworkIsFriendInSameTitle(friendName: string): boolean;
declare function NetworkIsFriendIndexOnline(friendIndex: number): boolean;
declare function N_0xbad8f2a42b844821(friendIndex: number): boolean;
declare function NetworkIsFriendOnline(name: string): boolean;
declare function NetworkIsGameInProgress(): boolean;
declare function NetworkIsGamerBlockedByMe(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsGamerInMySession(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsGamerMutedByMe(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsGamerTalking(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsGettingGamerStatus(): boolean;
declare function N_0x94a8394d150b013a(): boolean;
declare function NetworkIsHandleValid(bufferSize: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsHost(): boolean;
declare function NetworkIsHostOfThisScript(): boolean;
declare function NetworkIsInMpCutscene(): boolean;
declare function NetworkIsInParty(): boolean;
declare function NetworkIsInPlatformParty(): boolean;
declare function N_0x2fc5650b0271cb57(): boolean;
declare function NetworkIsInPlatformPartyChat(): boolean;
declare function N_0xfd8b834a8ba05048(): boolean;
declare function NetworkIsInSession(): boolean;
declare function NetworkIsInSpectatorMode(): boolean;
declare function NetworkIsInTransition(): boolean;
declare function NetworkIsInTutorialSession(): boolean;
declare function NetworkIsInactiveProfile(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsLocalPlayerInvincible(): boolean;
declare function NetworkIsLocalTalking(): boolean;
declare function N_0xc0d2af00bcc234ca(): boolean;
declare function NetworkIsMultiplayerDisabled(): boolean;
declare function N_0x9747292807126eda(): boolean;
declare function NetworkIsNetworkIdAClone(netId: number): boolean;
declare function N_0x7242f8b741ce1086(netId: number): boolean;
declare function NetworkIsOfflineInvitePending(): boolean;
declare function N_0x74698374c45701d2(): boolean;
declare function NetworkIsParticipantActive(p0: number): boolean;
declare function NetworkIsPartyMember(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsPendingFriend(p0: number): number;
declare function NetworkIsPlayerAParticipant(player: number): boolean;
declare function NetworkIsPlayerAParticipantOnScript(player1: number, script: string, player2: number): boolean;
declare function N_0x1ad5b71586b94820(player1: number, script: string, player2: number): boolean;
declare function NetworkIsPlayerActive(player: number): boolean;
declare function NetworkIsPlayerBlockedByMe(player: number): boolean;
declare function NetworkIsPlayerConcealed(player: number): boolean;
declare function NetworkIsPlayerConnected(player: number): boolean;
declare function NetworkIsPlayerEqualToIndex(player: number, index: number): boolean;
declare function N_0x9de986fc9a87c474(player: number, index: number): boolean;
declare function NetworkIsPlayerFading(player: number): boolean;
declare function N_0x631dc5dff4b110e3(player: number): boolean;
declare function NetworkIsPlayerInMpCutscene(player: number): boolean;
declare function NetworkIsPlayerMutedByMe(player: number): boolean;
declare function NetworkIsPlayerTalking(player: number): boolean;
declare function NetworkIsPsnAvailable(): boolean;
declare function N_0x8d11e61a4abf49cc(): boolean;
declare function NetworkIsScriptActive(scriptName: string, player: number, p2: boolean, p3: number): boolean;
declare function NetworkIsScriptActiveByHash(scriptHash: number, p1: number, p2: boolean, p3: number): boolean;
declare function NetworkIsSessionActive(): boolean;
declare function NetworkIsSessionBusy(): boolean;
declare function NetworkIsSessionStarted(): boolean;
declare function NetworkIsSignedIn(): boolean;
declare function NetworkIsSignedOnline(): boolean;
declare function NetworkIsTextChatActive(): boolean;
declare function NetworkIsThisScriptMarked(p0: number, p1: boolean, p2: number): boolean;
declare function N_0xd1110739eeadb592(p0: number, p1: boolean, p2: number): boolean;
declare function NetworkSetThisScriptMarked(p0: number, p1: boolean, p2: number): boolean;
declare function NetworkIsTransitionBusy(): boolean;
declare function NetworkIsTransitionClosedCrew(): boolean;
declare function N_0x0dbd5d7e3c5bec3b(): boolean;
declare function NetworkIsTransitionClosedFriends(): boolean;
declare function N_0x6512765e3be78c50(): boolean;
declare function NetworkIsTransitionHost(): boolean;
declare function NetworkIsTransitionHostFromHandle(networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkIsTransitionMatchmaking(): boolean;
declare function N_0x292564c735375edf(): boolean;
declare function NetworkIsTransitionOpenToMatchmaking(): boolean;
declare function N_0x37a4494483b9f5c9(): boolean;
declare function NetworkIsTransitionPrivate(): boolean;
declare function N_0x5a6aa44ff8e931e6(): boolean;
declare function NetworkIsTransitionSolo(): boolean;
declare function N_0x5dc577201723960a(): boolean;
declare function NetworkIsTransitionStarted(): boolean;
declare function NetworkIsTransitionToGame(): boolean;
declare function NetworkIsTransitionVisibilityLocked(): boolean;
declare function N_0xd0a484cb2f829fbe(): boolean;
declare function NetworkIsTunableCloudRequestPending(): boolean;
declare function N_0x0467c11ed88b7d28(): boolean;
declare function HasTunablesBeenDownloaded(): boolean;
declare function NetworkIsTutorialSessionChangePending(): boolean;
declare function N_0x35f0b98a8387274d(): boolean;
declare function NetworkJoinGroupActivity(): number;
declare function N_0xa06509a691d12be4(): number;
declare function NetworkJoinPreviouslyFailedSession(): boolean;
declare function N_0x59df79317f85a7e0(): boolean;
declare function NetworkJoinPreviouslyFailedTransition(): boolean;
declare function N_0xffe1e5b792d92b34(): boolean;
declare function NetworkJoinTransition(player: number): boolean;
declare function NetworkLaunchTransition(): boolean;
declare function NetworkLeaveTransition(): boolean;
declare function NetworkManualDeleteCharacter(characterSlot: number): void;
declare function N_0x821418c727fcacd7(characterSlot: number): void;
declare function NetworkMarkTransitionGamerAsFullyJoined(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkMemberIdFromGamerHandle(networkHandle: number): LuaMultiReturn<[string, number]>;
declare function NetworkMoneyCanBet(amount: number, p1: boolean, p2: boolean): boolean;
declare function N_0x81404f3dc124fe5b(amount: number, p1: boolean, p2: boolean): boolean;
declare function NetworkOpenTransitionMatchmaking(): void;
declare function N_0x2b3a8f7ca3a38fde(): void;
declare function NetworkOverrideChatRestrictions(player: number, toggle: boolean): void;
declare function N_0x3039ae5ad2c9c0c4(player: number, toggle: boolean): void;
declare function NetworkOverrideClockMillisecondsPerGameMinute(ms: number): void;
declare function NetworkOverrideClockTime(hours: number, minutes: number, seconds: number): void;
declare function NetworkOverrideCoordsAndHeading(entity: number, x: number, y: number, z: number, heading: number): void;
declare function N_0xa7e30de9272b6d49(entity: number, x: number, y: number, z: number, heading: number): void;
declare function NetworkOverrideReceiveRestrictions(player: number, toggle: boolean): void;
declare function N_0xddf73e2b1fec5ab4(player: number, toggle: boolean): void;
declare function NetworkOverrideReceiveRestrictionsAll(toggle: boolean): void;
declare function N_0x0ff2862b61a58af9(toggle: boolean): void;
declare function NetworkOverrideSendRestrictions(player: number, toggle: boolean): void;
declare function N_0x97dd4c5944cc2e6a(player: number, toggle: boolean): void;
declare function NetworkOverrideSendRestrictionsAll(toggle: boolean): void;
declare function N_0x57b192b4d4ad23d5(toggle: boolean): void;
declare function NetworkChatMute(toggle: boolean): void;
declare function NetworkOverrideTeamRestrictions(team: number, toggle: boolean): void;
declare function N_0x6f697a66ce78674e(team: number, toggle: boolean): void;
declare function NetworkOverrideTransitionChat(p0: boolean): void;
declare function N_0xaf66059a131aa269(p0: boolean): void;
declare function NetworkPayEmployeeWage(p0: number, p1: boolean, p2: boolean): void;
declare function N_0x5fd5ed82cbbe9989(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkPayMatchEntryFee(amount: number, matchId: string, p2: boolean, p3: boolean): void;
declare function N_0x9346e14f2af74d46(amount: number, matchId: string, p2: boolean, p3: boolean): void;
declare function NetworkPayUtilityBill(amount: number, p1: boolean, p2: boolean): void;
declare function N_0xafe08b35ec0c9eae(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkPedForceGameStateUpdate(ped: number): void;
declare function N_0xf0bc9bcd24a511d5(ped: number): void;
declare function NetworkPlayerGetCheaterReason(): number;
declare function N_0x172f75b6ee2233ba(): number;
declare function NetworkPlayerIsUnk(): number;
declare function NetworkPlayerGetName(player: number): string;
declare function NetworkPlayerGetUserid(player: number, userID: number): LuaMultiReturn<[string, number]>;
declare function NetworkPlayerGetUserId(player: number, userID: number): LuaMultiReturn<[string, number]>;
declare function NetworkPlayerHasHeadset(player: number): boolean;
declare function NetworkPlayerIdToInt(): number;
declare function NetworkPlayerIndexIsCheater(player: number): boolean;
declare function N_0x565e430db3b05bec(player: number): boolean;
declare function NetworkPlayerSomething(player: number): boolean;
declare function NetworkPlayerIsBadsport(): boolean;
declare function NetworkPlayerIsCheater(): boolean;
declare function NetworkPlayerIsRockstarDev(player: number): boolean;
declare function NetworkQueryRespawnResults(p0: number): LuaMultiReturn<[number, number]>;
declare function N_0x3c891a251567dfce(p0: number): LuaMultiReturn<[number, number]>;
declare function NetworkQueueGamerForStatus(p0: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x85a0ef54a500882c(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkGetGamerStatus(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkReceivePlayerJobshareCash(value: number, networkHandle: number): number;
declare function NetworkRefundCash(index: number, context: string, reason: string, unk: boolean): void;
declare function N_0xf9c812cd7c46e817(index: number, context: string, reason: string, unk: boolean): void;
declare function NetworkRegisterEntityAsNetworked(entity: number): void;
declare function N_0x06faacd625d80caa(entity: number): void;
declare function NetworkRegisterHostBroadcastVariables(numVars: number): number;
declare function NetworkRegisterPlayerBroadcastVariables(numVars: number): number;
declare function NetworkRegisterTunableBoolHash(contextHash: number, nameHash: number): LuaMultiReturn<[boolean, boolean]>;
declare function N_0x697f508861875b42(contextHash: number, nameHash: number): LuaMultiReturn<[boolean, boolean]>;
declare function NetworkRegisterTunableFloatHash(contextHash: number, nameHash: number, value: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x1950dae9848a4739(contextHash: number, nameHash: number, value: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkRegisterTunableIntHash(contextHash: number, nameHash: number, value: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x3a8b55fda4c8ddef(contextHash: number, nameHash: number, value: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkRemoveAllTransitionInvite(): void;
declare function N_0x726e0375c7a26368(): void;
declare function NetworkRemoveEntityArea(p0: number): boolean;
declare function NetworkRemovePresenceInvite(p0: number): boolean;
declare function N_0xf0210268db0974b1(p0: number): boolean;
declare function NetworkRemoveTransitionInvite(p0: number): void;
declare function NetworkReportMyself(): void;
declare function N_0x5626d9d6810730d5(): void;
declare function NetworkRequestCloudBackgroundScripts(): boolean;
declare function N_0x924426bffd82e915(): boolean;
declare function NetworkRequestCloudTunables(): void;
declare function N_0x42fb3b532d526e6c(): void;
declare function NetworkRequestControlOfDoor(doorID: number): boolean;
declare function NetworkRequestControlOfEntity(entity: number): boolean;
declare function NetworkRequestControlOfNetworkId(netId: number): boolean;
declare function NetworkResetBodyTracker(): void;
declare function NetworkRespawnCoords(player: number, x: number, y: number, z: number, p4: boolean, p5: boolean): void;
declare function N_0x9769f811d1785b03(player: number, x: number, y: number, z: number, p4: boolean, p5: boolean): void;
declare function NetworkResurrectLocalPlayer(x: number, y: number, z: number, heading: number, unk: boolean, changetime: boolean): void;
declare function NetworkRivalDeliveryCompleted(earnedMoney: number): void;
declare function NetworkSeedRandomNumberGenerator(seed: number): void;
declare function N_0xf1b84178f8674195(seed: number): void;
declare function NetworkSendInviteViaPresence(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xc3c7a6afdb244624(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
declare function NetworkSendPresenceInvite(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
declare function NetworkSendPresenceTransitionInvite(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xc116ff9b4d488291(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
declare function NetworkSendTextMessage(message: string, networkHandle: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkSendTransitionGamerInstruction(p1: string, p2: number, p3: number, p4: boolean): LuaMultiReturn<[boolean, number]>;
declare function NetworkSessionActivityQuickmatch(p0: number, p1: number, p2: number, p3: number): boolean;
declare function N_0xbe3e347a87aceb82(p0: number, p1: number, p2: number, p3: number): boolean;
declare function NetworkSessionAddActiveMatchmakingGroup(groupId: number): void;
declare function N_0xcae55f48d3d7875c(groupId: number): void;
declare function NetworkSessionBlockJoinRequests(toggle: boolean): void;
declare function N_0xa73667484d7037c3(toggle: boolean): void;
declare function NetworkSessionCancelInvite(): void;
declare function NetworkSessionChangeSlots(p0: number, p1: boolean): void;
declare function N_0xb4ab419e0d86acae(p0: number, p1: boolean): void;
declare function NetworkSessionCrewMatchmaking(p0: number, p1: number, p2: number, maxPlayers: number, p4: boolean): boolean;
declare function N_0x94bc51e9449d917f(p0: number, p1: number, p2: number, maxPlayers: number, p4: boolean): boolean;
declare function NetworkSessionEnd(p0: boolean, p1: boolean): boolean;
declare function NetworkSessionEnter(p0: number, p1: number, p2: number, maxPlayers: number, p4: number, p5: number): number;
declare function NetworkSessionForceCancelInvite(): void;
declare function N_0xa29177f7703b5644(): void;
declare function NetworkSessionFriendMatchmaking(p0: number, p1: number, maxPlayers: number, p3: boolean): boolean;
declare function N_0x2cfc76e0d087c994(p0: number, p1: number, maxPlayers: number, p3: boolean): boolean;
declare function NetworkSessionGetInviter(networkHandle: number): void;
declare function NetworkSessionGetKickVote(player: number): boolean;
declare function NetworkSessionArePlayersVotingToKick(player: number): boolean;
declare function NetworkSessionIsPlayerVotedToKick(player: number): boolean;
declare function NetworkSessionGetMatchmakingGroupFree(p0: number): number;
declare function N_0x56ce820830ef040b(p0: number): number;
declare function NetworkSessionGetUnk(p0: number): number;
declare function NetworkSessionGetPrivateSlots(): number;
declare function N_0x53afd64c6758f2f9(): number;
declare function NetworkSessionHost(p0: number, maxPlayers: number, p2: boolean): boolean;
declare function NetworkSessionHostClosed(p0: number, maxPlayers: number): boolean;
declare function N_0xed34c0c02c098bb7(p0: number, maxPlayers: number): boolean;
declare function NetworkSessionHostFriendsOnly(p0: number, maxPlayers: number): boolean;
declare function NetworkSessionHostSinglePlayer(p0: number): void;
declare function NetworkSessionIsClosedCrew(): boolean;
declare function N_0x74732c6ca90da2b4(): boolean;
declare function NetworkSessionIsClosedFriends(): boolean;
declare function N_0xfbcfa2ea2e206890(): boolean;
declare function NetworkSessionIsInVoiceSession(): boolean;
declare function N_0x855bc38818f6f684(): boolean;
declare function NetworkSessionIsPrivate(): boolean;
declare function N_0xcef70aa5b3f89ba1(): boolean;
declare function NetworkSessionIsSolo(): boolean;
declare function N_0xf3929c2379b60cce(): boolean;
declare function NetworkSessionIsVisible(): boolean;
declare function N_0xba416d68c631496a(): boolean;
declare function NetworkSessionIsVoiceSessionBusy(): boolean;
declare function N_0xef0912ddf7c4cb4b(): boolean;
declare function NetworkSessionJoinInvite(): void;
declare function NetworkIsPlayerAnimationDrawingSynchronized(): void;
declare function NetworkSessionKickPlayer(player: number): void;
declare function NetworkSessionLeaveSinglePlayer(): void;
declare function NetworkSessionMarkVisible(toggle: boolean): void;
declare function N_0x271cc6ab59ebf9a5(toggle: boolean): void;
declare function NetworkSessionSetMatchmakingGroup(matchmakingGroup: number): void;
declare function N_0x49ec8030f5015f8b(matchmakingGroup: number): void;
declare function NetworkSctvSlots(matchmakingGroup: number): void;
declare function NetworkSessionSetMatchmakingGroupMax(playerType: number, playerCount: number): void;
declare function N_0x8b6a4dd0af9ce215(playerType: number, playerCount: number): void;
declare function NetworkSessionSetMaxPlayers(playerType: number, playerCount: number): void;
declare function NetworkSessionSetMatchmakingMentalState(p0: number): void;
declare function N_0xf1eea2dda9ffa69d(p0: number): void;
declare function NetworkSessionSetMatchmakingPropertyId(p0: boolean): void;
declare function N_0x3f52e880aaf6c8ca(p0: boolean): void;
declare function NetworkSessionValidateJoin(p0: boolean): void;
declare function N_0xc19f6c8e7865a6ff(p0: boolean): void;
declare function NetworkSessionHosted(p0: boolean): void;
declare function NetworkSessionVoiceConnectToPlayer(globalPtr: number): void;
declare function N_0xabd5e88b8a2d3db2(globalPtr: number): void;
declare function NetworkVoiceConnectToPlayer(globalPtr: number): void;
declare function NetworkSessionVoiceHost(): void;
declare function NetworkSessionVoiceLeave(): void;
declare function NetworkSessionVoiceRespondToRequest(p0: boolean, p1: number): void;
declare function NetworkSetKeepFocuspoint(p0: boolean, p1: number): void;
declare function NetworkSessionVoiceSetTimeout(timeout: number): void;
declare function N_0x5b8ed3db018927b1(timeout: number): void;
declare function NetworkSessionWasInvited(): boolean;
declare function N_0x23dfb504655d0ce4(): boolean;
declare function NetworkSetActivityPlayerMax(playerCount: number): void;
declare function N_0x0e4f77f7b9d74d84(playerCount: number): void;
declare function NetworkSetActivitySpectator(toggle: boolean): void;
declare function NetworkSetActivitySpectatorMax(maxSpectators: number): void;
declare function NetworkSetChoiceMigrateOptions(toggle: boolean, player: number): void;
declare function N_0x5c707a667df8b9fa(toggle: boolean, player: number): void;
declare function NetworkSetCurrentDataManagerHandle(p0: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x796a87b3b68d1f3d(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkCheckDataManagerForHandle(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkSetCurrentMissionId(missionId: string): void;
declare function NetworkSetCurrentSpawnSetting(mpSettingSpawn: number): void;
declare function NetworkSetCurrentlySelectedGamerHandleFromInviteMenu(p0: number): LuaMultiReturn<[boolean, number]>;
declare function NetworkSetEntityCanBlend(entity: number, toggle: boolean): void;
declare function NetworkSetEntityGhostedWithOwner(entity: number, p1: boolean): void;
declare function N_0x4ba166079d658ed4(entity: number, p1: boolean): void;
declare function NetworkSetEntityInvisibleToNetwork(entity: number, toggle: boolean): void;
declare function N_0xf1ca12b18aef5298(entity: number, toggle: boolean): void;
declare function NetworkSetEntityVisibleToNetwork(entity: number, toggle: boolean): void;
declare function NetworkSetFriendlyFireOption(toggle: boolean): void;
declare function NetworkSetGamerInvitedToTransition(networkHandle: number): void;
declare function NetworkSetInFreeCamMode(toggle: boolean): void;
declare function N_0xfc18db55ae19e046(toggle: boolean): void;
declare function NetworkSetInMpCutscene(p0: boolean, p1: boolean): void;
declare function NetworkSetInSpectatorMode(toggle: boolean, playerPed: number): void;
declare function NetworkSetInSpectatorModeExtended(toggle: boolean, playerPed: number, p2: boolean): void;
declare function N_0x419594e137637120(toggle: boolean, playerPed: number, p2: boolean): void;
declare function NetworkSetInviteOnCallForInviteMenu(networkHandle: number): void;
declare function N_0x66f010a4b031a331(networkHandle: number): void;
declare function NetworkSetLocalPlayerInvincibleTime(time: number): void;
declare function NetworkSetLocalPlayerSyncLookAt(toggle: boolean): void;
declare function N_0x524ff0aeff9c3973(toggle: boolean): void;
declare function NetworkSetMissionFinished(): void;
declare function NetworkSetNoSpectatorChat(toggle: boolean): void;
declare function N_0xf46a1e03e8755980(toggle: boolean): void;
declare function NetworkSetObjectForceStaticBlend(object: number, enabled: boolean): void;
declare function N_0x0379daf89ba09aa5(object: number, enabled: boolean): void;
declare function NetworkSetOverrideSpectatorMode(toggle: boolean): void;
declare function NetworkSetPlayerIsPassive(toggle: boolean): void;
declare function N_0x1b857666604b1a74(toggle: boolean): void;
declare function NetworkSetPropertyId(id: number): void;
declare function NetworkSetRichPresence(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSetRichPresenceString(p0: number, textLabel: string): void;
declare function N_0x3e200c2bcf4164eb(p0: number, textLabel: string): void;
declare function NetworkSetRichPresence_2(p0: number, textLabel: string): void;
declare function NetworkSetScriptIsSafeForNetworkGame(): void;
declare function NetworkSetScriptReadyForEvents(toggle: boolean): void;
declare function N_0x7ac752103856fb20(toggle: boolean): void;
declare function NetworkSetTalkerProximity(value: number): void;
declare function NetworkSetTeamOnlyChat(toggle: boolean): void;
declare function NetworkSetThisScriptIsNetworkScript(maxNumMissionParticipants: number, p1: boolean, instanceId: number): void;
declare function NetworkSetTransitionActivityId(p0: number): void;
declare function N_0x30de938b516f0ad2(p0: number): void;
declare function NetworkSetTransitionCreatorHandle(p0: number): void;
declare function NetworkSetTransitionVisibilityLock(p0: boolean, p1: boolean): void;
declare function N_0x0c978fda19692c2c(p0: boolean, p1: boolean): void;
declare function NetworkSetVehicleTestDrive(toggle: boolean): void;
declare function NetworkSetVehicleWheelsDestructible(vehicle: number, toggle: boolean): void;
declare function N_0x890e2c5abed7236d(vehicle: number, toggle: boolean): void;
declare function NetworkSetVoiceActive(toggle: boolean): void;
declare function NetworkSetVoiceChannel(channel: number): void;
declare function NetworkShouldShowConnectivityTroubleshooting(): boolean;
declare function N_0x82a2b386716608f1(): boolean;
declare function NetworkShowProfileUi(networkHandle: number): void;
declare function NetworkSpentAmmoDrop(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentArcadeGame(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function NetworkSpentArcadeGeneric(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function NetworkSpentArenaJoinSpectator(amount: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkSpentArenaPremium(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentArenaSpectatorBox(amount: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkSpentArrestBail(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentAutoshopModifications(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x9bea350d7c48061b(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function NetworkSpentAutoshopPropertyUtilityFee(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xb40f96d6d252839b(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentBaService(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0xd7cccba28c4ecaf0(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function NetworkSpentBallisticEquipment(amount: number, p1: boolean, p2: boolean): void;
declare function N_0x5d97630a8a0ef123(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentBankInterest(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentBeachPartyGeneric(p0: number): void;
declare function NetworkSpentBetting(amount: number, p1: number, matchId: string, p3: boolean, p4: boolean): void;
declare function NetworkSpentBikeShopModify(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentBoatPickup(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentBoss(): boolean;
declare function N_0xffbe02cd385356bd(): boolean;
declare function NetworkSpentBounty(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentBountyHunterMission(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentBullShark(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentBusiness(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x0035bb914316f1e3(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentBuyArena(amount: number, p1: boolean, p2: boolean, p3: string): void;
declare function NetworkSpentBuyAutoshop(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xeeb7e5d1feb20869(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentBuyBase(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentBuyBunker(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x12d148d26538d0f9(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentBuyCasino(amount: number, p1: boolean, p2: boolean, data: number): number;
declare function NetworkSpentBuyOfftheradar(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentBuyPassiveMode(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentBuyRevealPlayers(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentBuyTiltrotor(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentBuyTruck(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xac272c0ae01b4bd8(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentBuyWantedlevel(p0: number, p2: boolean, p3: boolean): number;
declare function NetworkSpentCallPlayer(p0: number, p2: boolean, p3: boolean): number;
declare function NetworkSpentCarclub(p0: number, p1: boolean, p2: boolean, p3: number): void;
declare function N_0x925227803a0eaa1b(p0: number, p1: boolean, p2: boolean, p3: number): void;
declare function NetworkSpentCarclubMembership(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x1464e17207cd36e2(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function NetworkSpentCarclubTakeover(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xd1e46824e6fb92b5(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentCargoSourcing(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function NetworkSpentCarwash(p0: number, p1: number, p2: number, p3: boolean, p4: boolean): void;
declare function NetworkSpentCashDrop(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentCasinoClubGeneric(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): void;
declare function NetworkSpentCasinoGeneric(amount: number, p1: number, p2: number, p3: number, p4: number): void;
declare function NetworkSpentCasinoHeist(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number): void;
declare function NetworkSpentCasinoHeistSkipMission(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentCasinoMembership(amount: number, p1: boolean, p2: boolean, p3: number): void;
declare function NetworkSpentCinema(p0: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkSpentEmployAssassins(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentFromBank(p0: number, p1: number, p2: number, p3: boolean): void;
declare function N_0xb9f7a469460e7a4a(p0: number, p1: number, p2: number, p3: boolean): void;
declare function NetworkSpentFromRockstar(bank: number, p1: boolean, p2: boolean): void;
declare function N_0x6a445b64ed7abeb5(bank: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentGangopsCannon(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentGangopsStartMission(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentGangopsStartStrand(_type: number, amount: number, p2: boolean, p3: boolean): void;
declare function NetworkSpentGangopsTripSkip(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentGunrunningContactService(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentHangarStaffCharges(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentHangarUtilityCharges(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentHeliPickup(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentHireMercenary(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentHireMugger(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentHoldups(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentImAbility(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x93aa4165cb67e925(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentImportExportRepair(p0: number, p1: number, p2: number): void;
declare function N_0xc1952f3773ba18fe(p0: number, p1: number, p2: number): void;
declare function NetworkSpentInStripclub(p0: number, p1: boolean, p2: number, p3: boolean): void;
declare function N_0xee99784e4467689c(p0: number, p1: boolean, p2: number, p3: boolean): void;
declare function NetworkSpentIslandHeist(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentJobSkip(amount: number, matchId: string, p2: boolean, p3: boolean): void;
declare function NetworkSpentJukebox(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x5bcde0f640c773d2(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentMakeItRain(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentMoveYacht(amount: number, p1: boolean, p2: boolean): void;
declare function N_0xe7df4e0545dfb56e(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentNightclubBarDrink(amount: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkSpentNightclubEntryFee(player: number, amount: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkSpentNoCops(p0: number, p1: boolean, p2: boolean): void;
declare function N_0xd5bb406f4e04019f(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentOrderBodyguardVehicle(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xe8b0b270b6e7c76e(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentOrderWarehouseVehicle(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x05f04155a226fbbf(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentPaServiceDancer(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xb49eca122467d05f(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentPaServiceHeliPickup(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x0fe8e1fcd2b86b33(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentPayBoss(p0: number, p1: number, p2: number): void;
declare function N_0xdbc966a01c02bca7(p0: number, p1: number, p2: number): void;
declare function NetworkSpentPayGoon(p0: number, p1: number, amount: number): void;
declare function N_0x08a1b82b91900682(p0: number, p1: number, amount: number): void;
declare function NetworkSpentPayVehicleInsurancePremium(amount: number, vehicleModel: number, notBankrupt: boolean, hasTheMoney: boolean): number;
declare function NetworkSpentPlayerHealthcare(p0: number, p1: number, p2: boolean, p3: boolean): void;
declare function N_0x7c99101f7fce2ee5(p0: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkSpentProstitutes(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentPurchaseHangar(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentPurchaseWarehouse(amount: number, data: number, p2: boolean, p3: boolean): void;
declare function N_0x33981d6804e62f49(amount: number, data: number, p2: boolean, p3: boolean): void;
declare function NetworkSpentRdrhatchetBonus(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentRehireDj(amount: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkSpentRenameOrganization(p0: number, p1: number, p2: number): void;
declare function N_0xfc4ee00a7b3bfb76(p0: number, p1: number, p2: number): void;
declare function NetworkSpentRequestHeist(p0: number, p1: boolean, p2: boolean): void;
declare function N_0x9d26502bb97bfe62(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentRequestJob(p0: number, p1: boolean, p2: boolean): void;
declare function N_0x8204da7934df3155(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentRobbedByMugger(amount: number, p1: boolean, p2: boolean): void;
declare function N_0x995a65f15f581359(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentSalesDisplay(p0: boolean): void;
declare function NetworkSpentSpinTheWheelPayment(amount: number, p1: number, p2: boolean, p3: boolean): void;
declare function NetworkSpentSubmarine(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function NetworkSpentTaxi(amount: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentTelescope(p0: number, p1: boolean, p2: boolean): void;
declare function NetworkSpentUpgradeArena(amount: number, p1: boolean, p2: boolean, p3: string): void;
declare function NetworkSpentUpgradeAutoshop(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xdd829aa198fdc46c(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentUpgradeBase(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentUpgradeBunker(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x0c82d21a77c22d49(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentUpgradeCasino(amount: number, p1: boolean, p2: boolean, data: number): number;
declare function NetworkSpentUpgradeHangar(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentUpgradeSub(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x89049a84065ce68e(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentUpgradeTiltrotor(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentUpgradeTruck(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x365e877c61d6988b(p0: number, p1: number, p2: number, p3: number): void;
declare function NetworkSpentVehicleExportMods(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;
declare function N_0xa75ccf58a60a5fd1(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;
declare function NetworkSpentVehicleRequested(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function NetworkSpentVipUtilityCharges(p0: number, p1: number, p2: number): void;
declare function N_0x5182a339a3474510(p0: number, p1: number, p2: number): void;
declare function NetworkSpentWager(p0: number, p1: number, amount: number): void;
declare function N_0xd99db210089617fe(p0: number, p1: number, amount: number): void;
declare function NetworkStartRespawnSearchForPlayer(player: number, x: number, y: number, z: number, radius: number, p5: number, p6: number, p7: number, flags: number): boolean;
declare function N_0x5a6ffa2433e2f14c(player: number, x: number, y: number, z: number, radius: number, p5: number, p6: number, p7: number, flags: number): boolean;
declare function NetworkStartRespawnSearchInAngledAreaForPlayer(player: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p8: number, p9: number, p10: number, flags: number): boolean;
declare function N_0x4ba92a18502bca61(player: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p8: number, p9: number, p10: number, flags: number): boolean;
declare function NetworkStartSoloTutorialSession(): void;
declare function N_0x17e0198b3882c2cb(): void;
declare function NetworkStartSynchronisedScene(netScene: number): void;
declare function NetworkStartUserContentPermissionsCheck(netHandle: number): number;
declare function N_0xdeb2b99a1af1a2a6(netHandle: number): number;
declare function NetworkStopLoadScene(): void;
declare function NetworkStopSynchronisedScene(netScene: number): void;
declare function NetworkSuppressInvite(toggle: boolean): void;
declare function NetworkTransitionTrack(hash: number, p1: number, p2: number, state: number, p4: number): void;
declare function N_0xc3bfed92026a2aad(hash: number, p1: number, p2: number, state: number, p4: number): void;
declare function NetworkTryAccessTunableBoolHash(tunableContext: number, tunableName: number, defaultValue: boolean): boolean;
declare function N_0xc7420099936ce286(tunableContext: number, tunableName: number, defaultValue: boolean): boolean;
declare function NetworkAccessTunableBoolHashFailVal(tunableContext: number, tunableName: number, defaultValue: boolean): boolean;
declare function NetworkUgcNav(p0: number, p1: number): void;
declare function N_0xc1447451ddb512f0(p0: number, p1: number): void;
declare function NetworkUnregisterNetworkedEntity(entity: number): void;
declare function N_0x7368e683bb9038d6(entity: number): void;
declare function NetworkUpdateLoadScene(): boolean;
declare function NetworkUpdatePlayerScars(): void;
declare function N_0xb7c7f6ad6424304b(): void;
declare function NetworkUseHighPrecisionBlending(netID: number, toggle: boolean): void;
declare function N_0x2b1813aba29016c5(netID: number, toggle: boolean): void;
declare function NetworkSetNetworkIdDynamic(netID: number, toggle: boolean): void;
declare function NetworkUseHighPrecisionVehicleBlending(vehicle: number, toggle: boolean): void;
declare function N_0xec0c1d4922af9754(vehicle: number, toggle: boolean): void;
declare function NetworkUseLogarithmicBlendingThisFrame(entity: number): void;
declare function N_0xcd71a4ecab22709e(entity: number): void;
declare function NewLoadSceneStart(posX: number, posY: number, posZ: number, offsetX: number, offsetY: number, offsetZ: number, radius: number, p7: number): boolean;
declare function NewLoadSceneStartSphere(x: number, y: number, z: number, radius: number, p4: number): boolean;
declare function N_0xaccfb4acf53551b0(x: number, y: number, z: number, radius: number, p4: number): boolean;
declare function NewLoadSceneStop(): void;
declare function NextOnscreenKeyboardResultWillDisplayUsingTheseFonts(p0: number): void;
declare function N_0x3ed1438c1f5c6612(p0: number): void;
declare function ObjToNet(object: number): number;
declare function OnEnterMp(): void;
declare function LoadMpDlcMaps(): void;
declare function OnEnterSp(): void;
declare function N_0xd7c10c4a637992c9(): void;
declare function LoadSpDlcMaps(): void;
declare function OpenBombBayDoors(vehicle: number): void;
declare function OpenVehicleBombBay(vehicle: number): void;
declare function OpenCommerceStore(p0: string, p1: string): void;
declare function N_0x58c21165f6545892(p0: string, p1: string): void;
declare function OpenOnlinePoliciesMenu(): void;
declare function ShowSocialClubLegalScreen(): void;
declare function OpenPatrolRoute(patrolRoute: string): void;
declare function OpenReportugcMenu(): void;
declare function N_0x523a590c1a3cc0d3(): void;
declare function DisplayJobReport(): void;
declare function OpenSequenceTask(taskSequenceId: number): void;
declare function OpenSocialClubMenu(): void;
declare function N_0x75d3691713c3b05a(): void;
declare function OrderedBossVehicle(p0: number, p1: number, vehicleHash: number): void;
declare function N_0xcea553e35c2246e1(p0: number, p1: number, vehicleHash: number): void;
declare function OverrideCamSplineMotionBlur(cam: number, p1: number, p2: number, p3: number): void;
declare function OverrideCamSplineVelocity(cam: number, p1: number, p2: number, p3: number): void;
declare function OverrideInteriorSmokeEnd(): void;
declare function N_0xefb55e7c25d3b3be(): void;
declare function OverrideInteriorSmokeLevel(level: number): void;
declare function N_0x1600fd8cf72ebc12(level: number): void;
declare function OverrideInteriorSmokeName(name: string): void;
declare function N_0x2a2a52824db96700(name: string): void;
declare function OverrideLodscaleThisFrame(scaling: number): void;
declare function N_0xa76359fc80b2438e(scaling: number): void;
declare function OverrideMicrophoneSettings(hash: number, toggle: boolean): void;
declare function N_0x75773e11ba459e90(hash: number, toggle: boolean): void;
declare function OverrideMultiplayerChatColour(p0: number, hudColor: number): void;
declare function N_0xf47e567b3630dd12(p0: number, hudColor: number): void;
declare function OverrideMultiplayerChatPrefix(gxtEntryHash: number): void;
declare function N_0x6a1738b4323fe2d9(gxtEntryHash: number): void;
declare function OverridePedBadgeTexture(ped: number, txd: string, txn: string): boolean;
declare function N_0x95eb5e34f821babe(ped: number, txd: string, txn: string): boolean;
declare function OverridePedsCanStandOnTopFlag(flag: boolean): void;
declare function OverridePlayerGroundMaterial(hash: number, toggle: boolean): void;
declare function N_0xd2cc78cd3d0b50f9(hash: number, toggle: boolean): void;
declare function OverridePopGroups(path: string): void;
declare function OverridePopscheduleVehicleModel(scheduleId: number, vehicleHash: number): void;
declare function OverrideSaveHouse(p0: boolean, p1: number, p2: number, p3: number, p4: number, p5: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function OverrideTrevorRage(voiceEffect: string): void;
declare function OverrideUnderwaterStream(p1: boolean): number;
declare function OverrideVehHorn(vehicle: number, override: boolean, hornHash: number): void;
declare function OverrideVehiclePedsCanStandOnTopFlag(vehicle: number, can: boolean): void;
declare function ParticipantId(): number;
declare function ParticipantIdToInt(): number;
declare function PassKeyboardInputToScaleform(scaleformHandle: number): boolean;
declare function N_0xd1c7cb175e012964(scaleformHandle: number): boolean;
declare function PatchDecalDiffuseMap(decalType: number, textureDict: string, textureName: string): void;
declare function N_0x8a35c742130c6080(decalType: number, textureDict: string, textureName: string): void;
declare function AddDecalToMarker(decalType: number, textureDict: string, textureName: string): void;
declare function OverrideDecalTexture(decalType: number, textureDict: string, textureName: string): void;
declare function PauseClock(toggle: boolean): void;
declare function PauseDeathArrestRestart(toggle: boolean): void;
declare function DisableAutomaticRespawn(toggle: boolean): void;
declare function PauseMenuActivateContext(hash: number): void;
declare function N_0xdd564bdd0472c936(hash: number): void;
declare function AddFrontendMenuContext(hash: number): void;
declare function PauseMenuDeactivateContext(contextHash: number): void;
declare function ObjectDecalToggle(contextHash: number): void;
declare function PauseMenuDisableBusyspinner(toggle: boolean): void;
declare function N_0x9245e81072704b8a(toggle: boolean): void;
declare function PauseMenuGetIndexOfMouseHoveredSlot(): number;
declare function N_0x359af31a4b52f5ed(): number;
declare function PauseMenuGetUniqueIdOfMouseHoveredSlot(): number;
declare function N_0x13c4b962653a5280(): number;
declare function PauseMenuIsContextActive(contextHash: number): boolean;
declare function N_0x84698ab38d0c6636(contextHash: number): boolean;
declare function PauseMenuIsContextMenuActive(): number;
declare function N_0x2a25adc48f87841f(): number;
declare function PauseMenuRedrawInstructionalButtons(p0: number): void;
declare function EnableDeathbloodSeethrough(p0: number): void;
declare function N_0x4895bdea16e7c080(p0: number): void;
declare function PauseMenuSetBusySpinner(p0: boolean, p1: number, p2: number): void;
declare function N_0xc78e239ac5b2ddb9(p0: boolean, p1: number, p2: number): void;
declare function PauseMenuSetWarnOnTabChange(setWarn: boolean): void;
declare function N_0xf06ebb91a81e09e3(setWarn: boolean): void;
declare function PauseMenuceptionGoDeeper(pageId: number): void;
declare function N_0x77f16b447824da6c(pageId: number): void;
declare function PauseMenuceptionTheKick(): void;
declare function N_0xcdca26e80faecb8f(): void;
declare function PausePlaybackRecordedVehicle(vehicle: number): void;
declare function PauseScriptedConversation(p0: boolean): void;
declare function PedHasUseScenarioTask(ped: number): boolean;
declare function PedToNet(ped: number): number;
declare function PinInteriorInMemory(interior: number): void;
declare function N_0x2ca429c029ccf247(interior: number): void;
declare function LoadInterior(interior: number): void;
declare function PinRopeVertex(ropeId: number, vertex: number, x: number, y: number, z: number): void;
declare function PlaceObjectOnGroundProperly(object: number): boolean;
declare function PlaceObjectOnGroundProperly_2(object: number): boolean;
declare function N_0xd76eeef746057fd6(object: number): boolean;
declare function PlayAmbientSpeechFromPositionNative(speechName: string, voiceName: string, x: number, y: number, z: number, speechParam: string): void;
declare function N_0xed640017ed337e45(speechName: string, voiceName: string, x: number, y: number, z: number, speechParam: string): void;
declare function PlayAmbientSpeechAtCoords(speechName: string, voiceName: string, x: number, y: number, z: number, speechParam: string): void;
declare function PlayAnimOnRunningScenario(ped: number, animDict: string, animName: string): void;
declare function PlayAnimalVocalization(pedHandle: number, p1: number, speechName: string): void;
declare function N_0xee066c7006c49c0a(pedHandle: number, p1: number, speechName: string): void;
declare function PlayBinkMovie(binkMovie: number): void;
declare function PlayCamAnim(cam: number, animName: string, animDictionary: string, x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, p9: boolean, p10: number): boolean;
declare function PlayDeferredSoundFrontend(soundName: string, soundsetName: string): void;
declare function N_0xcada5a0d0702381e(soundName: string, soundsetName: string): void;
declare function PlayEndCreditsMusic(play: boolean): void;
declare function PlayEntityAnim(entity: number, animName: string, animDict: string, p3: number, loop: boolean, stayInAnim: boolean, p6: boolean, delta: number, bitset: number): boolean;
declare function PlayEntityScriptedAnim(p0: number, p4: number, p5: number): LuaMultiReturn<[number, number, number]>;
declare function PlayFacialAnim(ped: number, animName: string, animDict: string): void;
declare function PlayMissionCompleteAudio(audioName: string): void;
declare function PlayPain(ped: number, painID: number, p1: number): void;
declare function PlayPedAmbientSpeechAndCloneNative(ped: number, speechName: string, speechParam: string): void;
declare function PlayAmbientSpeech2(ped: number, speechName: string, speechParam: string): void;
declare function PlayPedAmbientSpeechNative(ped: number, speechName: string, speechParam: string): void;
declare function PlayAmbientSpeech1(ped: number, speechName: string, speechParam: string): void;
declare function PlayPedAmbientSpeechWithVoiceNative(ped: number, speechName: string, voiceName: string, speechParam: string, p4: boolean): void;
declare function PlayAmbientSpeechWithVoice(ped: number, speechName: string, voiceName: string, speechParam: string, p4: boolean): void;
declare function PlayPedRingtone(ringtoneName: string, ped: number, p2: boolean): void;
declare function PlayPoliceReport(name: string, p1: number): number;
declare function PlaySound(soundId: number, audioName: string, audioRef: string, p3: boolean, p4: number, p5: boolean): void;
declare function PlaySoundFromCoord(soundId: number, audioName: string, x: number, y: number, z: number, audioRef: string, isNetwork: boolean, range: number, p8: boolean): void;
declare function PlaySoundFromEntity(soundId: number, audioName: string, entity: number, audioRef: string, isNetwork: boolean, p5: number): void;
declare function PlaySoundFrontend(soundId: number, audioName: string, audioRef: string, p3: boolean): void;
declare function PlayStreamFromObject(object: number): void;
declare function PlayStreamFromPed(ped: number): void;
declare function N_0x89049dd63c08b5d1(ped: number): void;
declare function PlayStreamFromPosition(x: number, y: number, z: number): void;
declare function SpecialFrontendEqual(x: number, y: number, z: number): void;
declare function PlayStreamFromVehicle(vehicle: number): void;
declare function PlayStreamFrontend(): void;
declare function PlaySynchronizedAudioEvent(p0: number): boolean;
declare function PlaySynchronizedCamAnim(camera: number, scene: number, animName: string, animDictionary: string): boolean;
declare function PlaySynchronizedEntityAnim(entity: number, syncedScene: number, animation: string, propName: string, p4: number, p5: number, p6: number, p7: number): boolean;
declare function PlaySynchronizedMapEntityAnim(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p8: number, p9: number, p10: number, p11: number): LuaMultiReturn<[boolean, number, number]>;
declare function PlayTennisDiveAnim(ped: number, p1: number, p2: number, p3: number, p4: number, p5: boolean): void;
declare function N_0x8fa9c42fc5d7c64b(ped: number, p1: number, p2: number, p3: number, p4: number, p5: boolean): void;
declare function PlayTennisSwingAnim(ped: number, animDict: string, animName: string, p3: number, p4: number, p5: boolean): void;
declare function N_0xe266ed23311f24d4(ped: number, animDict: string, animName: string, p3: number, p4: number, p5: boolean): void;
declare function PlayVehicleDoorCloseSound(vehicle: number, doorIndex: number): void;
declare function PlayVehicleDoorOpenSound(vehicle: number, doorIndex: number): void;
declare function PlayerAttachVirtualBound(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number): void;
declare function PlayerDetachVirtualBound(): void;
declare function PlayerId(): number;
declare function PlayerPedId(): number;
declare function PlaystatsAcquiredHiddenPackage(p0: number): void;
declare function N_0x79ab33f0fbfac40c(p0: number): void;
declare function PlaystatsActivityDone(p0: number, p1: number): void;
declare function N_0xa071e0ed98f91286(p0: number, p1: number): void;
declare function PlaystatsArcadegame(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function PlaystatsArenaWarSpectator(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function PlaystatsArenaWarsEnded(data: number): void;
declare function PlaystatsAwardBadsport(id: number): void;
declare function N_0x47b32f5611e6e483(id: number): void;
declare function PlaystatsAwardXp(amount: number, _type: number, category: number): void;
declare function PlaystatsBackgroundScriptAction(action: string, value: number): void;
declare function N_0x5009dfd741329729(action: string, value: number): void;
declare function PlaystatsBanAlert(p0: number): void;
declare function N_0x516fc96eb88eefe5(p0: number): void;
declare function PlaystatsBuyContraband(data: number): void;
declare function N_0xd6781e42755531f7(data: number): void;
declare function PlaystatsCarclubChallenge(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x1187cb58d7f3bed7(p0: number, p1: number, p2: number, p3: number): void;
declare function PlaystatsCarclubPoints(p0: number): void;
declare function N_0xff14d6feec507bbe(p0: number): void;
declare function PlaystatsCarclubPrize(p0: number, p1: number): void;
declare function N_0x69c922b677621428(p0: number, p1: number): void;
declare function PlaystatsCasinoBlackjack(p0: number): void;
declare function PlaystatsCasinoBlackjackLight(p0: number): void;
declare function PlaystatsCasinoChip(p0: number): void;
declare function PlaystatsCasinoInsidetrack(p0: number): void;
declare function PlaystatsCasinoInsidetrackLight(p0: number): void;
declare function PlaystatsCasinoLuckyseven(p0: number): void;
declare function PlaystatsCasinoMissionEnded(data: number): void;
declare function PlaystatsCasinoRoulette(p0: number): void;
declare function PlaystatsCasinoRouletteLight(p0: number): void;
declare function PlaystatsCasinoSlotmachine(p0: number): void;
declare function PlaystatsCasinoSlotmachineLight(p0: number): void;
declare function PlaystatsCasinoStoryMissionEnded(p0: number, p1: number): void;
declare function PlaystatsCasinoThreecardpoker(p0: number): void;
declare function PlaystatsCasinoThreecardpokerLight(p0: number): void;
declare function PlaystatsChangeMcEmblem(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0x0a50d2604e05cb94(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function PlaystatsCheatApplied(cheat: string): void;
declare function PlaystatsClothChange(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function PlaystatsCollectible(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;
declare function PlaystatsCopyRankIntoNewSlot(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function N_0xb7257ba2550ea10a(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function PlaystatsCrateCreated(p0: number, p1: number, p2: number): void;
declare function N_0xafc7e5e075a96f46(p0: number, p1: number, p2: number): void;
declare function PlaystatsAmbientMissionCrateCreated(p0: number, p1: number, p2: number): void;
declare function PlaystatsCrateCreatedMissionDone(p0: number, p1: number, p2: number): void;
declare function PlaystatsCrateDropMissionDone(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function N_0x1cae5d2e3f9a07f0(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function PlaystatsCrateDrop(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function PlaystatsDarMissionEnd(data: number): void;
declare function PlaystatsDefendContraband(data: number): void;
declare function N_0x2605663bd4f23b5d(data: number): void;
declare function PlaystatsDirectorMode(p0: number): void;
declare function N_0x46326e13da4e0546(p0: number): void;
declare function PlaystatsDroneUsage(p0: number, p1: number, p2: number): void;
declare function PlaystatsDupeDetection(data: number): void;
declare function N_0x848b66100ee33b05(data: number): void;
declare function PlaystatsEarnedMcPoints(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function N_0x501478855a6074ce(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function PlaystatsEnterSessionPack(data: number): void;
declare function PlaystatsExtraEvent(p0: number): void;
declare function N_0xfa5b74bab8a7ef99(p0: number): void;
declare function PlaystatsFriendActivity(p0: number, p1: number): void;
declare function PlaystatsGunrunMissionEnded(data: number): void;
declare function N_0x0eacdf8487d5155a(data: number): void;
declare function PlaystatsH2FmprepEnd(data: number): void;
declare function PlaystatsH2InstanceEnd(p1: number, p2: number, p3: number): number;
declare function PlaystatsHeistSaveCheat(hash: number, p1: number): void;
declare function N_0xf4ff020a08bc8863(hash: number, p1: number): void;
declare function PlaystatsHoldUpMissionDone(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0xcb00196b31c39eb1(p0: number, p1: number, p2: number, p3: number): void;
declare function PlaystatsHoldUp(p0: number, p1: number, p2: number, p3: number): void;
declare function PlaystatsIdleKick(time: number): void;
declare function N_0x5da3a8de8cb6226f(time: number): void;
declare function PlaystatsImportExportMissionDone(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x2b69f5074c894811(p0: number, p1: number, p2: number, p3: number): void;
declare function PlaystatsImpExp(p0: number, p1: number, p2: number, p3: number): void;
declare function PlaystatsInventory(p0: number): void;
declare function PlaystatsJobBend(): LuaMultiReturn<[number, number, number, number]>;
declare function N_0xf5bb8dac426a52c0(): LuaMultiReturn<[number, number, number, number]>;
declare function PlaystatsLeaveJobChain(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function N_0xc5be134ec7ba96a0(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function PlaystatsMatchStarted(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function PlaystatsMissionCheckpoint(p1: number, p2: number, p3: number): number;
declare function PlaystatsMissionOver(p1: number, p2: number, p3: boolean, p4: boolean, p5: boolean): number;
declare function PlaystatsMissionStarted(p1: number, p2: number, p3: boolean): number;
declare function PlaystatsNpcInvite(p0: number): void;
declare function PlaystatsOddjobDone(p0: number, p1: number, p2: number): void;
declare function PlaystatsPassiveMode(p0: boolean, p1: number, p2: number, p3: number): void;
declare function PlaystatsPegasaircraft(modelHash: number): void;
declare function PlaystatsPiMenuHideSettings(data: number): void;
declare function N_0x203b381133817079(data: number): void;
declare function PlaystatsPropChange(p0: number, p1: number, p2: number, p3: number): void;
declare function PlaystatsQuickfixTool(element: number, item: string): void;
declare function N_0x90d0622866e80445(element: number, item: string): void;
declare function PlaystatsRaceCheckpoint(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function PlaystatsRaceToPointMissionDone(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;
declare function N_0xaddd1c754e2e2914(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;
declare function PlaystatsRaceToPoint(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;
declare function PlaystatsRandomMissionDone(name: string, p1: number, p2: number, p3: number): void;
declare function N_0x71862b1d855f32e1(name: string, p1: number, p2: number, p3: number): void;
declare function PlaystatsRankUp(rank: number): void;
declare function PlaystatsRecoverContraband(data: number): void;
declare function N_0x04d90ba8207ada2d(data: number): void;
declare function PlaystatsRobberyFinale(p0: number): void;
declare function N_0xbba55be9aaaabf44(p0: number): void;
declare function PlaystatsRobberyPrep(p0: number): void;
declare function N_0x1a67dfbf1f5c3835(p0: number): void;
declare function PlaystatsRosBet(amount: number, act: number, player: number, cm: number): void;
declare function N_0x121fb4dddc2d5291(amount: number, act: number, player: number, cm: number): void;
declare function PlaystatsSellContraband(data: number): void;
declare function N_0xc729991a9065376e(data: number): void;
declare function PlaystatsSetJoinType(joinType: number): void;
declare function N_0xd1032e482629049e(joinType: number): void;
declare function PlaystatsShopItem(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function PlaystatsSmugMissionEnded(data: number): void;
declare function PlaystatsSpectatorWheelSpin(p0: number, p1: number, p2: number, p3: number): void;
declare function PlaystatsSpentPiCustomLoadout(amount: number): void;
declare function N_0xbe509b0a3693de8b(amount: number): void;
declare function PlaystatsStartOfflineMode(): void;
declare function N_0x098760c7461724cd(): void;
declare function PlaystatsStoneHatchetEnd(data: number): void;
declare function PlaystatsStuntPerformedEventAllowTrigger(): void;
declare function N_0x928dbfb892638ef3(): void;
declare function PlaystatsStuntPerformedEventDisallowTrigger(): void;
declare function N_0x8a800daccc0da55d(): void;
declare function PlaystatsWeaponModeChange(weaponHash: number, componentHashTo: number, componentHashFrom: number): void;
declare function N_0xe95c8a1875a02ca4(weaponHash: number, componentHashTo: number, componentHashFrom: number): void;
declare function PlaystatsWebsiteVisited(scaleformHash: number, p1: number): void;
declare function N_0xddf24d535060f811(scaleformHash: number, p1: number): void;
declare function PointCamAtCoord(cam: number, x: number, y: number, z: number): void;
declare function PointCamAtEntity(cam: number, entity: number, offsetX: number, offsetY: number, offsetZ: number, p5: boolean): void;
declare function PointCamAtPedBone(cam: number, ped: number, boneIndex: number, x: number, y: number, z: number, p6: boolean): void;
declare function PopOutVehicleWindscreen(vehicle: number): void;
declare function DetachVehicleWindscreen(vehicle: number): void;
declare function PopTimecycleModifier(): void;
declare function PopulateNow(): void;
declare function Pow(base: number, exponent: number): number;
declare function PrefetchSrl(srl: string): void;
declare function PreloadBusyspinner(): void;
declare function N_0xc65ab383cd91df98(): void;
declare function PreloadCloudHat(name: string): void;
declare function N_0x11b56fbbf7224868(name: string): void;
declare function PreloadScriptConversation(p0: boolean, p1: boolean, p2: boolean, p3: boolean): void;
declare function PreloadScriptPhoneConversation(p0: boolean, p1: boolean): void;
declare function PreloadVehicleAudio(model: number): void;
declare function N_0xca4cea6ae0000a7e(model: number): void;
declare function PreloadVehicleMod(p0: number, modType: number, p2: number): void;
declare function PrepareAlarm(alarmName: string): boolean;
declare function PrepareMusicEvent(eventName: string): boolean;
declare function PrepareSynchronizedAudioEvent(p0: string, p1: number): number;
declare function PrepareSynchronizedAudioEventForScene(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function PresenceEventUpdatestatFloat(statHash: number, value: number, p2: number): void;
declare function N_0x30a6614c1f7799b8(statHash: number, value: number, p2: number): void;
declare function UpdateStatFloat(statHash: number, value: number, p2: number): void;
declare function PresenceEventUpdatestatInt(statHash: number, value: number, p2: number): void;
declare function N_0x11ff1c80276097ed(statHash: number, value: number, p2: number): void;
declare function UpdateStatInt(statHash: number, value: number, p2: number): void;
declare function PresetInteriorAmbientCache(timecycleModifierName: string): void;
declare function N_0xd7021272eb0a451e(timecycleModifierName: string): void;
declare function PreventCollectionOfPortablePickup(object: number, p1: boolean, p2: boolean): void;
declare function N_0x92aefb5f6e294023(object: number, p1: boolean, p2: boolean): void;
declare function ProcessCashGift(p2: string): LuaMultiReturn<[string, number, number]>;
declare function N_0x20194d48eaec9a41(p2: string): LuaMultiReturn<[string, number, number]>;
declare function ProcessEntityAttachments(entity: number): void;
declare function ProfilerEnterScope(scopeName: string): void;
declare function ProfilerExitScope(): void;
declare function ProfilerIsRecording(): boolean;
declare function PulseBlip(blip: number): void;
declare function PushTimecycleModifier(): void;
declare function QueryMovieMeshSetState(p0: number): number;
declare function N_0x9b6e70c5ceef4eeb(p0: number): number;
declare function QueueMissionRepeatLoad(): boolean;
declare function N_0x72de52178c291cb5(): boolean;
declare function QueueMissionRepeatSave(): boolean;
declare function N_0x44a0bdc559b35f6e(): boolean;
declare function RaceGalleryAddBlip(x: number, y: number, z: number): number;
declare function N_0x551df99658db6ee8(x: number, y: number, z: number): number;
declare function RaceGalleryFullscreen(toggle: boolean): void;
declare function N_0x5354c5ba2ea868a4(toggle: boolean): void;
declare function SetMapFullScreen(toggle: boolean): void;
declare function RaceGalleryNextBlipSprite(spriteId: number): void;
declare function N_0x1eae6dd17b7a5efa(spriteId: number): void;
declare function RaiseConvertibleRoof(vehicle: number, instantlyRaise: boolean): void;
declare function RaiseRetractableWheels(vehicle: number): void;
declare function RaiseLowerableWheels(vehicle: number): void;
declare function RecordBrokenGlass(x: number, y: number, z: number, radius: number): void;
declare function N_0xfbe20329593dec9d(x: number, y: number, z: number, radius: number): void;
declare function RefillAmmoInstantly(ped: number): boolean;
declare function PedSkipNextReloading(ped: number): boolean;
declare function RefreshInterior(interiorID: number): void;
declare function RefreshPlayerListStats(p0: number): boolean;
declare function UsingNetworkWeapontype(p0: number): boolean;
declare function N_0xe26ccff8094d8c74(p0: number): boolean;
declare function RefreshWaypoint(): void;
declare function RegisterArchetypes(factory: any): void;
declare function RegisterBoolToSave(name: string): number;
declare function RegisterCommand(commandName: string, handler: any, restricted: boolean): void;
declare function RegisterEntities(factory: any): void;
declare function RegisterEntityForCutscene(cutsceneEntity: number, cutsceneEntName: string, p2: number, modelHash: number, p4: number): void;
declare function RegisterEnumToSave(name: string): number;
declare function RegisterFloatToSave(name: string): number;
declare function RegisterFontFile(fileName: string): void;
declare function RegisterFontId(fontName: string): number;
declare function RegisterHatedTargetsAroundPed(ped: number, radius: number): void;
declare function RegisterInt64ToSave(name: string): number;
declare function N_0xa735353c77334ea0(name: string): number;
declare function RegisterIntToSave(name: string): number;
declare function RegisterKeyMapping(commandString: string, description: string, defaultMapper: string, defaultParameter: string): void;
declare function RegisterNamedRendertarget(name: string, p1: boolean): boolean;
declare function RegisterNoirScreenEffectThisFrame(): void;
declare function N_0xa44ff770dfbc5dae(): void;
declare function RegisterNuiCallback(callbackType: string, callback: any): void;
declare function RegisterNuiCallbackType(callbackType: string): void;
declare function RegisterObjectScriptBrain(scriptName: string, modelHash: number, p2: number, activationRange: number, p4: number, p5: number): void;
declare function RegisterPedheadshot(ped: number): number;
declare function RegisterPedheadshotTransparent(ped: number): number;
declare function N_0x953563ce563143af(ped: number): number;
declare function RegisterPedheadshot_3(ped: number): number;
declare function N_0xba8805a1108a2515(ped: number): number;
declare function RegisterRawNuiCallback(callbackType: string, callback: any): void;
declare function RegisterResourceAsEventHandler(eventName: string): void;
declare function RegisterSaveHouse(p0: number, p1: number, p2: number, p3: number, p5: number, p6: number): LuaMultiReturn<[number, number]>;
declare function RegisterScriptWithAudio(p0: number): void;
declare function RegisterStreamingFileFromCache(resourceName: string, fileName: string, cacheString: string): void;
declare function RegisterStreamingFileFromKvs(kvsKey: string): void;
declare function RegisterStreamingFileFromUrl(registerAs: string, url: string): void;
declare function RegisterSynchronisedScriptSpeech(): void;
declare function RegisterTarget(ped: number, target: number): void;
declare function RegisterTextLabelToSave(name: string): number;
declare function RegisterTextLabelToSave_2(name: string): number;
declare function N_0x6f7794f28c6b2535(name: string): number;
declare function RegisterWorldPointScriptBrain(scriptName: string, activationRange: number, p2: number): void;
declare function ReleaseAllCommerceItemImages(): void;
declare function N_0x72d0706cd6ccdb58(): void;
declare function ReleaseAmbientAudioBank(): void;
declare function ReleaseBinkMovie(binkMovie: number): void;
declare function ReleaseControlOfFrontend(): void;
declare function N_0x14621bb1df14e2b2(): void;
declare function ReleaseMissionAudioBank(): void;
declare function ReleaseMovieMeshSet(movieMeshSet: number): void;
declare function ReleaseNamedRendertarget(name: string): boolean;
declare function ReleaseNamedScriptAudioBank(audioBank: string): void;
declare function ReleasePedPreloadPropData(ped: number): void;
declare function N_0xf79f9def0aade61a(ped: number): void;
declare function ReleasePedPreloadVariationData(ped: number): void;
declare function N_0x5aab586ffec0fd96(ped: number): void;
declare function ReleasePedheadshotImgUpload(id: number): void;
declare function N_0x5d517b27cf6ecd04(id: number): void;
declare function ReleasePreloadMods(vehicle: number): void;
declare function ReleaseScriptAudioBank(): void;
declare function ReleaseScriptGuidFromEntity(entity: number): void;
declare function N_0x2b3334bca57cd799(entity: number): void;
declare function ShapeTestResultEntity(entity: number): void;
declare function ReleaseSoundId(soundId: number): void;
declare function ReleaseWeaponAudio(): void;
declare function RemoteCheatDetected(): boolean;
declare function N_0x472841a026d26d8b(): boolean;
declare function RemoveActionModeAsset(asset: string): void;
declare function RemoveAirDefenseZone(zoneId: number): boolean;
declare function N_0x0abf535877897560(zoneId: number): boolean;
declare function RemoveAllAirDefenseZones(): void;
declare function N_0x1e45b34adebee48e(): void;
declare function RemoveAllCoverBlockingAreas(): void;
declare function RemoveAllPedWeapons(ped: number, p1: boolean): void;
declare function RemoveAllPickupsOfType(pickupHash: number): void;
declare function RemoveAllProjectilesOfType(weaponHash: number, explode: boolean): void;
declare function RemoveAllShockingEvents(p0: boolean): void;
declare function RemoveAllStickyBombsFromEntity(entity: number): void;
declare function N_0x715135f4b82ac90d(entity: number): void;
declare function RemoveAnimDict(animDict: string): void;
declare function RemoveAnimSet(animSet: string): void;
declare function RemoveBlip(blip: number): void;
declare function RemoveClipSet(clipSet: string): void;
declare function RemoveCoverPoint(coverpoint: number): void;
declare function RemoveCurrentRise(p0: number): void;
declare function N_0xb1252e3e59a82aaf(p0: number): void;
declare function RemoveCutFile(cutsceneName: string): void;
declare function N_0xd00d76a7dfc9d852(cutsceneName: string): void;
declare function RemoveCutscene(): void;
declare function RemoveDecal(decal: number): void;
declare function RemoveDecalsFromObject(obj: number): void;
declare function RemoveDecalsFromObjectFacing(obj: number, x: number, y: number, z: number): void;
declare function RemoveDecalsFromVehicle(vehicle: number): void;
declare function RemoveDecalsInRange(x: number, y: number, z: number, range: number): void;
declare function RemoveDispatchSpawnBlockingArea(p0: number): void;
declare function RemoveDoorFromSystem(doorHash: number): void;
declare function RemoveDryVolume(handle: number): void;
declare function RemoveEntityFromAudioMixGroup(entity: number, p1: number): void;
declare function N_0x18eb48cfc41f2ea0(entity: number, p1: number): void;
declare function RemoveForcedObject(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function RemoveFromItemset(p0: number, p1: number): void;
declare function RemoveGroup(groupId: number): void;
declare function RemoveIpl(iplName: string): void;
declare function RemoveModelFromCreatorBudget(modelHash: number): void;
declare function N_0xf086ad9354fac3a3(modelHash: number): void;
declare function RemoveModelHide(x: number, y: number, z: number, radius: number, model: number, p5: boolean): void;
declare function RemoveModelSwap(x: number, y: number, z: number, radius: number, originalModel: number, newModel: number, p6: boolean): void;
declare function RemoveMpGamerTag(gamerTagId: number): void;
declare function N_0x31698aa80e0223f8(gamerTagId: number): void;
declare function RemoveMultiplayerBankCash(): void;
declare function RemoveMultiplayerHudCash(): void;
declare function RemoveMultiplayerWalletCash(): void;
declare function N_0x95cf81bd06ee1887(): void;
declare function RemoveNamedPtfxAsset(fxName: string): void;
declare function RemoveNavmeshBlockingObject(p0: number): void;
declare function RemoveNavmeshRequiredRegions(): void;
declare function RemoveObjectHighDetailModel(object: number): void;
declare function N_0x4a39db43e47cf3aa(object: number): void;
declare function RemoveParticleFx(ptfxHandle: number, p1: boolean): void;
declare function RemoveParticleFxFromEntity(entity: number): void;
declare function RemoveParticleFxInRange(X: number, Y: number, Z: number, radius: number): void;
declare function RemovePedDefensiveArea(ped: number, toggle: boolean): void;
declare function RemovePedElegantly(ped: number): void;
declare function RemovePedFromGroup(ped: number): void;
declare function RemovePedHelmet(ped: number, instantly: boolean): void;
declare function RemovePedPreferredCoverSet(ped: number): void;
declare function N_0xfddb234cf74073d9(ped: number): void;
declare function RemovePickUpRopeForCargobob(cargobob: number): void;
declare function RetractCargobobHook(cargobob: number): void;
declare function RemovePickup(pickup: number): void;
declare function RemovePlayerHelmet(player: number, p2: boolean): void;
declare function RemovePopMultiplierArea(id: number, p1: boolean): void;
declare function N_0xb129e447a2eda4bf(id: number, p1: boolean): void;
declare function RemovePopMultiplierSphere(id: number, p1: boolean): void;
declare function N_0xe6869becdd8f2403(id: number, p1: boolean): void;
declare function RemovePortalSettingsOverride(p0: string): void;
declare function N_0xb4bbfd9cd8b3922b(p0: string): void;
declare function RemovePtfxAsset(): void;
declare function RemoveRelationshipGroup(groupHash: number): void;
declare function RemoveReplaceTexture(origTxd: string, origTxn: string): void;
declare function RemoveRoadNodeSpeedZone(speedzone: number): boolean;
declare function N_0x1033371fc8e842a7(speedzone: number): boolean;
declare function RemoveSpeedZone(speedzone: number): boolean;
declare function RemoveScaleformScriptHudMovie(hudComponent: number): void;
declare function N_0xf44a5456ac3f4f97(hudComponent: number): void;
declare function RemoveScenarioBlockingArea(p0: number, p1: boolean): void;
declare function RemoveScenarioBlockingAreas(): void;
declare function RemoveScriptFire(fireHandle: number): void;
declare function RemoveShockingEvent(event: number): boolean;
declare function RemoveShockingEventSpawnBlockingAreas(): void;
declare function RemoveStateBagChangeHandler(cookie: number): void;
declare function RemoveStealthKill(hash: number, p1: boolean): void;
declare function N_0xa6a12939f16d85be(hash: number, p1: boolean): void;
declare function RemoveStealthModeAsset(asset: string): void;
declare function RemoveTcmodifierOverride(p0: string): void;
declare function N_0x15e33297c3e8dc60(p0: string): void;
declare function RemoveTimecycleModifier(modifierName: string): void;
declare function RemoveTimecycleModifierVar(modifierName: string, varName: string): void;
declare function RemoveVehicleAsset(vehicleAsset: number): void;
declare function RemoveVehicleCombatAvoidanceArea(p0: number): void;
declare function N_0xe30524e1871f481d(p0: number): void;
declare function RemoveVehicleCrewEmblem(vehicle: number, p1: number): void;
declare function N_0xd2300034310557e4(vehicle: number, p1: number): void;
declare function RemoveVehicleHighDetailModel(vehicle: number): void;
declare function RemoveVehicleMod(vehicle: number, modType: number): void;
declare function RemoveVehicleRecording(recording: number, script: string): void;
declare function RemoveVehicleShadowEffect(vehicle: number): void;
declare function N_0xf87d9f2301f7d206(vehicle: number): void;
declare function RemoveVehicleStuckCheck(vehicle: number): void;
declare function RemoveVehicleUpsidedownCheck(vehicle: number): void;
declare function RemoveVehicleWindow(vehicle: number, windowIndex: number): void;
declare function RemoveVehiclesFromGeneratorsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, unk: number): void;
declare function RemoveWarningMessageListItems(): void;
declare function N_0x6ef54ab721dc6242(): void;
declare function RemoveWaypointRecording(name: string): void;
declare function RemoveWeaponAsset(weaponHash: number): void;
declare function RemoveWeaponComponentFromPed(ped: number, weaponHash: number, componentHash: number): void;
declare function RemoveWeaponComponentFromWeaponObject(weaponObject: number, addonHash: number): void;
declare function RemoveWeaponFromPed(ped: number, weaponHash: number): void;
declare function RenderFakePickupGlow(x: number, y: number, z: number, colorIndex: number): void;
declare function N_0x3430676b11cdf21d(x: number, y: number, z: number, colorIndex: number): void;
declare function HighlightPlacementCoords(x: number, y: number, z: number, colorIndex: number): void;
declare function RenderScriptCams(render: boolean, ease: boolean, easeTime: number, p3: boolean, p4: boolean): void;
declare function ReplaceHudColour(hudColorIndex: number, hudColorIndex2: number): void;
declare function N_0x1ccc708f0f850613(hudColorIndex: number, hudColorIndex2: number): void;
declare function SetHudColoursSwitch(hudColorIndex: number, hudColorIndex2: number): void;
declare function ReplaceHudColourWithRgba(hudColorIndex: number, r: number, g: number, b: number, a: number): void;
declare function N_0xf314cf4f0211894e(hudColorIndex: number, r: number, g: number, b: number, a: number): void;
declare function SetHudColour(hudColorIndex: number, r: number, g: number, b: number, a: number): void;
declare function ReplayFreeCamGetMaxRange(): number;
declare function N_0x8bfceb5ea1b161b6(): number;
declare function ReportCrime(player: number, crimeType: number, wantedLvlThresh: number): void;
declare function ReportPoliceSpottedPlayer(player: number): void;
declare function N_0xdc64d2c53493ed12(player: number): void;
declare function RequestActionModeAsset(asset: string): void;
declare function RequestAdditionalCollisionAtCoord(x: number, y: number, z: number): void;
declare function RequestAdditionalText(gxt: string, slot: number): void;
declare function RequestAdditionalTextForDlc(gxt: string, slot: number): void;
declare function RequestAdditionalText_2(gxt: string, slot: number): void;
declare function RequestAmbientAudioBank(p0: string, p1: boolean): boolean;
declare function RequestAnimDict(animDict: string): void;
declare function RequestAnimSet(animSet: string): void;
declare function RequestClipSet(clipSet: string): void;
declare function RequestCollisionAtCoord(x: number, y: number, z: number): void;
declare function RequestCollisionForModel(model: number): void;
declare function RequestCommerceItemImage(index: number): boolean;
declare function N_0xa2f952104fc6dd4b(index: number): boolean;
declare function RequestCutFile(cutsceneName: string): void;
declare function N_0x06a3524161c502ba(cutsceneName: string): void;
declare function RequestCutscene(cutsceneName: string, flags: number): void;
declare function RequestCutsceneWithPlaybackList(cutsceneName: string, playbackFlags: number, flags: number): void;
declare function N_0xc23de0e91c30b58c(cutsceneName: string, playbackFlags: number, flags: number): void;
declare function RequestCutsceneEx(cutsceneName: string, playbackFlags: number, flags: number): void;
declare function RequestIpl(iplName: string): void;
declare function RequestMenuPedModel(model: number): void;
declare function N_0xa0261aef7acfc51e(model: number): void;
declare function RequestMissionAudioBank(p0: string, p1: boolean): boolean;
declare function RequestModel(model: number): void;
declare function RequestModelsInRoom(interior: number, roomName: string): void;
declare function N_0x8a7a40100edfec58(interior: number, roomName: string): void;
declare function RequestInteriorRoomByName(interior: number, roomName: string): void;
declare function RequestNamedPtfxAsset(fxName: string): void;
declare function RequestPathsPreferAccurateBoundingstruct(x1: number, y1: number, x2: number, y2: number): boolean;
declare function N_0x07fb139b592fa687(x1: number, y1: number, x2: number, y2: number): boolean;
declare function RequestPedVehicleVisibilityTracking(ped: number, p1: boolean): void;
declare function GetPedFloodInvincibility(ped: number, p1: boolean): void;
declare function RequestPedVisibilityTracking(ped: number): void;
declare function N_0x7d7a2e43e74e2eb8(ped: number): void;
declare function RequestPedheadshotImgUpload(id: number): boolean;
declare function N_0xf0daef2f545bee25(id: number): boolean;
declare function RequestPtfxAsset(): void;
declare function RequestResourceFileSet(setName: string): boolean;
declare function RequestScaleformMovie(scaleformName: string): number;
declare function RequestScaleformMovieInstance(scaleformName: string): number;
declare function RequestScaleformMovieInteractive(scaleformName: string): number;
declare function RequestScaleformMovie3(scaleformName: string): number;
declare function RequestScaleformMovie_2(scaleformName: string): number;
declare function N_0x65e7e78842e74cdb(scaleformName: string): number;
declare function RequestScaleformScriptHudMovie(hudComponent: number): void;
declare function N_0x9304881d6f6537ea(hudComponent: number): void;
declare function RequestHudScaleform(hudComponent: number): void;
declare function RequestScript(scriptName: string): void;
declare function RequestScriptAudioBank(p0: string, p1: boolean): boolean;
declare function RequestScriptWithNameHash(scriptHash: number): void;
declare function RequestStreamedScript(scriptHash: number): void;
declare function RequestStealthModeAsset(asset: string): void;
declare function RequestStreamedTextureDict(textureDict: string, p1: boolean): void;
declare function RequestTaskMoveNetworkStateTransition(ped: number, name: string): boolean;
declare function N_0xd01015c7316ae176(ped: number, name: string): boolean;
declare function RequestVehicleAsset(vehicleHash: number, vehicleAsset: number): void;
declare function RequestVehicleDashboardScaleformMovie(vehicle: number): void;
declare function N_0xdba3c090e3d74690(vehicle: number): void;
declare function RequestVehicleHighDetailModel(vehicle: number): void;
declare function RequestVehicleRecording(recording: number, script: string): void;
declare function RequestWaypointRecording(name: string): void;
declare function RequestWeaponAsset(weaponHash: number, p1: number, p2: number): void;
declare function RequestWeaponHighDetailModel(weaponObject: number): void;
declare function ReserveNetworkLocalObjects(amount: number): void;
declare function N_0x797f9c5e661d920e(amount: number): void;
declare function ReserveNetworkLocalPeds(amount: number): void;
declare function N_0x2c8df5d129595281(amount: number): void;
declare function ReserveNetworkLocalVehicles(amount: number): void;
declare function N_0x42613035157e4208(amount: number): void;
declare function ReserveNetworkMissionObjects(amount: number): void;
declare function ReserveNetworkMissionPeds(amount: number): void;
declare function ReserveNetworkMissionVehicles(amount: number): void;
declare function ResetAiMeleeWeaponDamageModifier(): void;
declare function ResetAiWeaponDamageModifier(): void;
declare function ResetBenchmarkRecording(): void;
declare function N_0x437138b6a830166a(): void;
declare function ResetDeepOceanScaler(): void;
declare function N_0x5e5e99285ae812db(): void;
declare function ResetWavesIntensity(): void;
declare function ResetCurrentIntensity(): void;
declare function ResetDispatchIdealSpawnDistance(): void;
declare function ResetDispatchSpawnBlockingAreas(): void;
declare function ResetDispatchSpawnLocation(): void;
declare function ResetDispatchTimeBetweenSpawnAttempts(p0: number): void;
declare function ResetEditorValues(): void;
declare function N_0x3353d13f09307691(): void;
declare function ResetEntityAlpha(entity: number): void;
declare function ResetExclusiveScenarioGroup(): void;
declare function ResetExtraTimecycleModifierStrength(): void;
declare function N_0x2bf72ad5b41aa739(): void;
declare function ResetFlyThroughWindscreenParams(): void;
declare function ResetGhostedEntityAlpha(): void;
declare function N_0x17330ebf2f2124a8(): void;
declare function ResetGlobalActionscriptFlag(flagIndex: number): void;
declare function N_0xb99c4e4d9499df29(flagIndex: number): void;
declare function ResetGroupFormationDefaultSpacing(groupHandle: number): void;
declare function ResetHudComponentValues(id: number): void;
declare function ResetInputMappingScheme(): void;
declare function N_0x643ed62d5ea3bebd(): void;
declare function ResetMapZoomDataLevel(index: number): void;
declare function ResetMapdataEntityMatrix(mapDataHash: number, entityInternalIdx: number): boolean;
declare function ResetParticleFxOverride(name: string): void;
declare function N_0x89c8553dd3274aae(name: string): void;
declare function ResetParticleFxAssetOldToNew(name: string): void;
declare function ResetPausedRenderphases(): void;
declare function N_0xe1c8709406f2c41c(): void;
declare function ResetPedAudioFlags(ped: number): void;
declare function ResetPedInVehicleContext(ped: number): void;
declare function ResetPedLastVehicle(ped: number): void;
declare function ResetPedModelPersonality(modelHash: number): void;
declare function ResetPedMovementClipset(ped: number, transitionSpeed: number): void;
declare function ResetPedRagdollTimer(ped: number): void;
declare function ResetPedStrafeClipset(ped: number): void;
declare function ResetPedVisibleDamage(ped: number): void;
declare function ResetPedWeaponMovementClipset(ped: number): void;
declare function ResetPlayerArrestState(player: number): void;
declare function ResetPlayerInputGait(player: number): void;
declare function ResetPlayerStamina(player: number): void;
declare function ResetReticuleValues(): void;
declare function ResetScenarioGroupsEnabled(): void;
declare function ResetScenarioTypesEnabled(): void;
declare function ResetScriptGfxAlign(): void;
declare function N_0xe3a3db414a373dab(): void;
declare function ScreenDrawPositionEnd(): void;
declare function ResetTrevorRage(): void;
declare function ResetVehiclePedsCanStandOnTopFlag(vehicle: number): void;
declare function ResetVehicleStuckTimer(vehicle: number, nullAttributes: number): void;
declare function ResetVehicleWheels(vehicle: number, toggle: boolean): void;
declare function ResetWantedLevelDifficulty(player: number): void;
declare function ResetWater(): void;
declare function ResetWorldBoundaryForPlayer(): void;
declare function RestartFrontendMenu(menuHash: number, p1: number): void;
declare function RestartGame(): void;
declare function N_0xe574a662acaefbb1(): void;
declare function RestartScriptedConversation(): void;
declare function RestorePlayerStamina(player: number, percentage: number): void;
declare function ResurrectPed(ped: number): void;
declare function ReturnTwo(p0: number): number;
declare function N_0x40afb081f8add4ee(p0: number): number;
declare function ReviveInjuredPed(ped: number): void;
declare function RockstarMessageGetString(): string;
declare function N_0xdf649c4e9afdd788(): string;
declare function RollDownWindow(vehicle: number, windowIndex: number): void;
declare function RollDownWindows(vehicle: number): void;
declare function RollUpWindow(vehicle: number, windowIndex: number): void;
declare function RopeAreTexturesLoaded(): boolean;
declare function RopeConvertToSimple(ropeId: number): void;
declare function RopeDrawShadowEnabled(toggle: boolean): number;
declare function RopeForceLength(ropeId: number, length: number): void;
declare function RopeGetDistanceBetweenEnds(ropeId: number): number;
declare function GetRopeLength(ropeId: number): number;
declare function RopeLoadTextures(): void;
declare function RopeResetLength(ropeId: number, length: number): void;
declare function RopeSetUpdateOrder(ropeId: number, p1: number): void;
declare function N_0xdc57a637a20006ed(ropeId: number, p1: number): void;
declare function RopeSetUpdatePinverts(ropeId: number): void;
declare function RopeUnloadTextures(): void;
declare function Round(value: number): number;
declare function SaveBenchmarkRecording(): void;
declare function N_0x37deb0aa183fb6d8(): void;
declare function SaveHighQualityPhoto(unused: number): boolean;
declare function N_0x3dec726c25a11bac(unused: number): boolean;
declare function SaveRecordingClip(): boolean;
declare function N_0x644546ec5287471b(): boolean;
declare function ScEmailMessageClearRecipList(): void;
declare function N_0x55df6db45179236e(): void;
declare function ScEmailMessagePushGamerToRecipList(networkHandle: number): void;
declare function ScGamerdataGetBool(name: string): boolean;
declare function N_0x8416fe4e4629d7d7(name: string): boolean;
declare function ScGetIsProfileAttributeSet(name: string): boolean;
declare function ScGamerdataGetFloat(name: string, outValue: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xa770c8eec6fb2ac5(name: string, outValue: number): LuaMultiReturn<[boolean, number]>;
declare function ScGamerdataGetInt(name: string, outValue: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xc85a7127e7ad02aa(name: string, outValue: number): LuaMultiReturn<[boolean, number]>;
declare function ScGetHasAchievementBeenPassed(achievement: number): boolean;
declare function N_0x418dc16fae452c1c(achievement: number): boolean;
declare function ScGetNickname(): string;
declare function ScInboxGetEmails(offset: number, limit: number): void;
declare function N_0x040addcbafa1018a(offset: number, limit: number): void;
declare function ScInboxGetMessageIsReadAtIndex(msgIndex: number): boolean;
declare function N_0x93028f1db42bfd08(msgIndex: number): boolean;
declare function IsScInboxValid(msgIndex: number): boolean;
declare function ScInboxGetMessageTypeAtIndex(msgIndex: number): number;
declare function N_0xbb8ea16ecbc976c4(msgIndex: number): number;
declare function ScInboxMessageInit(msgIndex: number): number;
declare function ScInboxGetTotalNumMessages(): number;
declare function N_0x03a93ff1a2ca0864(): number;
declare function GetTotalScInboxIds(): number;
declare function ScInboxMessageDoApply(p0: number): boolean;
declare function N_0x9a2c8064b6c1e41a(p0: number): boolean;
declare function ScInboxMessagePush(p0: number): boolean;
declare function ScInboxMessageGetBountyData(index: number, outData: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x87e0052f08bd64e6(index: number, outData: number): LuaMultiReturn<[boolean, number]>;
declare function ScInboxMessageGetDataBool(p0: number, p1: string): boolean;
declare function N_0xffe5c16f402d851d(p0: number, p1: string): boolean;
declare function ScInboxMessageGetDataInt(p0: number, context: string, out: number): LuaMultiReturn<[boolean, number]>;
declare function ScInboxMessageGetDataString(p0: number, context: string, out: string): boolean;
declare function ScInboxMessageGetString(p0: number): string;
declare function N_0xf3e31d16cbdcb304(p0: number): string;
declare function ScInboxMessageGetUgcdata(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
declare function ScInboxMessagePop(p0: number): boolean;
declare function N_0x2c015348cf19ca1d(p0: number): boolean;
declare function ScInboxMessagePushGamerToEventRecipList(networkHandle: number): void;
declare function N_0xda024bdbd600f44a(networkHandle: number): void;
declare function ScInboxMessageSendBountyPresenceEvent(data: string): boolean;
declare function N_0x6afd2cd753feef83(data: string): boolean;
declare function ScInboxMessageSendUgcStatUpdateEvent(data: string): void;
declare function N_0xa68d3d229f4f3b06(data: string): void;
declare function ScLicenseplateAdd(plateText: string, plateData: string, tokenOut: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x1989c6e6f67e76a8(plateText: string, plateData: string, tokenOut: number): LuaMultiReturn<[boolean, number]>;
declare function ScLicenseplateGetAddIsPending(token: number): boolean;
declare function N_0x07c61676e5bb52cd(token: number): boolean;
declare function ScLicenseplateGetAddStatus(token: number): number;
declare function N_0x8147fff6a718e1ad(token: number): number;
declare function ScLicenseplateGetCount(token: number): number;
declare function N_0x700569dba175a77c(token: number): number;
declare function ScLicenseplateGetIsvalidIsPending(token: number): boolean;
declare function N_0xd302e99edf0449cf(token: number): boolean;
declare function ScLicenseplateGetIsvalidStatus(token: number): number;
declare function N_0x5c4ebffa98bdb41c(token: number): number;
declare function ScLicenseplateGetPlate(token: number, plateIndex: number): string;
declare function ScLicenseplateGetPlateData(token: number, plateIndex: number): string;
declare function N_0x2e89990ddff670c3(token: number, plateIndex: number): string;
declare function ScLicenseplateIsvalid(plateText: string, tokenOut: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x0f73393bac7e6730(plateText: string, tokenOut: number): LuaMultiReturn<[boolean, number]>;
declare function ScLicenseplateSetPlateData(oldPlateText: string, newPlateText: string, plateData: string): boolean;
declare function N_0xd0ee05fe193646ea(oldPlateText: string, newPlateText: string, plateData: string): boolean;
declare function ScPresenceAttrSetFloat(): boolean;
declare function N_0xc4c4575f62534a24(): boolean;
declare function ScPresenceAttrSetInt(attrHash: number, value: number): boolean;
declare function N_0x1f1e9682483697c7(attrHash: number, value: number): boolean;
declare function ScPresenceAttrSetString(attrHash: number, value: string): boolean;
declare function N_0x287f1f75d2803595(attrHash: number, value: string): boolean;
declare function ScProfanityCheckString(_string: string, token: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x75632c5ecd7ed843(_string: string, token: number): LuaMultiReturn<[boolean, number]>;
declare function ScStartCheckStringTask(_string: string, token: number): LuaMultiReturn<[boolean, number]>;
declare function ScProfanityCheckUgcString(_string: string, token: number): LuaMultiReturn<[boolean, number]>;
declare function N_0xeb2bf817463dfa28(_string: string, token: number): LuaMultiReturn<[boolean, number]>;
declare function ScProfanityGetCheckIsPending(token: number): boolean;
declare function N_0x82e4a58babc15ae7(token: number): boolean;
declare function ScGetCheckStringStatus(token: number): boolean;
declare function ScProfanityGetCheckIsValid(token: number): boolean;
declare function N_0x1753344c770358ae(token: number): boolean;
declare function ScHasCheckStringTaskCompleted(token: number): boolean;
declare function ScProfanityGetStringPassed(token: number): boolean;
declare function N_0x85535acf97fc0969(token: number): boolean;
declare function ScProfanityGetStringStatus(token: number): number;
declare function N_0x930de22f07b1cce3(token: number): number;
declare function ScaleformMovieMethodAddParamBool(value: boolean): void;
declare function PushScaleformMovieFunctionParameterBool(value: boolean): void;
declare function PushScaleformMovieMethodParameterBool(value: boolean): void;
declare function ScaleformMovieMethodAddParamFloat(value: number): void;
declare function PushScaleformMovieFunctionParameterFloat(value: number): void;
declare function PushScaleformMovieMethodParameterFloat(value: number): void;
declare function ScaleformMovieMethodAddParamInt(value: number): void;
declare function PushScaleformMovieFunctionParameterInt(value: number): void;
declare function PushScaleformMovieMethodParameterInt(value: number): void;
declare function ScaleformMovieMethodAddParamLatestBriefString(value: number): void;
declare function N_0xec52c631a1831c03(value: number): void;
declare function ScaleformMovieMethodAddParamIntString(value: number): void;
declare function ScaleformMovieMethodAddParamPlayerNameString(_string: string): void;
declare function N_0xe83a3e3557a56640(_string: string): void;
declare function PushScaleformMovieMethodParameterButtonName(_string: string): void;
declare function ScaleformMovieMethodAddParamTextureNameString(_string: string): void;
declare function PushScaleformMovieFunctionParameterString(_string: string): void;
declare function PushScaleformMovieMethodParameterString(_string: string): void;
declare function ScaleformMovieMethodAddParamTextureNameString_2(_string: string): void;
declare function N_0x77fe3402004cd1b0(_string: string): void;
declare function PushScaleformMovieMethodParameterString_2(_string: string): void;
declare function ScriptIsMovingMobilePhoneOffscreen(toggle: boolean): void;
declare function ScriptRaceGetPlayerSplitTime(player: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x8ef5573a1f801a5c(player: number): LuaMultiReturn<[boolean, number, number]>;
declare function ScriptRaceInit(p0: number, p1: number, p2: number, p3: number): void;
declare function N_0x0a60017f841a54f2(p0: number, p1: number, p2: number, p3: number): void;
declare function ScriptRaceShutdown(): void;
declare function N_0x1ff6bf9a63e5757f(): void;
declare function ScriptThreadIteratorGetNextThreadId(): number;
declare function N_0x30b4fa1c82dd4b9f(): number;
declare function GetIdOfNextThreadInEnumeration(): number;
declare function ScriptThreadIteratorReset(): void;
declare function N_0xdadfada5a20143a8(): void;
declare function BeginEnumeratingThreads(): void;
declare function SeethroughGetMaxThickness(): number;
declare function SeethroughReset(): void;
declare function SeethroughSetColorNear(red: number, green: number, blue: number): void;
declare function N_0x1086127b3a63505e(red: number, green: number, blue: number): void;
declare function SeethroughSetFadeEndDistance(distance: number): void;
declare function N_0x9d75795b9dc6ebbf(distance: number): void;
declare function SeethroughSetFadeStartDistance(distance: number): void;
declare function N_0xa78de25577300ba1(distance: number): void;
declare function SeethroughSetHeatscale(index: number, heatScale: number): void;
declare function N_0xd7d0b00177485411(index: number, heatScale: number): void;
declare function SeethroughSetHiLightIntensity(intensity: number): void;
declare function N_0x19e50eb6e33e1d28(intensity: number): void;
declare function SeethroughSetHiLightNoise(noise: number): void;
declare function N_0x1636d7fc127b10d2(noise: number): void;
declare function SeethroughSetMaxThickness(thickness: number): void;
declare function N_0x0c8fac83902a62df(thickness: number): void;
declare function SeethroughSetNoiseAmountMax(amount: number): void;
declare function N_0xfebfbfdfb66039de(amount: number): void;
declare function SeethroughSetNoiseAmountMin(amount: number): void;
declare function N_0xff5992e1c9e65d05(amount: number): void;
declare function SelectEntityAtCursor(hitFlags: number, precise: boolean): number;
declare function SelectEntityAtPos(fracX: number, fracY: number, hitFlags: number, precise: boolean): number;
declare function SendDuiMessage(duiObject: number, jsonString: string): void;
declare function SendDuiMouseDown(duiObject: number, button: string): void;
declare function SendDuiMouseMove(duiObject: number, x: number, y: number): void;
declare function SendDuiMouseUp(duiObject: number, button: string): void;
declare function SendDuiMouseWheel(duiObject: number, deltaY: number, deltaX: number): void;
declare function SendLoadingScreenMessage(jsonString: string): boolean;
declare function SendNuiMessage(jsonString: string): boolean;
declare function SetAbilityBarValue(value: number, maxValue: number): void;
declare function SetAbilityBarVisibilityInMultiplayer(visible: boolean): void;
declare function SetAchievementProgress(achievement: number, progress: number): boolean;
declare function N_0xc2afffdabbdc2c5c(achievement: number, progress: number): boolean;
declare function SetAchievementProgression(achievement: number, progress: number): boolean;
declare function SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(object: number, toggle: boolean): void;
declare function SetAggressiveHorns(toggle: boolean): void;
declare function SetAiGlobalPathNodesType(_type: number): void;
declare function SetAiMeleeWeaponDamageModifier(modifier: number): void;
declare function SetAiWeaponDamageModifier(value: number): void;
declare function SetAimCooldown(value: number): void;
declare function SetAirDragMultiplierForPlayersVehicle(player: number, multiplier: number): void;
declare function SetAllLowPriorityVehicleGeneratorsActive(active: boolean): void;
declare function SetAllPathsCacheBoundingstruct(toggle: boolean): void;
declare function N_0x228e5c6ad4d74bfd(toggle: boolean): void;
declare function SetAllRandomPedsFlee(player: number, toggle: boolean): void;
declare function SetAllRandomPedsFleeThisFrame(player: number): void;
declare function SetAllVehicleGeneratorsActive(): void;
declare function SetAllVehicleGeneratorsActiveInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: boolean, p7: boolean): void;
declare function SetAllowAbilityBarInMultiplayer(toggle: boolean): void;
declare function SetAmbientPedRangeMultiplierThisFrame(multiplier: number): void;
declare function N_0x0b919e1fb47cc4e0(multiplier: number): void;
declare function SetAmbientPedsDropMoney(p0: boolean): void;
declare function N_0x6b0e6172c9a4d902(p0: boolean): void;
declare function SetAmbientVehicleRangeMultiplierThisFrame(range: number): void;
declare function N_0x90b6da738a9a25da(range: number): void;
declare function SetSomeVehicleDensityMultiplierThisFrame(range: number): void;
declare function SetAmbientVoiceName(ped: number, name: string): void;
declare function SetAmbientVoiceNameHash(ped: number, hash: number): void;
declare function N_0x9a53ded9921de990(ped: number, hash: number): void;
declare function SetAmbientZoneListState(p0: string, p1: boolean, p2: boolean): void;
declare function SetAmbientZoneListStatePersistent(ambientZone: string, p1: boolean, p2: boolean): void;
declare function SetAmbientZoneState(zoneName: string, p1: boolean, p2: boolean): void;
declare function SetAmbientZoneStatePersistent(ambientZone: string, p1: boolean, p2: boolean): void;
declare function SetAmmoInClip(ped: number, weaponHash: number, ammo: number): boolean;
declare function SetAnimLooped(p0: number, p1: boolean, p2: number, p3: boolean): void;
declare function SetAnimPhase(entity: number, p1: number, p2: number, p3: boolean): void;
declare function N_0xddf3cb5a0a4c0b49(entity: number, p1: number, p2: number, p3: boolean): void;
declare function SetAnimPlaybackTime(entity: number, p1: number, p2: number, p3: boolean): void;
declare function SetAnimRate(p0: number, p1: number, p2: number, p3: boolean): void;
declare function SetAnimWeight(p0: number, p1: number, p2: number, p3: number, p4: boolean): void;
declare function SetAnimalMood(animal: number, mood: number): void;
declare function SetArtificialLightsState(state: boolean): void;
declare function SetBlackout(state: boolean): void;
declare function SetArtificialLightsStateAffectsVehicles(toggle: boolean): void;
declare function SetAudioFlag(flagName: string, toggle: boolean): void;
declare function SetAudioSceneVariable(scene: string, variable: string, value: number): void;
declare function SetAudioScriptCleanupTime(time: number): void;
declare function N_0xa5f377b175a699c5(time: number): void;
declare function SetAudioSpecialEffectMode(mode: number): void;
declare function N_0x12561fcbb62d5b9c(mode: number): void;
declare function SetAudioSubmixEffectParamFloat(submixId: number, effectSlot: number, paramIndex: number, paramValue: number): void;
declare function SetAudioSubmixEffectParamInt(submixId: number, effectSlot: number, paramIndex: number, paramValue: number): void;
declare function SetAudioSubmixEffectRadioFx(submixId: number, effectSlot: number): void;
declare function SetAudioSubmixOutputVolumes(submixId: number, outputSlot: number, frontLeftVolume: number, frontRightVolume: number, rearLeftVolume: number, rearRightVolume: number, channel5Volume: number, channel6Volume: number): void;
declare function SetAudioVehiclePriority(vehicle: number, p1: number): void;
declare function SetAutoGiveParachuteWhenEnterPlane(player: number, toggle: boolean): void;
declare function SetAutoGiveScubaGearWhenExitVehicle(player: number, toggle: boolean): void;
declare function N_0xd2b315b6689d537d(player: number, toggle: boolean): void;
declare function SetBackfaceculling(toggle: boolean): void;
declare function N_0x23ba6b0c2ad7b0d3(toggle: boolean): void;
declare function SetBalanceAddMachine(contentId: string, contentTypeName: string): boolean;
declare function SetBalanceAddMachines(dataCount: number, contentTypeName: string): LuaMultiReturn<[boolean, number]>;
declare function SetBeastModeActive(player: number): void;
declare function N_0x438822c279b73b93(player: number): void;
declare function SetBigmapActive(toggleBigMap: boolean, showFullMap: boolean): void;
declare function SetRadarBigmapEnabled(toggleBigMap: boolean, showFullMap: boolean): void;
declare function SetBikeOnStand(vehicle: number, x: number, y: number): void;
declare function SetBikeLeanAngle(vehicle: number, x: number, y: number): void;
declare function SetBinkMovie(name: string): number;
declare function SetBinkMovieRequested(name: string): number;
declare function SetBinkMovieTime(binkMovie: number, progress: number): void;
declare function SetBinkMovieProgress(binkMovie: number, progress: number): void;
declare function SetBinkMovieUnk_2(binkMovie: number, p1: boolean): void;
declare function SetBinkMovieVolume(binkMovie: number, value: number): void;
declare function SetBinkMovieUnk(binkMovie: number, value: number): void;
declare function SetBinkShouldSkip(binkMovie: number, shouldSkip: boolean): void;
declare function N_0x6805d58caa427b72(binkMovie: number, shouldSkip: boolean): void;
declare function SetBit(offset: number): number;
declare function SetBitsInRange(rangeStart: number, rangeEnd: number, p3: number): number;
declare function SetBlipAlpha(blip: number, alpha: number): void;
declare function SetBlipAsFriendly(blip: number, toggle: boolean): void;
declare function SetBlipAsMissionCreatorBlip(blip: number, toggle: boolean): void;
declare function SetBlipAsShortRange(blip: number, toggle: boolean): void;
declare function SetBlipBright(blip: number, toggle: boolean): void;
declare function SetBlipCategory(blip: number, index: number): void;
declare function SetBlipColour(blip: number, color: number): void;
declare function SetBlipCoords(blip: number, posX: number, posY: number, posZ: number): void;
declare function SetBlipDisplay(blip: number, displayId: number): void;
declare function SetBlipDisplayIndicatorOnBlip(blip: number, toggle: boolean): void;
declare function N_0xc4278f70131baa6d(blip: number, toggle: boolean): void;
declare function SetBlipFade(blip: number, opacity: number, duration: number): void;
declare function SetBlipFlashInterval(blip: number, interval: number): void;
declare function SetBlipFlashTimer(blip: number, duration: number): void;
declare function SetBlipFlashes(blip: number, toggle: boolean): void;
declare function SetBlipFlashesAlternate(blip: number, toggle: boolean): void;
declare function SetBlipHiddenOnLegend(blip: number, toggle: boolean): void;
declare function N_0x54318c915d27e4ce(blip: number, toggle: boolean): void;
declare function SetBlipHighDetail(blip: number, toggle: boolean): void;
declare function SetBlipNameFromTextFile(blip: number, gxtEntry: string): void;
declare function SetBlipNameToPlayerName(blip: number, player: number): void;
declare function SetBlipPriority(blip: number, priority: number): void;
declare function SetBlipRotation(blip: number, rotation: number): void;
declare function SetBlipRoute(blip: number, enabled: boolean): void;
declare function SetBlipRouteColour(blip: number, colour: number): void;
declare function SetBlipScale(blip: number, scale: number): void;
declare function SetBlipScaleTransformation(blip: number, xScale: number, yScale: number): void;
declare function SetBlipSecondaryColour(blip: number, r: number, g: number, b: number): void;
declare function SetBlipShowCone(blip: number, toggle: boolean): void;
declare function SetBlipShrink(blip: number, toggle: boolean): void;
declare function N_0x2b6d467dab714e8d(blip: number, toggle: boolean): void;
declare function SetBlipSprite(blip: number, spriteId: number): void;
declare function SetBlipSquaredRotation(blip: number, heading: number): void;
declare function N_0xa8b6afdac320ac87(blip: number, heading: number): void;
declare function SetBlockingOfNonTemporaryEvents(ped: number, toggle: boolean): void;
declare function SetBoatAnchor(vehicle: number, toggle: boolean): void;
declare function SetBoatBoomPositionRatio(vehicle: number, ratio: number): void;
declare function N_0xf488c566413b4232(vehicle: number, ratio: number): void;
declare function SetBoatDisableAvoidance(vehicle: number, p1: boolean): void;
declare function N_0x0a6a279f3aa4fd70(vehicle: number, p1: boolean): void;
declare function SetBoatFrozenWhenAnchored(vehicle: number, toggle: boolean): void;
declare function N_0xe3ebaae484798530(vehicle: number, toggle: boolean): void;
declare function SetBoatIsSinking(vehicle: number): void;
declare function N_0xbd32e46aa95c1dd2(vehicle: number): void;
declare function SetBoatSinking(vehicle: number): void;
declare function SetBoatMovementResistance(vehicle: number, value: number): void;
declare function N_0xe842a9398079bd82(vehicle: number, value: number): void;
declare function SetBoatAnchorBuoyancyCoefficient(vehicle: number, value: number): void;
declare function SetBoatSinksWhenWrecked(vehicle: number, toggle: boolean): void;
declare function N_0x8f719973e1445ba2(vehicle: number, toggle: boolean): void;
declare function SetBoatExplodesOnWreckedAction(vehicle: number, toggle: boolean): void;
declare function SetCalmingQuadBounds(waterQuad: number, minX: number, minY: number, maxX: number, maxY: number): boolean;
declare function SetCalmingQuadDampening(calmingQuad: number, dampening: number): boolean;
declare function SetCamActive(cam: number, active: boolean): void;
declare function SetCamActiveWithInterp(camTo: number, camFrom: number, duration: number, easeLocation: number, easeRotation: number): void;
declare function SetCamAffectsAiming(cam: number, toggle: boolean): void;
declare function SetCamAnimCurrentPhase(cam: number, phase: number): void;
declare function SetCamCoord(cam: number, posX: number, posY: number, posZ: number): void;
declare function SetCamDebugName(camera: number, name: string): void;
declare function SetCamDofFnumberOfLens(camera: number, p1: number): void;
declare function N_0x7dd234d6f3914c5b(camera: number, p1: number): void;
declare function SetCamDofFocalLengthMultiplier(camera: number, multiplier: number): void;
declare function N_0x47b595d60664cffa(camera: number, multiplier: number): void;
declare function SetCamDofFocusDistanceBias(camera: number, p1: number): void;
declare function N_0xc669eea5d031b7de(camera: number, p1: number): void;
declare function SetCamDofMaxNearInFocusDistance(camera: number, p1: number): void;
declare function N_0xc3654a441402562d(camera: number, p1: number): void;
declare function SetCamDofMaxNearInFocusDistanceBlendLevel(camera: number, p1: number): void;
declare function N_0x2c654b4943bddf7c(camera: number, p1: number): void;
declare function SetCamDofPlanes(cam: number, p1: number, p2: number, p3: number, p4: number): void;
declare function SetCamDofStrength(cam: number, dofStrength: number): void;
declare function SetCamEffect(p0: number): void;
declare function SetCamFarClip(cam: number, farClip: number): void;
declare function SetCamFarDof(cam: number, farDOF: number): void;
declare function SetCamFov(cam: number, fieldOfView: number): void;
declare function SetCamInheritRollVehicle(cam: number, p1: boolean): void;
declare function SetCamMotionBlurStrength(cam: number, strength: number): void;
declare function SetCamNearClip(cam: number, nearClip: number): void;
declare function SetCamNearDof(cam: number, nearDOF: number): void;
declare function SetCamParams(cam: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, fieldOfView: number, transitionSpeed: number, p9: number, p10: number, rotationOrder: number): void;
declare function SetCamRot(cam: number, rotX: number, rotY: number, rotZ: number, rotationOrder: number): void;
declare function SetCamShakeAmplitude(cam: number, amplitude: number): void;
declare function SetCamSplineDuration(cam: number, timeDuration: number): void;
declare function SetCamSplineNodeEase(cam: number, p1: number, p2: number, p3: number): void;
declare function N_0x83b8201ed82a9a2d(cam: number, p1: number, p2: number, p3: number): void;
declare function SetCamSplineNodeExtraFlags(cam: number, p1: number, flags: number): void;
declare function N_0x7bf1a54ae67ac070(cam: number, p1: number, flags: number): void;
declare function SetCamSplineNodeVelocityScale(cam: number, p1: number, scale: number): void;
declare function N_0xa6385deb180f319f(cam: number, p1: number, scale: number): void;
declare function SetCamSplinePhase(cam: number, p1: number): void;
declare function SetCamSplineSmoothingStyle(cam: number, smoothingStyle: number): void;
declare function N_0xd1b0f412f109ea5d(cam: number, smoothingStyle: number): void;
declare function SetCamUseShallowDofMode(cam: number, toggle: boolean): void;
declare function SetCamViewModeForContext(context: number, viewMode: number): void;
declare function N_0x2a2173e46daecd12(context: number, viewMode: number): void;
declare function SetCamberedWheelsDisabled(vehicle: number, toggle: boolean): void;
declare function N_0x1201e8a3290a3b98(vehicle: number, toggle: boolean): void;
declare function SetCanAttackFriendly(ped: number, toggle: boolean, p2: boolean): void;
declare function SetCanAutoVaultOnEntity(entity: number, toggle: boolean): void;
declare function N_0xe12abe5e3a389a6c(entity: number, toggle: boolean): void;
declare function SetCanClimbOnEntity(entity: number, toggle: boolean): void;
declare function N_0xa80ae305e0a3044f(entity: number, toggle: boolean): void;
declare function SetCanPedEquipAllWeapons(ped: number, toggle: boolean): void;
declare function N_0xeff296097ff1e509(ped: number, toggle: boolean): void;
declare function SetCanPedEquipWeapon(ped: number, weaponHash: number, toggle: boolean): void;
declare function N_0xb4771b9aaf4e68e4(ped: number, weaponHash: number, toggle: boolean): void;
declare function SetCanPedSelectWeapon(ped: number, weaponHash: number, toggle: boolean): void;
declare function SetCanResprayVehicle(vehicle: number, state: boolean): void;
declare function SetCarBootOpen(vehicle: number): void;
declare function N_0xfc40cbf7b90ca77c(vehicle: number): void;
declare function SetCarHighSpeedBumpSeverityMultiplier(multiplier: number): void;
declare function N_0x84fd40f56075e816(multiplier: number): void;
declare function SetCargobobForceDontDetachVehicle(cargobob: number, toggle: boolean): void;
declare function N_0x571feb383f629926(cargobob: number, toggle: boolean): void;
declare function SetCargobobHookCanDetach(cargobob: number, toggle: boolean): void;
declare function SetCargobobHookCanAttach(vehicle: number, toggle: boolean): void;
declare function N_0x94a68da412c4007d(vehicle: number, toggle: boolean): void;
declare function SetCargobobPickupMagnetActive(cargobob: number, isActive: boolean): void;
declare function CargobobMagnetGrabVehicle(cargobob: number, isActive: boolean): void;
declare function SetCargobobPickupMagnetEffectRadius(vehicle: number, p1: number): void;
declare function N_0xa17bad153b51547e(vehicle: number, p1: number): void;
declare function SetCargobobPickupMagnetFalloff(vehicle: number, p1: number): void;
declare function N_0x685d5561680d088b(vehicle: number, p1: number): void;
declare function SetCargobobPickupMagnetPullRopeLength(cargobob: number, p1: number): void;
declare function N_0x6d8eac07506291fb(cargobob: number, p1: number): void;
declare function SetCargobobPickupMagnetPullStrength(cargobob: number, p1: number): void;
declare function N_0xed8286f71a819baa(cargobob: number, p1: number): void;
declare function SetCargobobPickupMagnetReducedFalloff(cargobob: number, p1: number): void;
declare function N_0x66979acf5102fd2f(cargobob: number, p1: number): void;
declare function SetCargobobPickupMagnetReducedStrength(cargobob: number, vehicle: number): void;
declare function N_0xe301bd63e9e13cf0(cargobob: number, vehicle: number): void;
declare function SetCargobobPickupMagnetStrength(cargobob: number, strength: number): void;
declare function N_0xbcbfcd9d1dac19e2(cargobob: number, strength: number): void;
declare function SetCargobobPickupRopeDampingMultiplier(cargobob: number, p1: number): void;
declare function N_0xcf1182f682f65307(cargobob: number, p1: number): void;
declare function SetCargobobPickupRopeType(vehicle: number, state: number): void;
declare function N_0x0d5f65a8f4ebdab5(vehicle: number, state: number): void;
declare function SetCgAtBoundcenter(entity: number): void;
declare function SetCgoffset(entity: number, x: number, y: number, z: number): void;
declare function SetCheckpointCylinderHeight(checkpoint: number, nearHeight: number, farHeight: number, radius: number): void;
declare function SetCheckpointIconHeight(checkpoint: number, height_multiplier: number): void;
declare function N_0x4b5b4da5d79f1943(checkpoint: number, height_multiplier: number): void;
declare function SetCheckpointScale(checkpoint: number, height_multiplier: number): void;
declare function SetCheckpointIconScale(checkpoint: number, scale: number): void;
declare function N_0x44621483ff966526(checkpoint: number, scale: number): void;
declare function SetCheckpointRgba(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
declare function SetCheckpointRgba2(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
declare function SetCheckpointIconRgba(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
declare function SetCinematicButtonActive(p0: boolean): void;
declare function SetCinematicCamShakeAmplitude(p0: number): void;
declare function SetCinematicModeActive(toggle: boolean): void;
declare function SetCinematicNewsChannelActiveThisUpdate(): void;
declare function N_0xdc9da9e8789f5246(): void;
declare function SetClockDate(day: number, month: number, year: number): void;
declare function SetClockTime(hour: number, minute: number, second: number): void;
declare function SetCloudsAlpha(opacity: number): void;
declare function N_0xf36199225d6d8c86(opacity: number): void;
declare function SetCloudHatOpacity(opacity: number): void;
declare function SetColourOfNextTextComponent(hudColor: number): void;
declare function N_0x39bbf623fc803eac(hudColor: number): void;
declare function SetNotificationColorNext(hudColor: number): void;
declare function SetCombatFloat(ped: number, combatType: number, p2: number): void;
declare function SetControlLightEffectColor(padIndex: number, red: number, green: number, blue: number): void;
declare function N_0x8290252fff36acb5(padIndex: number, red: number, green: number, blue: number): void;
declare function SetControlGroupColor(padIndex: number, red: number, green: number, blue: number): void;
declare function SetControlNormal(padIndex: number, control: number, amount: number): boolean;
declare function N_0xe8a25867fba3b05e(padIndex: number, control: number, amount: number): boolean;
declare function SetConvertibleRoof(vehicle: number, toggle: boolean): void;
declare function SetConvertibleRoofLatchState(vehicle: number, state: boolean): void;
declare function N_0x1a78ad3d8240536f(vehicle: number, state: boolean): void;
declare function SetCreateRandomCops(toggle: boolean): void;
declare function SetCreateRandomCopsNotOnScenarios(toggle: boolean): void;
declare function SetCreateRandomCopsOnScenarios(toggle: boolean): void;
declare function SetCreateWeaponObjectLightSource(object: number, toggle: boolean): void;
declare function N_0xbce595371a5fbaaf(object: number, toggle: boolean): void;
declare function SetCreditsActive(toggle: boolean): void;
declare function SetCurrentPedVehicleWeapon(ped: number, weaponHash: number): boolean;
declare function SetCurrentPedWeapon(ped: number, weaponHash: number, bForceInHand: boolean): void;
declare function SetCurrentPlayerTcmodifier(modifierName: string): void;
declare function N_0xbbf327ded94e4deb(modifierName: string): void;
declare function SetCursorLocation(x: number, y: number): boolean;
declare function N_0xfc695459d4d0e219(x: number, y: number): boolean;
declare function SetCustomRadioTrackList(radioStation: string, trackListName: string, p2: boolean): void;
declare function N_0x4e404a9361f75bb2(radioStation: string, trackListName: string, p2: boolean): void;
declare function SetCutsceneAudioOverride(name: string): void;
declare function SetCutsceneCanBeSkipped(p0: boolean): void;
declare function N_0x41faa8fb2ece8720(p0: boolean): void;
declare function SetCutsceneEntityStreamingFlags(cutsceneEntName: string, p1: number, p2: number): void;
declare function N_0x4c61c75bee8184c2(cutsceneEntName: string, p1: number, p2: number): void;
declare function SetCutsceneFadeValues(p0: boolean, p1: boolean, p2: boolean, p3: boolean): void;
declare function SetCutsceneOrigin(x: number, y: number, z: number, heading: number, p4: number): void;
declare function SetCutscenePedComponentVariation(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number): void;
declare function SetCutscenePedComponentVariationFromPed(cutsceneEntName: string, ped: number, modelHash: number): void;
declare function N_0x2a56c06ebef2b0d9(cutsceneEntName: string, ped: number, modelHash: number): void;
declare function SetCutscenePedPropVariation(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number): void;
declare function N_0x0546524ade2e9723(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number): void;
declare function SetCutsceneTriggerArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function SetDamping(entity: number, vertex: number, value: number): void;
declare function SetDebugLinesAndSpheresDrawingActive(enabled: boolean): void;
declare function SetDecisionMaker(ped: number, name: number): void;
declare function SetDeepOceanScaler(intensity: number): void;
declare function N_0xb96b00e976be977f(intensity: number): void;
declare function SetWavesIntensity(intensity: number): void;
declare function SetCurrentIntensity(intensity: number): void;
declare function SetDefaultVehicleNumberPlateTextPattern(plateIndex: number, pattern: string): void;
declare function SetDeployHeliStubWings(vehicle: number, deploy: boolean, p2: boolean): void;
declare function N_0xb251e0b33e58b424(vehicle: number, deploy: boolean, p2: boolean): void;
declare function SetDirectorModeClearTriggeredFlag(): void;
declare function N_0x2632482fd6b9ab87(): void;
declare function SetDisableAmbientMeleeMove(player: number, toggle: boolean): void;
declare function SetDisableBreaking(object: number, toggle: boolean): void;
declare function SetDisableDecalRenderingThisFrame(): void;
declare function N_0x4b5cfc83122df602(): void;
declare function SetDisableFragDamage(object: number, toggle: boolean): void;
declare function SetDisableHoverModeFlight(vehicle: number, toggle: boolean): void;
declare function SetVehicleHoverTransformActive(vehicle: number, toggle: boolean): void;
declare function SetDisablePretendOccupants(vehicle: number, toggle: boolean): void;
declare function N_0x25367de49d64cf16(vehicle: number, toggle: boolean): void;
declare function SetDisableRandomTrainsThisFrame(toggle: boolean): void;
declare function N_0xd4b8e3d1917bc86b(toggle: boolean): void;
declare function SetSomethingMultiplierThisFrame(toggle: boolean): void;
declare function SetDisableSuperdummyMode(vehicle: number, p1: boolean): void;
declare function N_0xb088e9a47ae6edd5(vehicle: number, p1: boolean): void;
declare function SetDisableTurretMovementThisFrame(vehicle: number, turretIdx: number): void;
declare function N_0xe615bb7a7752c76a(vehicle: number, turretIdx: number): void;
declare function SetDisableTurretMovement(vehicle: number, turretIdx: number): void;
declare function SetDisableVehicleEngineFires(vehicle: number, toggle: boolean): void;
declare function N_0x91a0bd635321f145(vehicle: number, toggle: boolean): void;
declare function SetDisableVehicleFlightNozzlePosition(vehicle: number, direction: boolean): void;
declare function SetPlaneVtolAnimationDisabled(vehicle: number, direction: boolean): void;
declare function SetDisableVehiclePetrolTankDamage(vehicle: number, toggle: boolean): void;
declare function SetDisableVehiclePetrolTankFires(vehicle: number, toggle: boolean): void;
declare function N_0x465bf26ab9684352(vehicle: number, toggle: boolean): void;
declare function SetDisableVehicleUnk(toggle: boolean): void;
declare function SetDisableVehicleUnk_2(toggle: boolean): void;
declare function SetDisableVehicleWindowCollisions(vehicle: number, toggle: boolean): void;
declare function N_0x1087bc8ec540daeb(vehicle: number, toggle: boolean): void;
declare function SetDiscordAppId(appId: string): void;
declare function SetDiscordRichPresenceAction(index: number, label: string, url: string): void;
declare function SetDiscordRichPresenceAsset(assetName: string): void;
declare function SetDiscordRichPresenceAssetSmall(assetName: string): void;
declare function SetDiscordRichPresenceAssetSmallText(text: string): void;
declare function SetDiscordRichPresenceAssetText(text: string): void;
declare function SetDispatchCopsForPlayer(player: number, toggle: boolean): void;
declare function SetDispatchIdealSpawnDistance(p0: number): void;
declare function SetDispatchSpawnLocation(x: number, y: number, z: number): void;
declare function N_0xd10f442036302d50(x: number, y: number, z: number): void;
declare function SetDispatchTimeBetweenSpawnAttempts(p0: number, p1: number): void;
declare function SetDispatchTimeBetweenSpawnAttemptsMultiplier(p0: number, p1: number): void;
declare function SetDistantCarsEnabled(toggle: boolean): void;
declare function N_0xf796359a959df65d(toggle: boolean): void;
declare function DisplayDistantVehicles(toggle: boolean): void;
declare function SetDitchPoliceModels(toggle: boolean): void;
declare function SetDrawOrigin(x: number, y: number, z: number, p3: number): void;
declare function SetDriftTyresEnabled(vehicle: number, toggle: boolean): void;
declare function SetDriveTaskCruiseSpeed(driver: number, cruiseSpeed: number): void;
declare function SetDriveTaskDrivingStyle(ped: number, drivingStyle: number): void;
declare function SetDriveTaskMaxCruiseSpeed(p0: number, p1: number): void;
declare function SetDrivebyTaskTarget(shootingPed: number, targetPed: number, targetVehicle: number, x: number, y: number, z: number): void;
declare function SetDriverAbility(driver: number, ability: number): void;
declare function SetDriverAggressiveness(driver: number, aggressiveness: number): void;
declare function SetDriverRacingModifier(driver: number, modifier: number): void;
declare function N_0xded5af5a0ea4b297(driver: number, modifier: number): void;
declare function SetDuiUrl(duiObject: number, url: string): void;
declare function SetEmitterRadioStation(emitterName: string, radioStation: string): void;
declare function SetEnableArenaPropPhysics(entity: number, toggle: boolean, p2: number): void;
declare function N_0x911024442f4898f0(entity: number, toggle: boolean, p2: number): void;
declare function SetEnableArenaPropPhysicsOnPed(entity: number, toggle: boolean, p2: number, ped: number): void;
declare function N_0xb20834a7dd3d8896(entity: number, toggle: boolean, p2: number, ped: number): void;
declare function SetEnableBoundAnkles(ped: number, toggle: boolean): void;
declare function SetEnableHandcuffs(ped: number, toggle: boolean): void;
declare function SetEnablePedEnveffScale(ped: number, toggle: boolean): void;
declare function SetEnableScuba(ped: number, toggle: boolean): void;
declare function SetEnableScubaGearLight(ped: number, toggle: boolean): void;
declare function SetEnableVehicleSlipstreaming(toggle: boolean): void;
declare function N_0xe6c0c80b8c867537(toggle: boolean): void;
declare function SetEntityAlpha(entity: number, alphaLevel: number, skin: boolean): void;
declare function SetEntityAlwaysPrerender(entity: number, toggle: boolean): void;
declare function SetEntityAngularVelocity(entity: number, x: number, y: number, z: number): void;
declare function N_0x8339643499d1222e(entity: number, x: number, y: number, z: number): void;
declare function SetEntityAnimCurrentTime(entity: number, animDictionary: string, animName: string, time: number): void;
declare function SetEntityAnimSpeed(entity: number, animDictionary: string, animName: string, speedMultiplier: number): void;
declare function SetEntityAsMissionEntity(entity: number, p1: boolean, p2: boolean): void;
declare function SetEntityAsNoLongerNeeded(entity: number): void;
declare function SetEntityCanBeDamaged(entity: number, toggle: boolean): void;
declare function SetEntityCanBeDamagedByRelationshipGroup(entity: number, bCanBeDamaged: boolean, relGroup: number): void;
declare function SetEntityCanBeTargetedWithoutLos(entity: number, toggle: boolean): void;
declare function SetEntityCleanupByEngine(entity: number, toggle: boolean): void;
declare function N_0x3910051ccecdb00c(entity: number, toggle: boolean): void;
declare function SetEntityRegister(entity: number, toggle: boolean): void;
declare function SetEntitySomething(entity: number, toggle: boolean): void;
declare function SetEntityCollision(entity: number, toggle: boolean, keepPhysics: boolean): void;
declare function SetEntityCompletelyDisableCollision(entity: number, toggle: boolean, keepPhysics: boolean): void;
declare function N_0x9ebc85ed0fffe51c(entity: number, toggle: boolean, keepPhysics: boolean): void;
declare function SetEntityCollision_2(entity: number, toggle: boolean, keepPhysics: boolean): void;
declare function SetEntityCoords(entity: number, xPos: number, yPos: number, zPos: number, alive: boolean, deadFlag: boolean, ragdollFlag: boolean, clearArea: boolean): void;
declare function SetEntityCoordsNoOffset(entity: number, xPos: number, yPos: number, zPos: number, alive: boolean, deadFlag: boolean, ragdollFlag: boolean): void;
declare function SetEntityCoordsWithoutPlantsReset(entity: number, xPos: number, yPos: number, zPos: number, alive: boolean, deadFlag: boolean, ragdollFlag: boolean, clearArea: boolean): void;
declare function SetEntityCoords_2(entity: number, xPos: number, yPos: number, zPos: number, alive: boolean, deadFlag: boolean, ragdollFlag: boolean, clearArea: boolean): void;
declare function SetEntityDecalsDisabled(entity: number, p1: boolean): void;
declare function N_0x2c2e3dc128f44309(entity: number, p1: boolean): void;
declare function SetEntityDrawOutline(entity: number, enabled: boolean): void;
declare function SetEntityDrawOutlineColor(red: number, green: number, blue: number, alpha: number): void;
declare function SetEntityDrawOutlineShader(shader: number): void;
declare function SetEntityDynamic(entity: number, toggle: boolean): void;
declare function SetEntityHasGravity(entity: number, toggle: boolean): void;
declare function SetEntityHeading(entity: number, heading: number): void;
declare function SetEntityHealth(entity: number, health: number): void;
declare function SetEntityIconColor(entity: number, red: number, green: number, blue: number, alpha: number): void;
declare function SetEntityIconVisibility(entity: number, toggle: boolean): void;
declare function SetEntityInvincible(entity: number, toggle: boolean): void;
declare function SetEntityIsTargetPriority(entity: number, p1: boolean, p2: number): void;
declare function SetEntityLights(entity: number, toggle: boolean): void;
declare function SetEntityLoadCollisionFlag(entity: number, toggle: boolean): void;
declare function SetEntityLocallyInvisible(entity: number): void;
declare function SetEntityLocallyVisible(entity: number): void;
declare function SetEntityLodDist(entity: number, value: number): void;
declare function SetEntityMatrix(entity: number, forwardX: number, forwardY: number, forwardZ: number, rightX: number, rightY: number, rightZ: number, upX: number, upY: number, upZ: number, atX: number, atY: number, atZ: number): void;
declare function SetEntityMaxHealth(entity: number, value: number): void;
declare function SetEntityMaxSpeed(entity: number, speed: number): void;
declare function SetEntityMotionBlur(entity: number, toggle: boolean): void;
declare function SetEntityNoCollisionEntity(entity1: number, entity2: number, thisFrameOnly: boolean): void;
declare function SetEntityOnlyDamagedByPlayer(entity: number, toggle: boolean): void;
declare function SetEntityOnlyDamagedByRelationshipGroup(entity: number, p1: boolean, relationshipHash: number): void;
declare function SetEntityProofUnk(entity: number, toggle: boolean): void;
declare function N_0x15f944730c832252(entity: number, toggle: boolean): void;
declare function SetEntityProofs(entity: number, bulletProof: boolean, fireProof: boolean, explosionProof: boolean, collisionProof: boolean, meleeProof: boolean, steamProof: boolean, p7: boolean, drownProof: boolean): void;
declare function SetEntityQuaternion(entity: number, x: number, y: number, z: number, w: number): void;
declare function SetEntityRecordsCollisions(entity: number, toggle: boolean): void;
declare function SetEntityRenderScorched(entity: number, toggle: boolean): void;
declare function SetEntityRotation(entity: number, pitch: number, roll: number, yaw: number, rotationOrder: number, p5: boolean): void;
declare function SetEntityTrafficlightOverride(entity: number, state: number): void;
declare function SetEntityVelocity(entity: number, x: number, y: number, z: number): void;
declare function SetEntityVisible(entity: number, toggle: boolean, unk: boolean): void;
declare function SetEntityVisibleInCutscene(p0: number, p1: boolean, p2: boolean): void;
declare function SetEveryoneIgnorePlayer(player: number, toggle: boolean): void;
declare function SetExclusiveScenarioGroup(scenarioGroup: string): void;
declare function SetExplosiveAmmoThisFrame(player: number): void;
declare function SetExplosiveMeleeThisFrame(player: number): void;
declare function SetExtraTimecycleModifier(modifierName: string): void;
declare function SetExtraTimecycleModifierStrength(strength: number): void;
declare function N_0x2c328af17210f009(strength: number): void;
declare function SetFacialClipsetOverride(ped: number, animDict: string): void;
declare function N_0x5687c7f05b39e401(ped: number, animDict: string): void;
declare function SetFacialIdleAnimOverride(ped: number, animName: string, animDict: string): void;
declare function SetFadeInAfterDeathArrest(toggle: boolean): void;
declare function SetFadeInAfterLoad(toggle: boolean): void;
declare function SetFadeOutAfterArrest(toggle: boolean): void;
declare function SetFadeOutAfterDeath(toggle: boolean): void;
declare function SetFakeWantedLevel(fakeWantedLevel: number): void;
declare function SetFarDrawVehicles(toggle: boolean): void;
declare function SetFireAmmoThisFrame(player: number): void;
declare function SetFireSpreadRate(p0: number): void;
declare function SetFirstPersonAimCamNearClipThisUpdate(distance: number): void;
declare function N_0x0af7b437918103b3(distance: number): void;
declare function SetFirstPersonCamNearClip(distance: number): void;
declare function SetFirstPersonAimCamZoomFactor(zoomFactor: number): void;
declare function N_0x70894bd0915c5bca(zoomFactor: number): void;
declare function SetFirstPersonCamPitchRange(minAngle: number, maxAngle: number): void;
declare function N_0xbcfc632db7673bf0(minAngle: number, maxAngle: number): void;
declare function SetFlash(p0: number, p1: number, fadeIn: number, duration: number, fadeOut: number): void;
declare function SetFlashLightEnabled(ped: number, toggle: boolean): void;
declare function SetFlashLightFadeDistance(distance: number): number;
declare function SetFlashLightKeepOnWhileMoving(state: boolean): void;
declare function SetFloatingHelpTextScreenPosition(hudIndex: number, x: number, y: number): void;
declare function N_0x7679cc1bcebe3d4c(hudIndex: number, x: number, y: number): void;
declare function SetFloatingHelpTextStyle(hudIndex: number, style: number, hudColor: number, alpha: number, arrowPosition: number, boxOffset: number): void;
declare function N_0x788e7fd431bd67f1(hudIndex: number, style: number, hudColor: number, alpha: number, arrowPosition: number, boxOffset: number): void;
declare function SetFloatingHelpTextToEntity(hudIndex: number, entity: number, offsetX: number, offsetY: number): void;
declare function N_0xb094bc1db4018240(hudIndex: number, entity: number, offsetX: number, offsetY: number): void;
declare function SetFloatingHelpTextWorldPosition(hudIndex: number, x: number, y: number, z: number): void;
declare function N_0x784ba7e0eceb4178(hudIndex: number, x: number, y: number, z: number): void;
declare function SetFlyCamCoordAndConstrain(cam: number, x: number, y: number, z: number): void;
declare function N_0xc91c6c55199308ca(cam: number, x: number, y: number, z: number): void;
declare function SetFlyCamHorizontalResponse(cam: number, p1: number, p2: number, p3: number): void;
declare function N_0x503f5920162365b2(cam: number, p1: number, p2: number, p3: number): void;
declare function SetFlyCamMaxHeight(cam: number, height: number): void;
declare function N_0xf9d02130ecdd1d77(cam: number, height: number): void;
declare function SetCameraRange(cam: number, height: number): void;
declare function SetFlyCamVerticalSpeedMultiplier(cam: number, p1: number, p2: number, p3: number): void;
declare function N_0xe827b9382cfb41ba(cam: number, p1: number, p2: number, p3: number): void;
declare function SetFlyThroughWindscreenParams(vehMinSpeed: number, unkMinSpeed: number, unkModifier: number, minDamage: number): boolean;
declare function SetFocusEntity(entity: number): void;
declare function SetFocusPosAndVel(x: number, y: number, z: number, offsetX: number, offsetY: number, offsetZ: number): void;
declare function SetFocusArea(x: number, y: number, z: number, offsetX: number, offsetY: number, offsetZ: number): void;
declare function SetFollowPedCamThisUpdate(camName: string, p1: number): boolean;
declare function SetFollowPedCamCutsceneChat(camName: string, p1: number): boolean;
declare function SetFollowPedCamViewMode(viewMode: number): void;
declare function SetFollowTurretSeatCam(seatIndex: number): void;
declare function N_0x5c90cab09951a12f(seatIndex: number): void;
declare function SetFollowVehicleCamViewMode(viewMode: number): void;
declare function SetFollowVehicleCamZoomLevel(zoomLevel: number): void;
declare function SetForceFootstepUpdate(ped: number, toggle: boolean): void;
declare function N_0x129466ed55140f8d(ped: number, toggle: boolean): void;
declare function SetForceHdVehicle(vehicle: number, toggle: boolean): void;
declare function N_0x97ce68cb032583f0(vehicle: number, toggle: boolean): void;
declare function SetForceObjectThisFrame(x: number, y: number, z: number, p3: number): void;
declare function SetForcePedFootstepsTracks(toggle: boolean): void;
declare function SetForcePlayerToJump(player: number): void;
declare function N_0xa1183bcfee0f93d1(player: number): void;
declare function SetForceStepType(ped: number, p1: boolean, _type: number, p3: number): void;
declare function N_0xcb968b53fc7f916d(ped: number, p1: boolean, _type: number, p3: number): void;
declare function SetForceVehicleTrails(toggle: boolean): void;
declare function SetForcedBoatLocationWhenAnchored(vehicle: number, toggle: boolean): void;
declare function N_0xb28b1fe5bfadd7f5(vehicle: number, toggle: boolean): void;
declare function SetForkliftForkHeight(vehicle: number, height: number): void;
declare function N_0x37ebbf3117bd6a25(vehicle: number, height: number): void;
declare function SetFrontendActive(active: boolean): void;
declare function SetFrontendRadioActive(active: boolean): void;
declare function SetGamePaused(toggle: boolean): void;
declare function SetGamePausesForStreaming(toggle: boolean): void;
declare function SetGameplayCamFollowPedThisUpdate(ped: number): void;
declare function N_0x8bbacbf51da047a8(ped: number): void;
declare function SetGameplayCamHash(camName: string): void;
declare function N_0x425a920fdb9a0dda(camName: string): void;
declare function SetGameplayCamRawPitch(pitch: number): void;
declare function SetGameplayCamRawYaw(yaw: number): void;
declare function SetGameplayCamRelativeHeading(heading: number): void;
declare function SetGameplayCamRelativePitch(angle: number, scalingFactor: number): void;
declare function SetGameplayCamRelativeRotation(roll: number, pitch: number, yaw: number): void;
declare function N_0x48608c3464f58ab4(roll: number, pitch: number, yaw: number): void;
declare function SetGameplayCamShakeAmplitude(amplitude: number): void;
declare function SetGameplayCamVehicleCamera(vehicleName: string): void;
declare function N_0x21e253a7f8da5dfb(vehicleName: string): void;
declare function SetGameplayCamVehicleCameraName(vehicleModel: number): void;
declare function N_0x11fa5d3479c7dd47(vehicleModel: number): void;
declare function SetGameplayCoordHint(x: number, y: number, z: number, duration: number, blendOutDuration: number, blendInDuration: number, unk: number): void;
declare function SetGameplayEntityHint(entity: number, xOffset: number, yOffset: number, zOffset: number, p4: boolean, p5: number, p6: number, p7: number, p8: number): void;
declare function SetGameplayHintAnimCloseup(toggle: boolean): void;
declare function GetIsMultiplayerBrief(toggle: boolean): void;
declare function N_0xe3433eadaaf7ee40(toggle: boolean): void;
declare function SetGameplayHintAnimOffsetx(xOffset: number): void;
declare function N_0x5d7b620dae436138(xOffset: number): void;
declare function SetGameplayHintAnimOffsety(yOffset: number): void;
declare function N_0xc92717ef615b6704(yOffset: number): void;
declare function SetGameplayHintBaseOrbitPitchOffset(value: number): void;
declare function N_0xd1f8363dfad03848(value: number): void;
declare function SetGameplayHintAngle(value: number): void;
declare function SetGameplayHintFollowDistanceScalar(value: number): void;
declare function N_0xf8bdbf3d573049a1(value: number): void;
declare function SetGameplayHintAnimOffsetz(value: number): void;
declare function SetGameplayHintFov(FOV: number): void;
declare function SetGameplayObjectHint(p0: number, p1: number, p2: number, p3: number, p4: boolean, p5: number, p6: number, p7: number): void;
declare function SetGameplayPedHint(p0: number, x1: number, y1: number, z1: number, p4: boolean, duration: number, blendOutDuration: number, blendInDuration: number): void;
declare function SetGameplayVehicleHint(vehicle: number, offsetX: number, offsetY: number, offsetZ: number, p4: boolean, time: number, easeInTime: number, easeOutTime: number): void;
declare function SetGarbageTrucks(toggle: boolean): void;
declare function SetGhostedEntityAlpha(alpha: number): void;
declare function N_0x658500ae6d723a7e(alpha: number): void;
declare function SetGlobalMinBirdFlightHeight(height: number): void;
declare function SetGpsActive(active: boolean): void;
declare function SetGpsCustomRouteRender(toggle: boolean, radarThickness: number, mapThickness: number): void;
declare function N_0x900086f371220b6f(toggle: boolean, radarThickness: number, mapThickness: number): void;
declare function SetGpsDisabledZone(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
declare function SetGpsDisabledZoneAtIndex(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, index: number): void;
declare function N_0xd0bc1c6fb18ee154(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, index: number): void;
declare function SetGpsFlags(p0: number, p1: number): void;
declare function SetGpsFlashes(toggle: boolean): void;
declare function SetGpsMultiRouteRender(toggle: boolean): void;
declare function N_0x3dda37128dd1aca8(toggle: boolean): void;
declare function SetGravityLevel(level: number): void;
declare function SetGroupFormation(groupId: number, formationType: number): void;
declare function SetGroupFormationSpacing(groupId: number, p1: number, p2: number, p3: number): void;
declare function SetGroupSeparationRange(groupHandle: number, separationRange: number): void;
declare function SetHandleRockstarMessageViaScript(toggle: boolean): void;
declare function N_0xbfa0a56a817c6c7d(toggle: boolean): void;
declare function SetHandlingField(vehicle: string, class_: string, fieldName: string, value: number): void;
declare function SetHandlingFloat(vehicle: string, class_: string, fieldName: string, value: number): void;
declare function SetHandlingInt(vehicle: string, class_: string, fieldName: string, value: number): void;
declare function SetHandlingVector(vehicle: string, class_: string, fieldName: string): void;
declare function SetHasContentUnlocksFlags(value: number): void;
declare function N_0xdac073c7901f9e15(value: number): void;
declare function SetHdArea(x: number, y: number, z: number, radius: number): void;
declare function SetHeadBlendPaletteColor(ped: number, r: number, g: number, b: number, id: number): void;
declare function N_0xcc9682b8951c5229(ped: number, r: number, g: number, b: number, id: number): void;
declare function SetHealthHudDisplayValues(health: number, capacity: number, wasAdded: boolean): void;
declare function N_0x3f5cc444dcaaa8f2(health: number, capacity: number, wasAdded: boolean): void;
declare function SetHeliBladesFullSpeed(vehicle: number): void;
declare function SetHeliBladesSpeed(vehicle: number, speed: number): void;
declare function SetHeliCombatOffset(vehicle: number, x: number, y: number, z: number): void;
declare function N_0x0a3f820a9a9a9ac5(vehicle: number, x: number, y: number, z: number): void;
declare function SetHeliMainRotorHealth(vehicle: number, health: number): void;
declare function N_0x4056ea1105f5abd7(vehicle: number, health: number): void;
declare function SetHeliTailExplodeThrowDashboard(vehicle: number, p1: boolean): void;
declare function WasCounterActivated(vehicle: number, p1: boolean): void;
declare function N_0x3ec8bf18aa453fe9(vehicle: number, p1: boolean): void;
declare function SetHeliTailRotorHealth(vehicle: number, health: number): void;
declare function N_0xfe205f38aaa58e5b(vehicle: number, health: number): void;
declare function SetHeliTurbulenceScalar(vehicle: number, p1: number): void;
declare function N_0xe6f13851780394da(vehicle: number, p1: number): void;
declare function SetHelicopterRollPitchYawMult(helicopter: number, multiplier: number): void;
declare function SetHelpMessageTextStyle(style: number, hudColor: number, alpha: number, p3: number, p4: number): void;
declare function N_0xb9c362babecddc7a(style: number, hudColor: number, alpha: number, p3: number, p4: number): void;
declare function SetHidofOverride(p0: boolean, p1: boolean, nearplaneOut: number, nearplaneIn: number, farplaneOut: number, farplaneIn: number): void;
declare function N_0xba3d65906822bed5(p0: boolean, p1: boolean, nearplaneOut: number, nearplaneIn: number, farplaneOut: number, farplaneIn: number): void;
declare function SetHidofEnvBlurParams(p0: boolean, p1: boolean, nearplaneOut: number, nearplaneIn: number, farplaneOut: number, farplaneIn: number): void;
declare function SetHighFallTask(ped: number, duration: number, p2: number, p3: number): void;
declare function SetHornEnabled(vehicle: number, toggle: boolean): void;
declare function SetHoverModeWingRatio(vehicle: number, ratio: number): void;
declare function SetSpecialflightWingRatio(vehicle: number, ratio: number): void;
declare function SetHudComponentAlign(id: number, horizontalAlign: number, verticalAlign: number): void;
declare function SetHudComponentPosition(id: number, x: number, y: number): void;
declare function SetHudComponentSize(id: number, x: number, y: number): void;
declare function SetHydraulicRaised(vehicle: number, toggle: boolean): void;
declare function N_0x28b18377eb6e25f6(vehicle: number, toggle: boolean): void;
declare function SetHydraulicWheelState(vehicle: number, state: number): void;
declare function N_0x8ea86df356801c7d(vehicle: number, state: number): void;
declare function SetHydraulicWheelStateTransition(vehicle: number, wheelId: number, state: number, value: number, p4: number): void;
declare function N_0xc24075310a8b9cd1(vehicle: number, wheelId: number, state: number, value: number, p4: number): void;
declare function SetHydraulicWheelValue(vehicle: number, wheelId: number, value: number): void;
declare function N_0x84ea99c62cb3ef0c(vehicle: number, wheelId: number, value: number): void;
declare function SetHydraulicState(vehicle: number, wheelId: number, value: number): void;
declare function SetIgnoreLowPriorityShockingEvents(player: number, toggle: boolean): void;
declare function SetIgnoreNoGpsFlag(toggle: boolean): void;
declare function SetIgnoreSecondaryRouteNodes(toggle: boolean): void;
declare function N_0x1fc289a0c3ff470f(toggle: boolean): void;
declare function SetIkTarget(ped: number, ikIndex: number, entityLookAt: number, boneLookAt: number, offsetX: number, offsetY: number, offsetZ: number, p7: number, blendInDuration: number, blendOutDuration: number): void;
declare function SetInVehicleCamStateThisUpdate(p0: number, p1: number): void;
declare function N_0xe9ea16d6e54cdca4(p0: number, p1: number): void;
declare function SetIncidentRequestedUnits(incidentId: number, dispatchService: number, numUnits: number): void;
declare function N_0xb08b85d860e7ba3c(incidentId: number, dispatchService: number, numUnits: number): void;
declare function SetIncidentUnk(incidentId: number, p1: number): void;
declare function N_0xd261ba3e7e998072(incidentId: number, p1: number): void;
declare function SetInitialPlayerStation(radioStation: string): void;
declare function SetInputExclusive(padIndex: number, control: number): void;
declare function SetInstancePriorityHint(flag: number): void;
declare function SetUnkMapFlag(flag: number): void;
declare function SetInstancePriorityMode(toggle: number): void;
declare function EnableMpDlcMaps(toggle: number): void;
declare function UseFreemodeMapBehavior(toggle: number): void;
declare function LowerMapPropDensity(toggle: number): void;
declare function SetInteriorActive(interiorID: number, toggle: boolean): void;
declare function SetInteriorEntitySetColor(interior: number, entitySetName: string, color: number): void;
declare function SetInteriorPropColor(interior: number, entitySetName: string, color: number): void;
declare function SetInteriorPortalCornerPosition(interiorId: number, portalIndex: number, cornerIndex: number, posX: number, posY: number, posZ: number): void;
declare function SetInteriorPortalEntityFlag(interiorId: number, portalIndex: number, entityIndex: number, flag: number): void;
declare function SetInteriorPortalFlag(interiorId: number, portalIndex: number, flag: number): void;
declare function SetInteriorPortalRoomFrom(interiorId: number, portalIndex: number, roomFrom: number): void;
declare function SetInteriorPortalRoomTo(interiorId: number, portalIndex: number, roomTo: number): void;
declare function SetInteriorRoomExtents(interiorId: number, roomIndex: number, bbMinX: number, bbMinY: number, bbMinZ: number, bbMaxX: number, bbMaxY: number, bbMaxZ: number): void;
declare function SetInteriorRoomFlag(interiorId: number, roomIndex: number, flag: number): void;
declare function SetInteriorRoomTimecycle(interiorId: number, roomIndex: number, timecycleHash: number): void;
declare function SetInteriorZoomLevelDecreased(toggle: boolean): void;
declare function N_0x7ec8aba5e74b3d7a(toggle: boolean): void;
declare function SetInteriorZoomLevelIncreased(toggle: boolean): void;
declare function N_0x504dfe62a1692296(toggle: boolean): void;
declare function SetIslandEnabled(islandName: string, toggle: boolean): void;
declare function SetIslandHopperEnabled(islandName: string, toggle: boolean): void;
declare function SetLastDrivenVehicle(vehicle: number): void;
declare function N_0xacfb2463cc22bed2(vehicle: number): void;
declare function SetLaunchControlEnabled(toggle: boolean): void;
declare function N_0xaa6a6098851c396f(toggle: boolean): void;
declare function SetLightsCutoffDistanceTweak(distance: number): void;
declare function N_0xbc3cca5844452b06(distance: number): void;
declare function SetLocalPlayerAsGhost(toggle: boolean): void;
declare function SetLocalPlayerCanCollectPortablePickups(p0: boolean): void;
declare function N_0x78857fc65cadb909(p0: boolean): void;
declare function SetLocalPlayerCanUsePickupsWithThisModel(modelHash: number, toggle: boolean): void;
declare function N_0x88eaec617cd26926(modelHash: number, toggle: boolean): void;
declare function SetLocalPlayerInvisibleLocally(p0: boolean): void;
declare function SetLocalPlayerVisibleInCutscene(p0: boolean, p1: boolean): void;
declare function SetLocalPlayerVisibleLocally(p0: boolean): void;
declare function SetMainPlayerBlipColour(color: number): void;
declare function N_0x7b21e0bb01e8224a(color: number): void;
declare function SetManualShutdownLoadingScreenNui(manualShutdown: boolean): void;
declare function SetMapZoomDataLevel(index: number, zoomScale: number, zoomSpeed: number, scrollSpeed: number, tilesX: number, tilesY: number): void;
declare function SetMapdatacullboxEnabled(name: string, toggle: boolean): void;
declare function N_0xaf12610c644a35c9(name: string, toggle: boolean): void;
declare function SetMaxArmourHudDisplay(maximumValue: number): void;
declare function N_0x06a320535f5f0248(maximumValue: number): void;
declare function SetMaxHealthHudDisplay(maximumValue: number): void;
declare function N_0x975d66a0bc17064c(maximumValue: number): void;
declare function SetMaxNumPortablePickupsCarriedByPlayer(modelHash: number, p1: number): void;
declare function N_0x0bf3b3bd47d79c08(modelHash: number, p1: number): void;
declare function SetMaxWantedLevel(maxWantedLevel: number): void;
declare function SetMicrophonePosition(p0: boolean, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number): void;
declare function SetMillisecondsPerGameMinute(value: number): void;
declare function SetMinigameInProgress(toggle: boolean): void;
declare function SetMinimapAltitudeIndicatorLevel(altitude: number, p1: boolean): void;
declare function SetMinimapAttitudeIndicatorLevel(altitude: number, p1: boolean): void;
declare function SetMinimapBlockWaypoint(toggle: boolean): void;
declare function SetMinimapClipType(_type: number): void;
declare function SetMinimapComponent(componentID: number, toggle: boolean, hudColor: number): number;
declare function SetMinimapComponentPosition(name: string, alignX: string, alignY: string, posX: number, posY: number, sizeX: number, sizeY: number): void;
declare function SetMinimapFowRevealCoordinate(x: number, y: number, z: number): void;
declare function N_0x0923dbf87dff735e(x: number, y: number, z: number): void;
declare function SetMinimapGolfCourse(hole: number): void;
declare function N_0x71bdb63dbaf8da59(hole: number): void;
declare function SetMinimapGolfCourseOff(): void;
declare function N_0x35edd5b2e3ff01c0(): void;
declare function SetMinimapHideFow(toggle: boolean): void;
declare function N_0xf8dee0a5600cbb93(toggle: boolean): void;
declare function SetMinimapRevealed(toggle: boolean): void;
declare function SetMinimapInPrologue(toggle: boolean): void;
declare function SetDrawMapVisible(toggle: boolean): void;
declare function SetNorthYanktonMap(toggle: boolean): void;
declare function SetMinimapInSpectatorMode(toggle: boolean, ped: number): void;
declare function KeyHudColour(toggle: boolean, ped: number): void;
declare function SetMinimapOverlayDisplay(miniMap: number, x: number, y: number, xScale: number, yScale: number, alpha: number): void;
declare function SetMinimapSonarSweep(toggle: boolean): void;
declare function SetMinimapSonarEnabled(toggle: boolean): void;
declare function SetMissionFlag(toggle: boolean): void;
declare function SetMissionName(p0: boolean, name: string): void;
declare function SetMissionName_2(p0: boolean, name: string): void;
declare function N_0xe45087d85f468bc2(p0: boolean, name: string): void;
declare function SetMissionTrainAsNoLongerNeeded(p1: boolean): number;
declare function SetMissionTrainCoords(train: number, x: number, y: number, z: number): void;
declare function SetMobilePhonePosition(posX: number, posY: number, posZ: number): void;
declare function SetMobilePhoneRadioState(state: boolean): void;
declare function SetMobilePhoneRotation(rotX: number, rotY: number, rotZ: number, p3: number): void;
declare function SetMobilePhoneScale(scale: number): void;
declare function SetMobilePhoneUnk(toggle: boolean): void;
declare function N_0x375a706a5c2fd084(toggle: boolean): void;
declare function SetMobileRadioEnabledDuringGameplay(toggle: boolean): void;
declare function SetModelAsNoLongerNeeded(model: number): void;
declare function SetModelHeadlightConfiguration(modelHash: number, ratePerSecond: number, headlightRotation: number, invertRotation: boolean): void;
declare function SetMountedWeaponTarget(shootingPed: number, targetPed: number, targetVehicle: number, x: number, y: number, z: number): void;
declare function SetMouseCursorActiveThisFrame(): void;
declare function ShowCursorThisFrame(): void;
declare function SetMouseCursorSprite(spriteId: number): void;
declare function N_0x8db8cffd58b62552(spriteId: number): void;
declare function SetCursorSprite(spriteId: number): void;
declare function SetMouseCursorVisibleInMenus(enable: boolean): void;
declare function N_0x98215325a695e78a(enable: boolean): void;
declare function SetMovementModeOverride(ped: number, name: string): void;
declare function N_0x781de8fa214e87d2(ped: number, name: string): void;
declare function SetMpGamerTagAlpha(gamerTagId: number, component: number, alpha: number): void;
declare function N_0xd48fe545cd46f857(gamerTagId: number, component: number, alpha: number): void;
declare function SetMpGamerTagBigText(gamerTagId: number, _string: string): void;
declare function N_0x7b7723747ccb55b6(gamerTagId: number, _string: string): void;
declare function SetMpGamerTagChatting(gamerTagId: number, _string: string): void;
declare function SetMpGamerTagColour(gamerTagId: number, component: number, hudColorIndex: number): void;
declare function N_0x613ed644950626ae(gamerTagId: number, component: number, hudColorIndex: number): void;
declare function SetMpGamerTagDisablePlayerHealthSync(gamerTagId: number, toggle: boolean): void;
declare function N_0xd29ec58c2f6b5014(gamerTagId: number, toggle: boolean): void;
declare function SetMpGamerHealthBarDisplay(gamerTagId: number, toggle: boolean): void;
declare function SetMpGamerTagHealthBarColour(gamerTagId: number, hudColorIndex: number): void;
declare function N_0x3158c77a7e888ab4(gamerTagId: number, hudColorIndex: number): void;
declare function SetMpGamerTagHealthBarColor(gamerTagId: number, hudColorIndex: number): void;
declare function SetMpGamerTagMpBagLargeCount(gamerTagId: number, count: number): void;
declare function N_0x9b9aa95688f78dd3(gamerTagId: number, count: number): void;
declare function SetMpGamerTagUnk(gamerTagId: number, count: number): void;
declare function SetMpGamerTagName(gamerTagId: number, _string: string): void;
declare function N_0xdea2b8283baa3944(gamerTagId: number, _string: string): void;
declare function SetMpGamerTagOverridePlayerHealth(gamerTagId: number, health: number, maximumHealth: number): void;
declare function N_0x1563fe35e9928e67(gamerTagId: number, health: number, maximumHealth: number): void;
declare function SetMpGamerHealthBarMax(gamerTagId: number, health: number, maximumHealth: number): void;
declare function SetMpGamerTagUseVehicleHealth(gamerTagId: number, toggle: boolean): void;
declare function N_0xa67f9c46d612b6f1(gamerTagId: number, toggle: boolean): void;
declare function SetMpGamerTagIcons(gamerTagId: number, toggle: boolean): void;
declare function SetMpGamerTagVisibility(gamerTagId: number, component: number, toggle: boolean): void;
declare function N_0x63bb75abedc1f6a0(gamerTagId: number, component: number, toggle: boolean): void;
declare function SetMpGamerTagVisibilityAll(gamerTagId: number, toggle: boolean): void;
declare function N_0xee76ff7e6a0166b0(gamerTagId: number, toggle: boolean): void;
declare function SetMpGamerTag_(gamerTagId: number, toggle: boolean): void;
declare function SetMpGamerTag(gamerTagId: number, toggle: boolean): void;
declare function SetMpGamerTagEnabled(gamerTagId: number, toggle: boolean): void;
declare function SetMpGamerTagWantedLevel(gamerTagId: number, wantedlvl: number): void;
declare function N_0xcf228e2aa03099c3(gamerTagId: number, wantedlvl: number): void;
declare function SetMpGamerTagsUseVehicleBehavior(enabled: boolean): void;
declare function SetMpGamerTagsVisibleDistance(distance: number): void;
declare function SetMultiplayerBankCash(): void;
declare function SetMultiplayerHudCash(p0: number, p1: number): void;
declare function SetMultiplayerWalletCash(): void;
declare function N_0xc2d15bef167e27bc(): void;
declare function SetNetworkCutsceneEntities(toggle: boolean): void;
declare function N_0xaaa553e7dd28a457(toggle: boolean): void;
declare function SetNetworkEnableVehiclePositionCorrection(vehicle: number, toggle: boolean): void;
declare function N_0x838da0936a24ed4d(vehicle: number, toggle: boolean): void;
declare function SetNetworkIdAlwaysExistsForPlayer(netId: number, player: number, toggle: boolean): void;
declare function N_0xa8a024587329f36a(netId: number, player: number, toggle: boolean): void;
declare function SetNetworkIdSyncToPlayer(netId: number, player: number, toggle: boolean): void;
declare function SetNetworkIdCanMigrate(netId: number, toggle: boolean): void;
declare function SetNetworkIdExistsOnAllMachines(netId: number, toggle: boolean): void;
declare function SetNetworkIdVisibleInCutscene(netId: number, p1: boolean, p2: boolean): void;
declare function SetNetworkVehicleAsGhost(vehicle: number, toggle: boolean): void;
declare function N_0x6274c4712850841e(vehicle: number, toggle: boolean): void;
declare function SetNetworkObjectNonContact(vehicle: number, toggle: boolean): void;
declare function SetNetworkVehiclePositionUpdateMultiplier(vehicle: number, multiplier: number): void;
declare function N_0xa2a707979fe754dc(vehicle: number, multiplier: number): void;
declare function SetNetworkVehicleBlenderDistanceMultiplier(vehicle: number, multiplier: number): void;
declare function SetNetworkVehicleRespotTimer(netId: number, time: number): void;
declare function SetNewWaypoint(x: number, y: number): void;
declare function SetNextDesiredMoveState(p0: number): void;
declare function SetNextPlayerTcmodifier(modifierName: string): void;
declare function N_0xbf59707b3e5ed531(modifierName: string): void;
declare function SetNightvision(toggle: boolean): void;
declare function SetNoLoadingScreen(toggle: boolean): void;
declare function SetNoiseoveride(toggle: boolean): void;
declare function SetNoisinessoveride(value: number): void;
declare function SetNuiFocus(hasFocus: boolean, hasCursor: boolean): void;
declare function SetNuiFocusKeepInput(keepInput: boolean): void;
declare function SetNumberOfParkedVehicles(value: number): void;
declare function SetObjectAllowLowLodBuoyancy(object: number, toggle: boolean): void;
declare function N_0x4d89d607cb3dd1d2(object: number, toggle: boolean): void;
declare function SetObjectCanClimbOn(object: number, toggle: boolean): void;
declare function SetObjectAsNoLongerNeeded(object: number): void;
declare function SetObjectForceVehiclesToAvoid(object: number, toggle: boolean): void;
declare function N_0x77f33f2ccf64b3aa(object: number, toggle: boolean): void;
declare function SetObjectSomething(object: number, toggle: boolean): void;
declare function SetObjectLightColor(object: number, p1: boolean, r: number, g: number, b: number): number;
declare function SetObjectPhysicsParams(object: number, mass: number, gravityFactor: number, linearC: number, linearV: number, linearV2: number, angularC: number, angularV: number, angularV2: number, p9: number, maxAngSpeed: number, buoyancyFactor: number): void;
declare function SetObjectStuntPropDuration(object: number, duration: number): void;
declare function N_0xdf6ca0330f2e737b(object: number, duration: number): void;
declare function SetObjectStuntPropSpeedup(object: number, intensity: number): void;
declare function N_0x96ee0eba0163df80(object: number, intensity: number): void;
declare function SetObjectTargettable(object: number, targettable: boolean): void;
declare function SetObjectTextureVariation(object: number, textureVariation: number): void;
declare function N_0x971da0055324d033(object: number, textureVariation: number): void;
declare function SetObjectTextureVariant(object: number, textureVariation: number): void;
declare function SetOpenRearDoorsOnExplosion(vehicle: number, toggle: boolean): void;
declare function N_0x1b212b26dd3c04df(vehicle: number, toggle: boolean): void;
declare function SetOppressorTransformState(vehicle: number, extend: boolean): void;
declare function N_0x544996c0081abdeb(vehicle: number, extend: boolean): void;
declare function SetOverrideWeather(weatherType: string): void;
declare function SetPadShake(padIndex: number, duration: number, frequency: number): void;
declare function SetParachuteTaskTarget(ped: number, x: number, y: number, z: number): void;
declare function SetParachuteTaskThrust(ped: number, thrust: number): void;
declare function SetParkedVehicleDensityMultiplierThisFrame(multiplier: number): void;
declare function SetParticleFxBulletImpactScale(scale: number): void;
declare function N_0x27e32866e9a5c416(scale: number): void;
declare function SetParticleFxCamInsideNonplayerVehicle(vehicle: number, p1: boolean): void;
declare function SetParticleFxCamInsideVehicle(p0: boolean): void;
declare function SetParticleFxLoopedAlpha(ptfxHandle: number, alpha: number): void;
declare function SetParticleFxLoopedColour(ptfxHandle: number, r: number, g: number, b: number, p4: boolean): void;
declare function SetParticleFxLoopedEvolution(ptfxHandle: number, propertyName: string, amount: number, noNetwork: boolean): void;
declare function SetParticleFxLoopedFarClipDist(ptfxHandle: number, range: number): void;
declare function SetParticleFxLoopedRange(ptfxHandle: number, range: number): void;
declare function SetParticleFxLoopedOffsets(ptfxHandle: number, x: number, y: number, z: number, rotX: number, rotY: number, rotZ: number): void;
declare function SetParticleFxLoopedScale(ptfxHandle: number, scale: number): void;
declare function SetParticleFxNonLoopedAlpha(alpha: number): void;
declare function SetParticleFxNonLoopedColour(r: number, g: number, b: number): void;
declare function SetParticleFxNonLoopedEmitterScale(p0: number, p1: number, scale: number): void;
declare function SetParticleFxOverride(oldAsset: string, newAsset: string): void;
declare function SetPtfxAssetOld_2New(oldAsset: string, newAsset: string): void;
declare function SetParticleFxAssetOldToNew(oldAsset: string, newAsset: string): void;
declare function SetParticleFxShootoutBoat(p0: number): void;
declare function SetPauseMenuActive(toggle: boolean): void;
declare function SetPauseMenuPedLighting(state: boolean): void;
declare function N_0x3ca6050692bc61b0(state: boolean): void;
declare function SetPauseMenuPedSleepState(state: boolean): void;
declare function N_0xecf128344e9ff9f1(state: boolean): void;
declare function SetPedAccuracy(ped: number, accuracy: number): void;
declare function SetPedAiBlipForcedOn(ped: number, toggle: boolean): void;
declare function N_0x0c4bbf625ca98c4e(ped: number, toggle: boolean): void;
declare function IsAiBlipAlwaysShown(ped: number, toggle: boolean): void;
declare function SetPedAiBlipGangId(ped: number, gangId: number): void;
declare function N_0xe52b8e7f85d39a08(ped: number, gangId: number): void;
declare function SetAiBlipType(ped: number, gangId: number): void;
declare function SetPedAiBlipHasCone(ped: number, toggle: boolean): void;
declare function HideSpecialAbilityLockonOperation(ped: number, toggle: boolean): void;
declare function SetPedAiBlipNoticeRange(ped: number, range: number): void;
declare function N_0x97c65887d4b37fa9(ped: number, range: number): void;
declare function SetAiBlipMaxDistance(ped: number, range: number): void;
declare function SetPedAiBlipSprite(ped: number, spriteId: number): void;
declare function N_0xfcfacd0db9d7a57d(ped: number, spriteId: number): void;
declare function SetPedAlertness(ped: number, value: number): void;
declare function SetPedAllowVehiclesOverride(ped: number, toggle: boolean): void;
declare function SetPedAllowedToDuck(ped: number, toggle: boolean): void;
declare function SetPedAlternateMovementAnim(ped: number, stance: number, animDictionary: string, animationName: string, p4: number, p5: boolean): void;
declare function SetPedAlternateWalkAnim(ped: number, animDict: string, animName: string, p3: number, p4: boolean): void;
declare function SetPedAmmo(ped: number, weaponHash: number, ammo: number): void;
declare function SetPedAmmoByType(ped: number, ammoType: number, ammo: number): void;
declare function SetPedAmmoToDrop(ped: number, ammo: number): void;
declare function SetPedAngledDefensiveArea(ped: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: boolean, p9: boolean): void;
declare function SetPedAoBlobRendering(ped: number, toggle: boolean): void;
declare function N_0x2b5aa717a181fb4c(ped: number, toggle: boolean): void;
declare function SetPedArmour(ped: number, amount: number): void;
declare function SetPedAsCop(ped: number, toggle: boolean): void;
declare function SetPedAsEnemy(ped: number, toggle: boolean): void;
declare function SetPedAsGroupLeader(ped: number, groupId: number): void;
declare function SetPedAsGroupMember(ped: number, groupId: number): void;
declare function SetPedAsNoLongerNeeded(ped: number): void;
declare function SetPedAudioFootstepLoud(ped: number, toggle: boolean): void;
declare function N_0x0653b735bfbdfe87(ped: number, toggle: boolean): void;
declare function SetPedAudioFootstepQuiet(ped: number, toggle: boolean): void;
declare function N_0x29da3ca8d8b2692d(ped: number, toggle: boolean): void;
declare function SetPedAudioGender(ped: number, p1: boolean): void;
declare function N_0xa5342d390cda41d6(ped: number, p1: boolean): void;
declare function SetPedBlendFromParents(ped: number, father: number, mother: number, fathersSide: number, mothersSide: number): void;
declare function SetPedBlocksPathingWhenDead(ped: number, toggle: boolean): void;
declare function N_0x576594e8d64375e2(ped: number, toggle: boolean): void;
declare function SetPedBoundsOrientation(ped: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function SetPedCanArmIk(ped: number, toggle: boolean): void;
declare function SetPedCanBeDraggedOut(ped: number, toggle: boolean): void;
declare function SetPedCanBeKnockedOffVehicle(ped: number, state: number): void;
declare function SetPedCanBeShotInVehicle(ped: number, toggle: boolean): void;
declare function SetPedCanBeTargetedWhenInjured(ped: number, toggle: boolean): void;
declare function SetPedCanBeTargetedWithoutLos(ped: number, toggle: boolean): void;
declare function SetPedCanBeTargetted(ped: number, toggle: boolean): void;
declare function SetPedCanBeTargettedByPlayer(ped: number, player: number, toggle: boolean): void;
declare function SetPedCanBeTargettedByTeam(ped: number, team: number, toggle: boolean): void;
declare function SetPedCanCowerInCover(ped: number, toggle: boolean): void;
declare function SetPedCanEvasiveDive(ped: number, toggle: boolean): void;
declare function SetPedCanHeadIk(ped: number, toggle: boolean): void;
declare function SetPedCanLegIk(ped: number, toggle: boolean): void;
declare function SetPedCanLosePropsOnDamage(ped: number, loseProps: boolean, p2: number): void;
declare function N_0xe861d0b05c7662b8(ped: number, loseProps: boolean, p2: number): void;
declare function SetPedCanPeekInCover(ped: number, toggle: boolean): void;
declare function SetPedCanPlayAmbientAnims(ped: number, toggle: boolean): void;
declare function SetPedCanPlayAmbientBaseAnims(ped: number, toggle: boolean): void;
declare function SetPedCanPlayAmbientIdles(ped: number, p1: boolean, p2: boolean): void;
declare function N_0x8fd89a6240813fd0(ped: number, p1: boolean, p2: boolean): void;
declare function SetPedCanPlayGestureAnims(ped: number, toggle: boolean): void;
declare function SetPedCanPlayInjuredAnims(ped: number, p1: boolean): void;
declare function N_0x33a60d8bdd6e508c(ped: number, p1: boolean): void;
declare function SetPedCanPlayVisemeAnims(ped: number, toggle: boolean, p2: boolean): void;
declare function SetPedCanRagdoll(ped: number, toggle: boolean): void;
declare function SetPedCanRagdollFromPlayerImpact(ped: number, toggle: boolean): void;
declare function SetPedCanSmashGlass(ped: number, p1: boolean, p2: boolean): void;
declare function SetPedCanSwitchWeapon(ped: number, toggle: boolean): void;
declare function SetPedCanTeleportToGroupLeader(pedHandle: number, groupHandle: number, toggle: boolean): void;
declare function SetPedCanTorsoIk(ped: number, toggle: boolean): void;
declare function SetPedCanTorsoReactIk(ped: number, p1: boolean): void;
declare function N_0xf5846edb26a98a24(ped: number, p1: boolean): void;
declare function SetPedCanTorsoVehicleIk(ped: number, p1: boolean): void;
declare function N_0x6647c5f6f5792496(ped: number, p1: boolean): void;
declare function SetPedCanUseAutoConversationLookat(ped: number, toggle: boolean): void;
declare function SetPedCapsule(ped: number, value: number): void;
declare function SetPedChanceOfFiringBlanks(ped: number, xBias: number, yBias: number): void;
declare function SetPedClothPackageIndex(ped: number, p1: number): void;
declare function N_0x78c4e9961db3eb5b(ped: number, p1: number): void;
declare function SetPedClothProne(p0: number, p1: number): void;
declare function N_0x82a3d6d9cc2cb8e3(p0: number, p1: number): void;
declare function SetPedCombatAbility(ped: number, p1: number): void;
declare function SetPedCombatAttributes(ped: number, attributeIndex: number, enabled: boolean): void;
declare function SetPedCombatMovement(ped: number, combatMovement: number): void;
declare function SetPedCombatRange(ped: number, p1: number): void;
declare function SetPedComponentVariation(ped: number, componentId: number, drawableId: number, textureId: number, paletteId: number): void;
declare function SetPedConfigFlag(ped: number, flagId: number, value: boolean): void;
declare function SetPedCoordsKeepVehicle(ped: number, posX: number, posY: number, posZ: number): void;
declare function SetPedCoordsNoGang(ped: number, posX: number, posY: number, posZ: number): void;
declare function SetPedCoverClipsetOverride(ped: number, p1: string): void;
declare function N_0x9dba107b4937f809(ped: number, p1: string): void;
declare function SetPedCowerHash(ped: number, p1: string): void;
declare function SetPedCurrentWeaponVisible(ped: number, visible: boolean, deselectWeapon: boolean, p3: boolean, p4: boolean): void;
declare function SetPedDefaultComponentVariation(ped: number): void;
declare function SetPedDefensiveAreaAttachedToPed(ped: number, attachPed: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: boolean, p10: boolean): void;
declare function SetPedDefensiveAreaDirection(ped: number, p1: number, p2: number, p3: number, p4: boolean): void;
declare function SetPedDefensiveSphereAttachedToPed(ped: number, target: number, xOffset: number, yOffset: number, zOffset: number, radius: number, p6: boolean): void;
declare function N_0xf9b8f91aad3b953e(ped: number, target: number, xOffset: number, yOffset: number, zOffset: number, radius: number, p6: boolean): void;
declare function SetPedDefensiveSphereAttachedToVehicle(ped: number, target: number, xOffset: number, yOffset: number, zOffset: number, radius: number, p6: boolean): void;
declare function N_0xe4723db6e736ccff(ped: number, target: number, xOffset: number, yOffset: number, zOffset: number, radius: number, p6: boolean): void;
declare function SetPedDensityMultiplierThisFrame(multiplier: number): void;
declare function SetPedDesiredHeading(ped: number, heading: number): void;
declare function SetPedDesiredMoveBlendRatio(ped: number, p1: number): void;
declare function SetPedDiesInSinkingVehicle(ped: number, toggle: boolean): void;
declare function SetPedDiesInVehicle(ped: number, toggle: boolean): void;
declare function SetPedDiesInWater(ped: number, toggle: boolean): void;
declare function SetPedDiesInstantlyInWater(ped: number, toggle: boolean): void;
declare function SetPedDiesWhenInjured(ped: number, toggle: boolean): void;
declare function SetPedDriveByClipsetOverride(ped: number, clipset: string): void;
declare function SetPedDropsInventoryWeapon(ped: number, weaponHash: number, xOffset: number, yOffset: number, zOffset: number, ammoCount: number): void;
declare function SetPedDropsWeapon(ped: number): void;
declare function SetPedDropsWeaponsWhenDead(ped: number, toggle: boolean): void;
declare function SetPedDucking(ped: number, toggle: boolean): void;
declare function SetPedEmissiveIntensity(ped: number, intensity: number): void;
declare function N_0x4e90d746056e273d(ped: number, intensity: number): void;
declare function SetPedIlluminatedClothingGlowIntensity(ped: number, intensity: number): void;
declare function SetPedEnableWeaponBlocking(ped: number, toggle: boolean): void;
declare function SetPedEnveffColorModulator(ped: number, r: number, g: number, b: number): void;
declare function N_0xd69411aa0cebf9e9(ped: number, r: number, g: number, b: number): void;
declare function SetPedEnveffScale(ped: number, value: number): void;
declare function SetPedEyeColor(ped: number, index: number): void;
declare function SetPedFaceFeature(ped: number, index: number, scale: number): void;
declare function SetPedFiringPattern(ped: number, patternHash: number): void;
declare function SetPedFleeAttributes(ped: number, attributeFlags: number, enable: boolean): void;
declare function SetPedGadget(ped: number, gadgetHash: number, p2: boolean): void;
declare function SetPedGeneratesDeadBodyEvents(ped: number, toggle: boolean): void;
declare function SetPedGestureGroup(ped: number, animGroupGesture: string): void;
declare function SetPedGetOutUpsideDownVehicle(ped: number, toggle: boolean): void;
declare function SetPedGravity(ped: number, toggle: boolean): void;
declare function SetPedGroupMemberPassengerIndex(ped: number, index: number): void;
declare function SetPedHairColor(ped: number, colorID: number, highlightColorID: number): void;
declare function SetPedHasAiBlip(ped: number, hasCone: boolean): void;
declare function N_0xd30c50df888d58b5(ped: number, hasCone: boolean): void;
declare function SetPedEnemyAiBlip(ped: number, hasCone: boolean): void;
declare function SetPedAiBlip(ped: number, hasCone: boolean): void;
declare function SetPedHasAiBlipWithColor(ped: number, hasCone: boolean, color: number): void;
declare function N_0xb13dcb4c6faad238(ped: number, hasCone: boolean, color: number): void;
declare function SetPedHeadBlendData(ped: number, shapeFirstID: number, shapeSecondID: number, shapeThirdID: number, skinFirstID: number, skinSecondID: number, skinThirdID: number, shapeMix: number, skinMix: number, thirdMix: number, isParent: boolean): void;
declare function SetPedHeadOverlay(ped: number, overlayID: number, index: number, opacity: number): void;
declare function SetPedHeadOverlayColor(ped: number, overlayID: number, colorType: number, colorID: number, secondColorID: number): void;
declare function SetPedHearingRange(ped: number, value: number): void;
declare function SetPedHeatscaleOverride(ped: number, heatScale: number): void;
declare function N_0xc1f6ebf9a3d55538(ped: number, heatScale: number): void;
declare function SetPedHelmet(ped: number, canWearHelmet: boolean): void;
declare function SetPedHelmetFlag(ped: number, helmetFlag: number): void;
declare function SetPedHelmetPropIndex(ped: number, propIndex: number): void;
declare function SetPedHelmetTextureIndex(ped: number, textureIndex: number): void;
declare function SetPedHelmetUnk(ped: number, p1: boolean, p2: number, p3: number): void;
declare function N_0x3f7325574e41b44d(ped: number, p1: boolean, p2: number, p3: number): void;
declare function SetPedHighlyPerceptive(ped: number, toggle: boolean): void;
declare function N_0x52d59ab61ddc05dd(ped: number, toggle: boolean): void;
declare function SetPedIdRange(ped: number, value: number): void;
declare function SetPedInVehicleContext(ped: number, context: number): void;
declare function SetPedIncreasedAvoidanceRadius(ped: number): void;
declare function N_0x570389d1c3de3c6b(ped: number): void;
declare function SetPedInfiniteAmmo(ped: number, toggle: boolean, weaponHash: number): void;
declare function SetPedInfiniteAmmoClip(ped: number, toggle: boolean): void;
declare function SetPedIntoVehicle(ped: number, vehicle: number, seatIndex: number): void;
declare function SetPedIsDrunk(ped: number, toggle: boolean): void;
declare function SetPedKeepTask(ped: number, toggle: boolean): void;
declare function SetPedLegIkMode(ped: number, mode: number): void;
declare function SetPedLodMultiplier(ped: number, multiplier: number): void;
declare function SetPedMaxHealth(ped: number, value: number): void;
declare function SetPedMaxMoveBlendRatio(ped: number, value: number): void;
declare function SetPedMaxTimeInWater(ped: number, value: number): void;
declare function SetPedMaxTimeUnderwater(ped: number, value: number): void;
declare function SetPedMinGroundTimeForStungun(ped: number, ms: number): void;
declare function SetPedMinMoveBlendRatio(ped: number, value: number): void;
declare function SetPedModelIsSuppressed(model: number, toggle: boolean): void;
declare function SetPedModelPersonality(modelHash: number, personalityHash: number): void;
declare function SetPedMoney(ped: number, amount: number): void;
declare function SetPedMotionBlur(ped: number, toggle: boolean): void;
declare function SetPedMoveAnimsBlendOut(ped: number): void;
declare function SetPedMoveRateOverride(ped: number, value: number): void;
declare function SetPedMovementClipset(ped: number, clipSet: string, transitionSpeed: number): void;
declare function SetPedNameDebug(ped: number, name: string): void;
declare function SetPedNeverLeavesGroup(ped: number, toggle: boolean): void;
declare function SetPedNonCreationArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
declare function SetPedPanicExitScenario(ped: number, x: number, y: number, z: number): number;
declare function N_0xfe07ff6495d52e2a(ped: number, x: number, y: number, z: number): number;
declare function SetPedParachuteTintIndex(ped: number, tintIndex: number): void;
declare function SetPedPathAvoidFire(ped: number, avoidFire: boolean): void;
declare function SetPedPathCanDropFromHeight(ped: number, Toggle: boolean): void;
declare function SetPedPathCanUseClimbovers(ped: number, Toggle: boolean): void;
declare function SetPedPathCanUseLadders(ped: number, Toggle: boolean): void;
declare function SetPedPathClimbCostModifier(ped: number, modifier: number): void;
declare function N_0x88e32db8c1a4aa4b(ped: number, modifier: number): void;
declare function SetPedPathMayEnterWater(ped: number, mayEnterWater: boolean): void;
declare function SetPedPathsWidthPlant(ped: number, mayEnterWater: boolean): void;
declare function SetPedPathPreferToAvoidWater(ped: number, avoidWater: boolean): void;
declare function SetPedPathsBackToOriginal(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function SetPedPathsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, unknown: boolean): void;
declare function SetPedPinnedDown(ped: number, pinned: boolean, i: number): number;
declare function SetPedPlaysHeadOnHornAnimWhenDiesInVehicle(ped: number, toggle: boolean): void;
declare function SetPedPopulationBudget(p0: number): void;
declare function SetPedPreferredCoverSet(ped: number, itemSet: number): void;
declare function N_0x8421eb4da7e391b9(ped: number, itemSet: number): void;
declare function SetPedPreloadPropData(ped: number, componentId: number, drawableId: number, textureId: number): boolean;
declare function N_0x2b16a3bff1fbce49(ped: number, componentId: number, drawableId: number, textureId: number): boolean;
declare function IsPedPropValid(ped: number, componentId: number, drawableId: number, textureId: number): boolean;
declare function SetPedPreloadVariationData(ped: number, slot: number, drawableId: number, textureId: number): number;
declare function N_0x39d55a620fcb6a3a(ped: number, slot: number, drawableId: number, textureId: number): number;
declare function SetPedPrimaryLookat(ped: number, lookAt: number): void;
declare function SetPedPropIndex(ped: number, componentId: number, drawableId: number, textureId: number, attach: boolean): void;
declare function SetPedRagdollForceFall(ped: number): void;
declare function SetPedRagdollOnCollision(ped: number, toggle: boolean): void;
declare function SetPedRandomComponentVariation(ped: number, p1: number): void;
declare function SetPedRandomProps(ped: number): void;
declare function SetPedRelationshipGroupDefaultHash(ped: number, hash: number): void;
declare function SetPedRelationshipGroupHash(ped: number, hash: number): void;
declare function SetPedReserveParachuteTintIndex(ped: number, p1: number): void;
declare function SetPedResetFlag(ped: number, flagId: number, doReset: boolean): void;
declare function SetPedScream(ped: number): void;
declare function N_0x40cf0d12d142a9e8(ped: number): void;
declare function SetPedScubaGearVariation(ped: number): void;
declare function N_0x36c6984c3ed0c911(ped: number): void;
declare function SetPedSeeingRange(ped: number, value: number): void;
declare function SetPedShootOrdnanceWeapon(ped: number, p1: number): number;
declare function N_0xb4c8d77c80c0421e(ped: number, p1: number): number;
declare function SetPedShootRate(ped: number, shootRate: number): void;
declare function SetPedShootsAtCoord(ped: number, x: number, y: number, z: number, toggle: boolean): void;
declare function SetPedShouldPlayDirectedScenarioExit(p0: number, p1: number, p2: number, p3: number): number;
declare function N_0xec6935ebe0847b90(p0: number, p1: number, p2: number, p3: number): number;
declare function SetPedShouldPlayFleeScenarioExit(ped: number, p1: number, p2: number, p3: number): number;
declare function N_0xeeed8fafec331a70(ped: number, p1: number, p2: number, p3: number): number;
declare function SetPedShouldPlayImmediateScenarioExit(ped: number): void;
declare function N_0xf1c03a5352243a30(ped: number): void;
declare function SetPedShouldPlayNormalScenarioExit(ped: number): void;
declare function N_0xa3a9299c4f2adb98(ped: number): void;
declare function SetPedSphereDefensiveArea(ped: number, x: number, y: number, z: number, radius: number, p5: boolean, p6: boolean): void;
declare function SetPedStayInVehicleWhenJacked(ped: number, toggle: boolean): void;
declare function SetPedStealthMovement(ped: number, p1: boolean, action: string): void;
declare function SetPedSteersAroundObjects(ped: number, toggle: boolean): void;
declare function SetPedSteersAroundPeds(ped: number, toggle: boolean): void;
declare function SetPedSteersAroundVehicles(ped: number, toggle: boolean): void;
declare function SetPedStrafeClipset(ped: number, clipSet: string): void;
declare function SetPedSuffersCriticalHits(ped: number, toggle: boolean): void;
declare function SetPedSweat(ped: number, sweat: number): void;
declare function SetPedTalk(ped: number): void;
declare function N_0x4ada3f19be4a6047(ped: number): void;
declare function SetPedTargetLossResponse(ped: number, responseType: number): void;
declare function SetPedToInformRespectedFriends(ped: number, radius: number, maxFriends: number): void;
declare function SetPedToLoadCover(ped: number, toggle: boolean): void;
declare function SetPedToRagdoll(ped: number, time1: number, time2: number, ragdollType: number, p4: boolean, p5: boolean, p6: boolean): boolean;
declare function SetPedToRagdollWithFall(ped: number, time: number, p2: number, ragdollType: number, x: number, y: number, z: number, p7: number, p8: number, p9: number, p10: number, p11: number, p12: number, p13: number): boolean;
declare function SetPedTurningThresholds(min: number, max: number): void;
declare function SetPedUsingActionMode(ped: number, p1: boolean, p2: number, action: string): void;
declare function SetPedVehicleForcedSeatUsage(ped: number, vehicle: number, seatIndex: number, flags: number): void;
declare function N_0x952f06beecd775cc(ped: number, vehicle: number, seatIndex: number, flags: number): void;
declare function SetPedVisualFieldCenterAngle(ped: number, angle: number): void;
declare function SetPedVisualFieldMaxAngle(ped: number, value: number): void;
declare function SetPedVisualFieldMaxElevationAngle(ped: number, angle: number): void;
declare function SetPedVisualFieldMinAngle(ped: number, value: number): void;
declare function SetPedVisualFieldMinElevationAngle(ped: number, angle: number): void;
declare function SetPedVisualFieldPeripheralRange(ped: number, range: number): void;
declare function SetPedVoiceGroup(ped: number, voiceGroupHash: number): void;
declare function N_0x7cdc8c3b89f661b3(ped: number, voiceGroupHash: number): void;
declare function SetPedVoiceGroupRace(ped: number, voiceGroupHash: number): void;
declare function SetPedWaypointRouteOffset(p0: number, p1: number, p2: number, p3: number): number;
declare function SetPedWeaponLiveryColor(ped: number, weaponHash: number, camoComponentHash: number, colorIndex: number): void;
declare function N_0x9fe5633880ecd8ed(ped: number, weaponHash: number, camoComponentHash: number, colorIndex: number): void;
declare function SetPedWeaponMovementClipset(ped: number, clipSet: string): void;
declare function SetPedWeaponTintIndex(ped: number, weaponHash: number, tintIndex: number): void;
declare function SetPedWetnessEnabledThisFrame(ped: number): void;
declare function SetPedWetnessHeight(ped: number, height: number): void;
declare function SetPickupAmmoAmountScaler(p0: number): void;
declare function N_0xe620fd3512a04f18(p0: number): void;
declare function SetPickupGenerationRangeMultiplier(multiplier: number): void;
declare function N_0x318516e02de3ece2(multiplier: number): void;
declare function SetPickupHiddenWhenUncollectable(p0: number, p1: number): void;
declare function N_0x3ed2b83ab2e82799(p0: number, p1: number): void;
declare function SetPickupRegenerationTime(pickup: number, duration: number): void;
declare function SetPickupRopeLengthForCargobob(cargobob: number, length1: number, length2: number, state: boolean): void;
declare function N_0x877c1eaeac531023(cargobob: number, length1: number, length2: number, state: boolean): void;
declare function SetCargobobHookPosition(cargobob: number, length1: number, length2: number, state: boolean): void;
declare function SetPickupUncollectable(p0: number, p1: number): void;
declare function N_0x1c1b69fae509ba97(p0: number, p1: number): void;
declare function SetPlaneEngineHealth(vehicle: number, health: number): void;
declare function N_0x2a86a0475b6a1434(vehicle: number, health: number): void;
declare function SetPlanePropellersHealth(plane: number, health: number): void;
declare function N_0x4c815eb175086f84(plane: number, health: number): void;
declare function SetPlaneResistToExplosion(vehicle: number, toggle: boolean): void;
declare function N_0xe16142b94664defd(vehicle: number, toggle: boolean): void;
declare function SetPlaneSectionDamageScale(vehicle: number, damageSection: number, damageScale: number): void;
declare function N_0x0bbb9a7a8ffe931b(vehicle: number, damageSection: number, damageScale: number): void;
declare function SetPlaneTurbulenceMultiplier(vehicle: number, multiplier: number): void;
declare function N_0xad2d28a1afdff131(vehicle: number, multiplier: number): void;
declare function SetPlaybackSpeed(vehicle: number, speed: number): void;
declare function SetPlaybackToUseAi(vehicle: number, drivingStyle: number): void;
declare function SetPlaybackToUseAiTryToRevertBackLater(vehicle: number, time: number, drivingStyle: number, p3: boolean): void;
declare function SetPlayerAirDefenseZoneFlag(player: number, zoneId: number, enable: boolean): void;
declare function N_0xecdc202b25e5cf48(player: number, zoneId: number, enable: boolean): void;
declare function SetPlayerAngry(ped: number, toggle: boolean): void;
declare function SetPlayerBlipPositionThisFrame(x: number, y: number): void;
declare function SetPlayerBluetoothState(player: number, state: boolean): void;
declare function N_0x5dc40a8869c22141(player: number, state: boolean): void;
declare function SetPlayerCanBeHassledByGangs(player: number, toggle: boolean): void;
declare function SetPlayerCanDoDriveBy(player: number, toggle: boolean): void;
declare function SetPlayerCanLeaveParachuteSmokeTrail(player: number, enabled: boolean): void;
declare function SetPlayerCanUseCover(player: number, toggle: boolean): void;
declare function SetPlayerClothLockCounter(value: number): void;
declare function SetPlayerClothPackageIndex(index: number): void;
declare function SetPlayerClothPinFrames(player: number, p1: number): void;
declare function SetPlayerControl(player: number, bHasControl: boolean, flags: number): void;
declare function SetPlayerFallDistance(player: number, distance: number): void;
declare function N_0xefd79fa81dfba9cb(player: number, distance: number): void;
declare function SetPlayerForceSkipAimIntro(player: number, toggle: boolean): void;
declare function SetPlayerForcedAim(player: number, toggle: boolean): void;
declare function SetPlayerForcedZoom(player: number, toggle: boolean): void;
declare function SetPlayerHasReserveParachute(player: number): void;
declare function SetPlayerHealthRechargeLimit(player: number, limit: number): void;
declare function N_0xc388a0f065f5bc34(player: number, limit: number): void;
declare function SetPlayerHealthRechargeMultiplier(player: number, regenRate: number): void;
declare function SetPlayerHomingRocketDisabled(player: number, p1: boolean): void;
declare function N_0xee4ebdd2593ba844(player: number, p1: boolean): void;
declare function SetPlayerInvincible(player: number, toggle: boolean): void;
declare function SetPlayerInvincibleKeepRagdollEnabled(player: number, toggle: boolean): void;
declare function N_0x6bc97f4f4bb3c04b(player: number, toggle: boolean): void;
declare function SetPlayerInvisibleLocally(player: number, toggle: boolean): void;
declare function SetPlayerIsInAnimalForm(toggle: boolean): void;
declare function N_0x4ebb7e87aa0dbed4(toggle: boolean): void;
declare function ShowPedInPauseMenu(toggle: boolean): void;
declare function SetPlayerIsInDirectorMode(toggle: boolean): void;
declare function N_0x808519373fd336a3(toggle: boolean): void;
declare function SetDirectorMode(toggle: boolean): void;
declare function SetPlayerLeavePedBehind(player: number, toggle: boolean): void;
declare function N_0xff300c7649724a0b(player: number, toggle: boolean): void;
declare function SetPlayerLockon(player: number, toggle: boolean): void;
declare function SetPlayerLockonRangeOverride(player: number, range: number): void;
declare function SetPlayerMaxArmour(player: number, value: number): void;
declare function SetPlayerMaxStamina(playerId: number, maxStamina: number): boolean;
declare function SetPlayerMayNotEnterAnyVehicle(player: number): void;
declare function SetPlayerMayOnlyEnterThisVehicle(player: number, vehicle: number): void;
declare function SetPlayerMeleeWeaponDamageModifier(player: number, modifier: number): void;
declare function SetPlayerMeleeWeaponDefenseModifier(player: number, modifier: number): void;
declare function SetPlayerModel(player: number, model: number): void;
declare function SetPlayerNoiseMultiplier(player: number, multiplier: number): void;
declare function SetPlayerParachuteModelOverride(player: number, model: number): void;
declare function SetPlayerParachutePackModelOverride(player: number, model: number): void;
declare function SetPlayerParachutePackTintIndex(player: number, tintIndex: number): void;
declare function SetPlayerParachuteSmokeTrailColor(player: number, r: number, g: number, b: number): void;
declare function SetPlayerParachuteTintIndex(player: number, tintIndex: number): void;
declare function SetPlayerParachuteVariationOverride(player: number, p1: number, p2: number, p3: number, p4: boolean): void;
declare function SetPlayerReserveParachuteModelOverride(player: number, model: number): void;
declare function SetPlayerReserveParachuteTintIndex(player: number, index: number): void;
declare function SetPlayerResetFlagPreferRearSeats(player: number, flags: number): void;
declare function SetPlayerRockstarEditorDisabled(toggle: boolean): void;
declare function N_0x9d8d44adbba61ef2(toggle: boolean): void;
declare function SetPlayerShortSwitchStyle(style: number): void;
declare function N_0x5f2013f8bc24ee69(style: number): void;
declare function SetPlayerSimulateAiming(player: number, toggle: boolean): void;
declare function SetPlayerSneakingNoiseMultiplier(player: number, multiplier: number): void;
declare function SetPlayerSprint(player: number, toggle: boolean): void;
declare function SetPlayerStamina(playerId: number, stamina: number): boolean;
declare function SetPlayerStealthPerceptionModifier(player: number, value: number): void;
declare function SetPlayerSwitchEstablishingShot(name: string): void;
declare function N_0x0fde9dbfc0a6bc65(name: string): void;
declare function SetPlayerSwitchOutro(cameraCoordX: number, cameraCoordY: number, cameraCoordZ: number, camRotationX: number, camRotationY: number, camRotationZ: number, camFov: number, camFarClip: number, rotationOrder: number): void;
declare function N_0xc208b673ce446b61(cameraCoordX: number, cameraCoordY: number, cameraCoordZ: number, camRotationX: number, camRotationY: number, camRotationZ: number, camFov: number, camFarClip: number, rotationOrder: number): void;
declare function SetPlayerTalkingOverride(player: number, state: boolean): void;
declare function SetPlayerTargetLevel(targetLevel: number): void;
declare function N_0x5702b917b99db1cd(targetLevel: number): void;
declare function SetPlayerTargetingMode(targetMode: number): void;
declare function SetPlayerTcmodifierTransition(value: number): void;
declare function N_0xbdeb86f4d5809204(value: number): void;
declare function SetPlayerTeam(player: number, team: number): void;
declare function SetPlayerUnderwaterTimeRemaining(player: number, percentage: number): number;
declare function N_0xa0d3e4f7aafb7e78(player: number, percentage: number): number;
declare function SetPlayerVehicleDamageModifier(player: number, modifier: number): void;
declare function SetPlayerVehicleDefenseModifier(player: number, modifier: number): void;
declare function SetPlayerVisibleLocally(player: number, toggle: boolean): void;
declare function SetPlayerWantedCentrePosition(player: number, p2: boolean, p3: boolean): Vector3;
declare function SetPlayerWantedLevel(player: number, wantedLevel: number, delayedResponse: boolean): void;
declare function SetPlayerWantedLevelNoDrop(player: number, wantedLevel: number, delayedResponse: boolean): void;
declare function SetPlayerWantedLevelNow(player: number, p1: boolean): void;
declare function SetPlayerWeaponDamageModifier(player: number, modifier: number): void;
declare function SetPlayerWeaponDefenseModifier(player: number, modifier: number): void;
declare function SetPlayerWeaponDefenseModifier_2(player: number, modifier: number): void;
declare function N_0xbcfde9ede4cf27dc(player: number, modifier: number): void;
declare function SetPlayerpadShakesWhenControllerDisabled(toggle: boolean): void;
declare function SetPlayersLastVehicle(vehicle: number): void;
declare function SetPoliceFocusWillTrackVehicle(vehicle: number, p1: boolean): void;
declare function N_0x4e74e62e0a97e901(vehicle: number, p1: boolean): void;
declare function SetPoliceIgnorePlayer(player: number, toggle: boolean): void;
declare function SetPoliceRadarBlips(toggle: boolean): void;
declare function SetPopControlSphereThisFrame(x: number, y: number, z: number, min: number, max: number): void;
declare function N_0xd8c3be3ee94caf2d(x: number, y: number, z: number, min: number, max: number): void;
declare function SetPortalSettingsOverride(p0: string, p1: string): void;
declare function N_0x044dbad7a7fa2be5(p0: string, p1: string): void;
declare function SetProfileSettingPrologueComplete(): void;
declare function N_0xb475f27c6a994d65(): void;
declare function SetRaceTrackRender(toggle: boolean): void;
declare function N_0x1eac5f91bcbc5073(toggle: boolean): void;
declare function SetRadarAsExteriorThisFrame(): void;
declare function SetRadarAsInteriorThisFrame(interior: number, x: number, y: number, heading: number, zoom: number): void;
declare function SetRadarZoom(zoomLevel: number): void;
declare function SetRadarZoomPrecise(zoom: number): void;
declare function RespondingAsTemp(zoom: number): void;
declare function SetRadarZoomToBlip(blip: number, zoom: number): void;
declare function N_0xf98e4b3e56afc7b1(blip: number, zoom: number): void;
declare function SetRadarZoomToDistance(zoom: number): void;
declare function SetRadarZoomLevelThisFrame(zoom: number): void;
declare function SetRadioAutoUnfreeze(toggle: boolean): void;
declare function SetRadioFrontendFadeTime(fadeTime: number): void;
declare function N_0x2c96cdb04fca358e(fadeTime: number): void;
declare function SetRadioStationIsVisible(radioStation: string, toggle: boolean): void;
declare function SetRadioStationMusicOnly(radioStation: string, toggle: boolean): void;
declare function N_0x774bd811f656a122(radioStation: string, toggle: boolean): void;
declare function SetRadioToStationIndex(radioStation: number): void;
declare function SetRadioToStationName(stationName: string): void;
declare function SetRadioTrack(radioStation: string, radioTrack: string): void;
declare function SetRadioTrackMix(radioStationName: string, mixName: string, p2: number): void;
declare function SetRadiusBlipEdge(blip: number, toggle: boolean): void;
declare function N_0x25615540d894b814(blip: number, toggle: boolean): void;
declare function SetRagdollBlockingFlags(ped: number, flags: number): void;
declare function N_0x26695ec767728d84(ped: number, flags: number): void;
declare function SetPedRagdollBlockingFlags(ped: number, flags: number): void;
declare function SetRainLevel(level: number): void;
declare function SetRainFxIntensity(level: number): void;
declare function SetRandomBoats(toggle: boolean): void;
declare function SetRandomBoatsInMp(toggle: boolean): void;
declare function SetRandomEventFlag(toggle: boolean): void;
declare function SetRandomSeed(seed: number): void;
declare function SetRandomTrains(toggle: boolean): void;
declare function SetRandomVehicleDensityMultiplierThisFrame(multiplier: number): void;
declare function SetRandomWeatherType(): void;
declare function SetReduceDriftVehicleSuspension(vehicle: number, enable: boolean): void;
declare function SetReducePedModelBudget(toggle: boolean): void;
declare function SetReduceVehicleModelBudget(toggle: boolean): void;
declare function SetRelationshipBetweenGroups(relationship: number, group1: number, group2: number): void;
declare function SetRelationshipGroupDontAffectWantedLevel(group: number, p1: boolean): void;
declare function N_0x5615e0c5eb2bc6e2(group: number, p1: boolean): void;
declare function SetRelationshipToPlayer(player: number, p1: boolean): void;
declare function N_0xa7c511fa1c5bda38(player: number, p1: boolean): void;
declare function SetRenderHdOnly(toggle: boolean): void;
declare function N_0x40aefd1a244741f2(toggle: boolean): void;
declare function SetRenderTrainAsDerailed(train: number, toggle: boolean): void;
declare function SetResourceKvp(key: string, value: string): void;
declare function SetResourceKvpFloat(key: string, value: number): void;
declare function SetResourceKvpInt(key: string, value: number): void;
declare function SetRestartCustomPosition(x: number, y: number, z: number, heading: number): void;
declare function N_0x706b5edcaa7fa663(x: number, y: number, z: number, heading: number): void;
declare function SetCustomRespawnPosition(x: number, y: number, z: number, heading: number): void;
declare function SetRichPresence(presenceState: string): void;
declare function SetRiotModeEnabled(toggle: boolean): void;
declare function N_0x2587a48bc88dfadf(toggle: boolean): void;
declare function SetRoadsBackToOriginal(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function SetRoadsBackToOriginalInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): void;
declare function SetRoadsInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, unknown1: boolean, unknown2: boolean, unknown3: boolean): void;
declare function SetRoadsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, nodeEnabled: boolean, unknown2: boolean): void;
declare function SetRopeLengthChangeRate(rope: number, lengthChangeRate: number): void;
declare function SetRopesCreateNetworkWorldState(shouldCreate: boolean): void;
declare function SetRunSprintMultiplierForPlayer(player: number, multiplier: number): void;
declare function SetRuntimeTextureArgbData(tex: number, buffer: string, length: number): boolean;
declare function SetRuntimeTextureImage(tex: number, fileName: string): boolean;
declare function SetRuntimeTexturePixel(tex: number, x: number, y: number, r: number, g: number, b: number, a: number): void;
declare function SetSaveHouse(p0: number, p1: boolean, p2: boolean): void;
declare function SetSaveMenuActive(ignoreVehicle: boolean): void;
declare function SetSaveMigrationTransactionId(transactionId: number): void;
declare function N_0xf6792800ac95350d(transactionId: number): void;
declare function SetScaleformFitRendertarget(scaleformHandle: number, toggle: boolean): void;
declare function N_0xe6a9f00d4240b519(scaleformHandle: number, toggle: boolean): void;
declare function SetScaleformMovieAsNoLongerNeeded(scaleformHandle: number): void;
declare function SetScaleformMovieToUseSystemTime(scaleform: number, toggle: boolean): void;
declare function SetScenarioGroupEnabled(scenarioGroup: string, p1: boolean): void;
declare function SetScenarioPedDensityMultiplierThisFrame(p0: number, p1: number): void;
declare function SetScenarioPedsSpawnInSphereArea(x: number, y: number, z: number, range: number, p4: number): void;
declare function SetScenarioPedsToBeReturnedByNextCommand(value: boolean): void;
declare function SetScenarioTypeEnabled(scenarioType: string, toggle: boolean): void;
declare function SetScriptAsNoLongerNeeded(scriptName: string): void;
declare function SetScriptGfxAlign(horizontalAlign: number, verticalAlign: number): void;
declare function SetScreenDrawPosition(horizontalAlign: number, verticalAlign: number): void;
declare function ScreenDrawPositionBegin(horizontalAlign: number, verticalAlign: number): void;
declare function SetScriptGfxAlignParams(x: number, y: number, w: number, h: number): void;
declare function N_0xf5a2c681787e579d(x: number, y: number, w: number, h: number): void;
declare function ScreenDrawPositionRatio(x: number, y: number, w: number, h: number): void;
declare function SetScriptGfxDrawBehindPausemenu(flag: boolean): void;
declare function N_0xc6372ecd45d73bcd(flag: boolean): void;
declare function SetScriptGfxDrawOrder(order: number): void;
declare function N_0x61bb1d9b3a95d802(order: number): void;
declare function Set_2dLayer(order: number): void;
declare function SetUiLayer(order: number): void;
declare function SetScriptUpdateDoorAudio(doorHash: number, toggle: boolean): void;
declare function N_0x06c0023bed16dd6b(doorHash: number, toggle: boolean): void;
declare function SetScriptVariableHudColour(r: number, g: number, b: number, a: number): void;
declare function N_0xd68a5ff8a3a89874(r: number, g: number, b: number, a: number): void;
declare function SetScriptVariable_2HudColour(r: number, g: number, b: number, a: number): void;
declare function N_0x16a304e6cb2bfab9(r: number, g: number, b: number, a: number): void;
declare function SetScriptVehicleGenerator(vehicleGenerator: number, enabled: boolean): void;
declare function SetScriptWithNameHashAsNoLongerNeeded(scriptHash: number): void;
declare function SetStreamedScriptAsNoLongerNeeded(scriptHash: number): void;
declare function SetScriptedAnimSeatOffset(ped: number, p1: number): void;
declare function SetScriptedConversionCoordThisFrame(x: number, y: number, z: number): void;
declare function SetSeethrough(toggle: boolean): void;
declare function SetSequenceToRepeat(taskSequenceId: number, _repeat: boolean): void;
declare function SetSirenKeepOn(vehicle: number, toggle: boolean): void;
declare function N_0xf584cf8529b51434(vehicle: number, toggle: boolean): void;
declare function SetSirenWithNoDriver(vehicle: number, toggle: boolean): void;
declare function SetSnakeoilForEntry(name: string, path: string, data: string): void;
declare function SetSnowLevel(level: number): void;
declare function SetSocialClubTour(name: string): void;
declare function N_0x9e778248d6685fe0(name: string): void;
declare function SetSpecialAbility(player: number, p1: number): void;
declare function N_0xb214d570ead7f81a(player: number, p1: number): void;
declare function SetSpecialAbilityMultiplier(multiplier: number): void;
declare function SetSpecialFlightModeAllowed(vehicle: number, toggle: boolean): void;
declare function N_0xf1211889df15a763(vehicle: number, toggle: boolean): void;
declare function SetVehicleHoverTransformEnabled(vehicle: number, toggle: boolean): void;
declare function SetSpecialFlightModeRatio(vehicle: number, ratio: number): void;
declare function SetVehicleHoverTransformRatio(vehicle: number, ratio: number): void;
declare function SetSpecialFlightModeTargetRatio(vehicle: number, state: number): void;
declare function N_0x438b3d7ca026fe91(vehicle: number, state: number): void;
declare function SetVehicleTransformState(vehicle: number, state: number): void;
declare function SetVehicleHoverTransformPercentage(vehicle: number, state: number): void;
declare function SetSrlTime(p0: number): void;
declare function SetStateBagValue(bagName: string, keyName: string, valueData: string, valueLength: number, replicated: boolean): void;
declare function SetStateOfClosestDoorOfType(_type: number, x: number, y: number, z: number, locked: boolean, heading: number, p6: boolean): void;
declare function SetStateOfRayfireMapObject(object: number, state: number): void;
declare function N_0x5c29f698d404c5e1(object: number, state: number): void;
declare function SetDesObjectState(object: number, state: number): void;
declare function SetStaticEmitterEnabled(emitterName: string, toggle: boolean): void;
declare function SetStoreEnabled(toggle: boolean): void;
declare function SetStreamedTextureDictAsNoLongerNeeded(textureDict: string): void;
declare function SetStreaming(toggle: boolean): void;
declare function SetStuntJumpsCanTrigger(toggle: boolean): void;
declare function N_0xd79185689f8fd5df(toggle: boolean): void;
declare function SetSubmarineCrushDepths(vehicle: number, toggle: boolean, depth1: number, depth2: number, depth3: number): void;
declare function JitterVehicle(vehicle: number, toggle: boolean, depth1: number, depth2: number, depth3: number): void;
declare function SetSuperJumpThisFrame(player: number): void;
declare function SetSwimMultiplierForPlayer(player: number, multiplier: number): void;
declare function SetSynchronizedAudioEventPositionThisFrame(p0: string, p1: number): void;
declare function N_0x950a154b8dab6185(p0: string, p1: number): void;
declare function SetSynchronizedSceneHoldLastFrame(sceneID: number, toggle: boolean): void;
declare function N_0x394b9cd12435c981(sceneID: number, toggle: boolean): void;
declare function SetSynchronizedSceneOcclusionPortal(sceneID: number, toggle: boolean): void;
declare function SetSynchronizedSceneLooped(sceneID: number, toggle: boolean): void;
declare function SetSynchronizedSceneOrigin(sceneID: number, x: number, y: number, z: number, roll: number, pitch: number, yaw: number, p7: boolean): void;
declare function SetSynchronizedScenePhase(sceneID: number, phase: number): void;
declare function SetSynchronizedSceneRate(sceneID: number, rate: number): void;
declare function SetTaskMoveNetworkSignalBool(ped: number, signalName: string, value: boolean): void;
declare function N_0xb0a6cfd2c69c1088(ped: number, signalName: string, value: boolean): void;
declare function SetTaskPropertyBool(ped: number, signalName: string, value: boolean): void;
declare function SetTaskMoveNetworkSignalFloat(ped: number, signalName: string, value: number): void;
declare function N_0xd5bb4025ae449a4e(ped: number, signalName: string, value: number): void;
declare function SetTaskPropertyFloat(ped: number, signalName: string, value: number): void;
declare function SetTaskMoveNetworkSignalFloat_2(ped: number, signalName: string, value: number): void;
declare function SetTaskVehicleChaseBehaviorFlag(ped: number, flag: number, _set: boolean): void;
declare function SetTaskVehicleChaseIdealPursuitDistance(ped: number, distance: number): void;
declare function SetTaskVehicleGotoPlaneMinHeightAboveTerrain(plane: number, height: number): void;
declare function N_0xb893215d8d4c015b(plane: number, height: number): void;
declare function SetPlaneMinHeightAboveGround(plane: number, height: number): void;
declare function SetPlaneMinHeightAboveTerrain(plane: number, height: number): void;
declare function SetTaxiLights(vehicle: number, state: boolean): void;
declare function SetTeamPickupObject(object: number, p1: number, p2: boolean): void;
declare function SetTextCentre(align: boolean): void;
declare function SetTextChatEnabled(enabled: boolean): boolean;
declare function SetTextColour(red: number, green: number, blue: number, alpha: number): void;
declare function SetTextDropShadow(): void;
declare function SetTextDropshadow(distance: number, r: number, g: number, b: number, a: number): void;
declare function SetTextEdge(p0: number, r: number, g: number, b: number, a: number): void;
declare function SetTextFont(fontType: number): void;
declare function SetTextJustification(justifyType: number): void;
declare function N_0x4e096588b13ffeca(justifyType: number): void;
declare function SetTextLeading(p0: number): void;
declare function SetTextOutline(): void;
declare function SetTextProportional(p0: boolean): void;
declare function SetTextRenderId(renderId: number): void;
declare function SetTextRightJustify(toggle: boolean): void;
declare function SetTextScale(scale: number, size: number): void;
declare function SetTextWrap(start: number, _end: number): void;
declare function SetTextureVariationOfClosestObjectOfType(x: number, y: number, z: number, radius: number, modelHash: number, textureVariation: number): boolean;
declare function N_0xf12e33034d887f66(x: number, y: number, z: number, radius: number, modelHash: number, textureVariation: number): boolean;
declare function SetThirdPersonAimCamNearClipThisUpdate(distance: number): void;
declare function N_0x42156508606de65e(distance: number): void;
declare function SetThirdPersonAimCamNearClip(distance: number): void;
declare function SetThisScriptCanBePaused(toggle: boolean): void;
declare function SetThisScriptCanRemoveBlipsCreatedByAnyScript(toggle: boolean): void;
declare function SetThreadPriority(priority: number): void;
declare function N_0x42b65deef2edf2a1(priority: number): void;
declare function SetTimeScale(timeScale: number): void;
declare function SetTimecycleModifier(modifierName: string): void;
declare function SetTimecycleModifierStrength(strength: number): void;
declare function SetTimecycleModifierVar(modifierName: string, varName: string, value1: number, value2: number): void;
declare function SetTrackedPointInfo(point: number, x: number, y: number, z: number, radius: number): void;
declare function SetTrailerInverseMassScale(vehicle: number, p1: number): void;
declare function N_0x2a8f319b392e7b3f(vehicle: number, p1: number): void;
declare function SetTrailerLegsLowered(): void;
declare function N_0x878c75c09fbdb942(): void;
declare function SetTrailerLegsRaised(vehicle: number): void;
declare function N_0x95cf53b3d687f9fa(vehicle: number): void;
declare function SetTrainCruiseSpeed(train: number, speed: number): void;
declare function SetTrainDoorOpenRatio(train: number, doorIndex: number, ratio: number): void;
declare function SetTrainSpeed(train: number, speed: number): void;
declare function SetTrainTrackSpawnFrequency(trackIndex: number, frequency: number): void;
declare function N_0x21973bbf8d17edfa(trackIndex: number, frequency: number): void;
declare function SetTrainsForceDoorsOpen(forceOpen: boolean): void;
declare function SetTransitionTimecycleModifier(modifierName: string, transition: number): void;
declare function SetTvAudioFrontend(toggle: boolean): void;
declare function SetTvChannel(channel: number): void;
declare function SetTvChannelPlaylist(tvChannel: number, playlistName: string, restart: boolean): void;
declare function N_0xf7b38b8305f1fe8b(tvChannel: number, playlistName: string, restart: boolean): void;
declare function LoadTvChannelSequence(tvChannel: number, playlistName: string, restart: boolean): void;
declare function SetTvChannelPlaylistAtHour(tvChannel: number, playlistName: string, hour: number): void;
declare function N_0x2201c576facaebe8(tvChannel: number, playlistName: string, hour: number): void;
declare function SetTvVolume(volume: number): void;
declare function SetTyreHealth(vehicle: number, wheelIndex: number, health: number): void;
declare function SetTyreSoftnessMultiplier(vehicle: number, wheelIndex: number, multiplier: number): void;
declare function N_0x392183bb9ea57697(vehicle: number, wheelIndex: number, multiplier: number): void;
declare function SetTyreTractionLossMultiplier(vehicle: number, wheelIndex: number, multiplier: number): void;
declare function N_0xc970d0e0fc31d768(vehicle: number, wheelIndex: number, multiplier: number): void;
declare function SetTyreWearMultiplier(vehicle: number, wheelIndex: number, multiplier: number): void;
declare function SetUnkBoolN_0x102ForSubmarineVehicleTask(vehicle: number, value: boolean): void;
declare function SetUnkFloatN_0x104ForSubmarineVehicleTask(vehicle: number, value: number): void;
declare function SetUnkGlobalBoolRelatedToDamage(value: boolean): void;
declare function SetUseHiDof(): void;
declare function SetUseHiDofInCutscene(): void;
declare function SetUseHigherVehicleJumpForce(vehicle: number, toggle: boolean): void;
declare function N_0xf06a16ca55d138d8(vehicle: number, toggle: boolean): void;
declare function SetUseIslandMap(toggle: boolean): void;
declare function SetToggleMinimapHeistIsland(toggle: boolean): void;
declare function SetUseWaypointAsDestination(toggle: boolean): void;
declare function N_0x6cdd58146a436083(toggle: boolean): void;
declare function SetUserRadioControlEnabled(toggle: boolean): void;
declare function SetVariableOnCutsceneAudio(variableName: string, value: number): void;
declare function GetPlayerHeadsetSoundAlternate(variableName: string, value: number): void;
declare function SetVariableOnSound(soundId: number, variableName: string, value: number): void;
declare function SetVariableOnStream(p0: string, p1: number): void;
declare function SetVariableOnUnderWaterStream(variableName: string, value: number): void;
declare function N_0x733adf241531e5c2(variableName: string, value: number): void;
declare function SetVehHasRadioOverride(vehicle: number): void;
declare function N_0x3e45765f3fbb582f(vehicle: number): void;
declare function SetVehRadioStation(vehicle: number, radioStation: string): void;
declare function SetVehicleActAsIfHighSpeedForFragSmashing(vehicle: number, actHighSpeed: boolean): void;
declare function N_0x1f9fb66f3a3842d2(vehicle: number, actHighSpeed: boolean): void;
declare function SetVehicleActiveDuringPlayback(vehicle: number, toggle: boolean): void;
declare function N_0xdffcef48e511db48(vehicle: number, toggle: boolean): void;
declare function SetVehicleActiveForPedNavigation(vehicle: number, toggle: boolean): void;
declare function N_0x21115bcd6e44656a(vehicle: number, toggle: boolean): void;
declare function SetVehicleCloseDoorDeferedAction(vehicle: number, toggle: boolean): void;
declare function SetVehicleAlarm(vehicle: number, state: boolean): void;
declare function SetVehicleAlarmTimeLeft(vehicle: number, time: number): void;
declare function SetVehicleAllowNoPassengersLockon(veh: number, toggle: boolean): void;
declare function SetVehicleAsNoLongerNeeded(vehicle: number): void;
declare function SetVehicleAudioBodyDamageFactor(vehicle: number, intensity: number): void;
declare function N_0x01bb4d577d38bd9e(vehicle: number, intensity: number): void;
declare function SetVehicleAudioEngineDamageFactor(vehicle: number, damageFactor: number): void;
declare function N_0x59e7b488451f4d3a(vehicle: number, damageFactor: number): void;
declare function SetVehicleAutoRepairDisabled(vehicle: number, value: boolean): void;
declare function SetVehicleAutomaticallyAttaches(vehicle: number, p1: boolean, p2: number): number;
declare function SetVehicleBodyHealth(vehicle: number, value: number): void;
declare function SetVehicleBombCount(aircraft: number, bombCount: number): void;
declare function N_0xf4b2ed59deb5d774(aircraft: number, bombCount: number): void;
declare function SetVehicleBombs(aircraft: number, bombCount: number): void;
declare function SetAircraftBombCount(aircraft: number, bombCount: number): void;
declare function SetVehicleBoostActive(vehicle: number, toggle: boolean): void;
declare function SetVehicleBrake(vehicle: number, toggle: boolean): void;
declare function N_0xe4e2fd323574965c(vehicle: number, toggle: boolean): void;
declare function SetVehicleBrakeLights(vehicle: number, toggle: boolean): void;
declare function SetVehicleBulldozerArmPosition(vehicle: number, position: number, p2: boolean): void;
declare function N_0xf8ebccc96adb9fb7(vehicle: number, position: number, p2: boolean): void;
declare function SetVehicleBurnout(vehicle: number, toggle: boolean): void;
declare function SetVehicleCanBeLockedOn(vehicle: number, canBeLockedOn: boolean, unk: boolean): void;
declare function N_0x1dda078d12879eee(vehicle: number, canBeLockedOn: boolean, unk: boolean): void;
declare function SetVehicleCanBeTargetted(vehicle: number, state: boolean): void;
declare function SetVehicleCanBeUsedByFleeingPeds(vehicle: number, toggle: boolean): void;
declare function N_0x300504b23bd3b711(vehicle: number, toggle: boolean): void;
declare function SetVehicleCanBeVisiblyDamaged(vehicle: number, state: boolean): void;
declare function SetVehicleCanBreak(vehicle: number, toggle: boolean): void;
declare function SetVehicleCanDeformWheels(vehicle: number, toggle: boolean): void;
declare function N_0x0cdda42f9e360ca6(vehicle: number, toggle: boolean): void;
declare function SetVehicleCanEngineOperateOnFire(vehicle: number, toggle: boolean): void;
declare function N_0x206bc5dc9d1ac70a(vehicle: number, toggle: boolean): void;
declare function SetVehicleCanLeakOil(vehicle: number, toggle: boolean): void;
declare function N_0x51bb2d88d31a914b(vehicle: number, toggle: boolean): void;
declare function SetVehicleCanLeakPetrol(vehicle: number, toggle: boolean): void;
declare function N_0x192547247864dfdd(vehicle: number, toggle: boolean): void;
declare function SetVehicleCanSaveInGarage(vehicle: number, toggle: boolean): void;
declare function N_0x428baccdf5e26ead(vehicle: number, toggle: boolean): void;
declare function SetVehicleCeilingHeight(vehicle: number, height: number): void;
declare function GetVehicleDeformationGetTree(vehicle: number, height: number): void;
declare function SetVehicleCheatPowerIncrease(vehicle: number, value: number): void;
declare function SetVehicleEngineTorqueMultiplier(vehicle: number, value: number): void;
declare function SetVehicleClutch(vehicle: number, clutch: number): void;
declare function SetVehicleColourCombination(vehicle: number, colorCombination: number): void;
declare function SetVehicleColours(vehicle: number, colorPrimary: number, colorSecondary: number): void;
declare function SetVehicleControlsInverted(vehicle: number, state: boolean): void;
declare function N_0x5b91b229243351a8(vehicle: number, state: boolean): void;
declare function SetVehicleCountermeasureCount(aircraft: number, count: number): void;
declare function N_0x9bda23bf666f0855(aircraft: number, count: number): void;
declare function SetAircraftCountermeasureCount(aircraft: number, count: number): void;
declare function SetVehicleCurrentRpm(vehicle: number, rpm: number): void;
declare function SetVehicleCustomPrimaryColour(vehicle: number, r: number, g: number, b: number): void;
declare function SetVehicleCustomSecondaryColour(vehicle: number, r: number, g: number, b: number): void;
declare function SetVehicleDamage(vehicle: number, xOffset: number, yOffset: number, zOffset: number, damage: number, radius: number, focusOnModel: boolean): void;
declare function SetVehicleDamageModifier(vehicle: number, p1: number): number;
declare function N_0x4e20d2a627011e8e(vehicle: number, p1: number): number;
declare function SetVehicleDashboardColor(vehicle: number, color: number): void;
declare function SetVehicleDashboardColour(vehicle: number, color: number): void;
declare function SetVehicleDeformationFixed(vehicle: number): void;
declare function SetVehicleDensityMultiplierThisFrame(multiplier: number): void;
declare function SetVehicleDirtLevel(vehicle: number, dirtLevel: number): void;
declare function SetVehicleDisableTowing(vehicle: number, toggle: boolean): void;
declare function N_0x2b6747faa9db9d6b(vehicle: number, toggle: boolean): void;
declare function SetVehicleDoorBroken(vehicle: number, doorIndex: number, deleteDoor: boolean): void;
declare function SetVehicleDoorCanBreak(vehicle: number, doorIndex: number, isBreakable: boolean): void;
declare function SetVehicleDoorBreakable(vehicle: number, doorIndex: number, isBreakable: boolean): void;
declare function SetVehicleDoorControl(vehicle: number, doorIndex: number, speed: number, angle: number): void;
declare function SetVehicleDoorLatched(vehicle: number, doorIndex: number, forceClose: boolean, lock: boolean, p4: boolean): void;
declare function SetVehicleDoorOpen(vehicle: number, doorIndex: number, loose: boolean, openInstantly: boolean): void;
declare function SetVehicleDoorShut(vehicle: number, doorIndex: number, closeInstantly: boolean): void;
declare function SetVehicleDoorsLocked(vehicle: number, doorLockStatus: number): void;
declare function SetVehicleDoorsLockedForAllPlayers(vehicle: number, toggle: boolean): void;
declare function SetVehicleDoorsLockedForNonScriptPlayers(vehicle: number, toggle: boolean): void;
declare function N_0x9737a37136f07e75(vehicle: number, toggle: boolean): void;
declare function SetVehicleDoorsLockedForPlayer(vehicle: number, player: number, toggle: boolean): void;
declare function SetVehicleDoorsLockedForTeam(vehicle: number, team: number, toggle: boolean): void;
declare function SetVehicleDoorsLockedForUnk(vehicle: number, toggle: boolean): void;
declare function SetVehicleDoorsShut(vehicle: number, closeInstantly: boolean): void;
declare function SetVehicleDropsMoneyWhenBlownUp(vehicle: number, toggle: boolean): void;
declare function N_0x068f64f2470f9656(vehicle: number, toggle: boolean): void;
declare function SetVehicleCreatesMoneyPickupsWhenExploded(vehicle: number, toggle: boolean): void;
declare function SetVehicleEngineCanDegrade(vehicle: number, toggle: boolean): void;
declare function SetVehicleEngineHealth(vehicle: number, health: number): void;
declare function SetVehicleEngineOn(vehicle: number, value: boolean, instantly: boolean, disableAutoStart: boolean): void;
declare function SetVehicleEngineTemperature(vehicle: number, temperature: number): void;
declare function SetVehicleEnveffScale(vehicle: number, fade: number): void;
declare function SetVehiclePaintFade(vehicle: number, fade: number): void;
declare function SetVehicleExclusiveDriver(vehicle: number, toggle: boolean): void;
declare function N_0x41062318f23ed854(vehicle: number, toggle: boolean): void;
declare function SetVehicleExclusiveDriver_2(vehicle: number, ped: number, index: number): void;
declare function N_0xb5c51b5502e85e83(vehicle: number, ped: number, index: number): void;
declare function SetVehicleExplodesOnHighExplosionDamage(vehicle: number, toggle: boolean): void;
declare function SetVehicleExtendedRemovalRange(vehicle: number, range: number): void;
declare function N_0x79df7e806202ce01(vehicle: number, range: number): void;
declare function SetVehicleExtra(vehicle: number, extraId: number, disable: boolean): void;
declare function SetVehicleExtraColours(vehicle: number, pearlescentColor: number, wheelColor: number): void;
declare function SetVehicleFixed(vehicle: number): void;
declare function SetVehicleFlightNozzlePosition(vehicle: number, angleRatio: number): void;
declare function N_0x30d779de7c4f6dd3(vehicle: number, angleRatio: number): void;
declare function SetDesiredVerticalFlightPhase(vehicle: number, angleRatio: number): void;
declare function SetPlaneVtolDesiredDirection(vehicle: number, angleRatio: number): void;
declare function SetVehicleFlightNozzlePositionImmediate(vehicle: number, angle: number): void;
declare function N_0x9aa47fff660cb932(vehicle: number, angle: number): void;
declare function SetVerticalFlightPhase(vehicle: number, angle: number): void;
declare function SetPlaneVtolDirection(vehicle: number, angle: number): void;
declare function SetVehicleForceAfterburner(vehicle: number, toggle: boolean): void;
declare function N_0xb055a34527cb8fd7(vehicle: number, toggle: boolean): void;
declare function SetVehicleForwardSpeed(vehicle: number, speed: number): void;
declare function SetVehicleFrictionOverride(vehicle: number, friction: number): void;
declare function SetVehicleFuelLevel(vehicle: number, level: number): void;
declare function SetVehicleFullbeam(vehicle: number, toggle: boolean): void;
declare function SetVehicleGeneratesEngineShockingEvents(vehicle: number, toggle: boolean): void;
declare function N_0x279d50de5652d935(vehicle: number, toggle: boolean): void;
declare function SetVehicleGravity(vehicle: number, toggle: boolean): void;
declare function SetVehicleGravityAmount(vehicle: number, gravity: number): void;
declare function SetVehicleHandbrake(vehicle: number, toggle: boolean): void;
declare function SetVehicleHandlingField(vehicle: number, class_: string, fieldName: string, value: number): void;
declare function SetVehicleHandlingFloat(vehicle: number, class_: string, fieldName: string, value: number): void;
declare function SetVehicleHandlingHashForAi(vehicle: number, hash: number): void;
declare function N_0x10655fab9915623d(vehicle: number, hash: number): void;
declare function SetVehicleHandlingInt(vehicle: number, class_: string, fieldName: string, value: number): void;
declare function SetVehicleHandlingVector(vehicle: number, class_: string, fieldName: string): void;
declare function SetVehicleHasBeenDrivenFlag(vehicle: number, toggle: boolean): void;
declare function N_0x02398b627547189c(vehicle: number, toggle: boolean): void;
declare function SetVehicleHasBeenOwnedByPlayer(vehicle: number, owned: boolean): void;
declare function SetVehicleHasMutedSirens(vehicle: number, toggle: boolean): void;
declare function DisableVehicleImpactExplosionActivation(vehicle: number, toggle: boolean): void;
declare function SetDisableVehicleSirenSound(vehicle: number, toggle: boolean): void;
declare function SetVehicleHasStrongAxles(vehicle: number, toggle: boolean): void;
declare function SetVehicleHasUnbreakableLights(vehicle: number, p1: boolean): void;
declare function N_0x1aa8a837d2169d94(vehicle: number, p1: boolean): void;
declare function SetVehicleLightsCanBeVisiblyDamaged(vehicle: number, p1: boolean): void;
declare function SetVehicleHighGear(vehicle: number, gear: number): void;
declare function SetVehicleHornVariation(vehicle: number, value: number): void;
declare function N_0x0350e7e17ba767d0(vehicle: number, value: number): void;
declare function N_0xcda42c4bb9bde779(vehicle: number, value: number): void;
declare function SetVehicleInactiveDuringPlayback(vehicle: number, toggle: boolean): void;
declare function N_0x06582aff74894c75(vehicle: number, toggle: boolean): void;
declare function SetVehicleIndicatorLights(vehicle: number, turnSignal: number, toggle: boolean): void;
declare function SetVehicleIndividualDoorsLocked(vehicle: number, doorIndex: number, doorLockStatus: number): void;
declare function SetPedTargettableVehicleDestroy(vehicle: number, doorIndex: number, doorLockStatus: number): void;
declare function SetVehicleDoorDestroyType(vehicle: number, doorIndex: number, doorLockStatus: number): void;
declare function SetVehicleInfluencesWantedLevel(vehicle: number, influenceWantedLevel: boolean): void;
declare function N_0x0ad9e8f87ff7c16f(vehicle: number, influenceWantedLevel: boolean): void;
declare function SetVehicleInteriorColor(vehicle: number, color: number): void;
declare function SetVehicleInteriorColour(vehicle: number, color: number): void;
declare function SetVehicleInteriorlight(vehicle: number, toggle: boolean): void;
declare function SetVehicleIsConsideredByPlayer(vehicle: number, toggle: boolean): void;
declare function SetVehicleIsRacing(vehicle: number, toggle: boolean): void;
declare function SteerUnlockBias(vehicle: number, toggle: boolean): void;
declare function SetVehicleIsStolen(vehicle: number, isStolen: boolean): void;
declare function SetVehicleIsWanted(vehicle: number, state: boolean): void;
declare function SetVehicleJetEngineOn(vehicle: number, toggle: boolean): void;
declare function N_0xb8fbc8b1330ca9b4(vehicle: number, toggle: boolean): void;
declare function SetVehicleKersAllowed(vehicle: number, toggle: boolean): void;
declare function N_0x99c82f8a139f3e4e(vehicle: number, toggle: boolean): void;
declare function SetVehicleHudSpecialAbilityBarActive(vehicle: number, toggle: boolean): void;
declare function SetVehicleLightMultiplier(vehicle: number, multiplier: number): void;
declare function SetVehicleLights(vehicle: number, state: number): void;
declare function SetVehicleLightsMode(vehicle: number, p1: number): void;
declare function N_0x1fd09e7390a74d54(vehicle: number, p1: number): void;
declare function SetVehicleLivery(vehicle: number, livery: number): void;
declare function SetVehicleLodMultiplier(vehicle: number, multiplier: number): void;
declare function SetVehicleMaxSpeed(vehicle: number, speed: number): void;
declare function N_0xbaa045b4e42f3c06(vehicle: number, speed: number): void;
declare function SetVehicleMod(vehicle: number, modType: number, modIndex: number, customTires: boolean): void;
declare function SetVehicleModColor_1(vehicle: number, paintType: number, color: number, pearlescentColor: number): void;
declare function SetVehicleModColor_2(vehicle: number, paintType: number, color: number): void;
declare function SetVehicleModKit(vehicle: number, modKit: number): void;
declare function SetVehicleModelIsSuppressed(model: number, suppressed: boolean): void;
declare function SetVehicleNameDebug(vehicle: number, name: string): void;
declare function SetVehicleNeedsToBeHotwired(vehicle: number, toggle: boolean): void;
declare function SetVehicleNeonLightEnabled(vehicle: number, index: number, toggle: boolean): void;
declare function SetVehicleNeonLightsColor_2(vehicle: number, color: number): void;
declare function SetVehicleNeonLightsColour(vehicle: number, r: number, g: number, b: number): void;
declare function SetVehicleNitroEnabled(vehicle: number, toggle: boolean): void;
declare function SetVehicleNumberPlateText(vehicle: number, plateText: string): void;
declare function SetVehicleNumberPlateTextIndex(vehicle: number, plateIndex: number): void;
declare function SetVehicleOilLevel(vehicle: number, level: number): void;
declare function SetVehicleOnGroundProperly(vehicle: number): boolean;
declare function SetVehicleOutOfControl(vehicle: number, killDriver: boolean, explodeOnImpact: boolean): void;
declare function SetVehicleParachuteActive(vehicle: number, active: boolean): void;
declare function SetVehicleParachuteModel(vehicle: number, modelHash: number): void;
declare function VehicleSetCustomParachuteModel(vehicle: number, modelHash: number): void;
declare function SetVehicleParachuteTextureVariation(vehicle: number, textureVariation: number): void;
declare function VehicleSetCustomParachuteTexture(vehicle: number, textureVariation: number): void;
declare function SetVehicleParachuteTextureVariatiion(vehicle: number, textureVariation: number): void;
declare function SetVehiclePetrolTankHealth(vehicle: number, health: number): void;
declare function SetVehiclePitchBias(vehicle: number, value: number): void;
declare function SetVehiclePopulationBudget(p0: number): void;
declare function SetVehicleProvidesCover(vehicle: number, toggle: boolean): void;
declare function SetVehicleRadioEnabled(vehicle: number, toggle: boolean): void;
declare function SetVehicleRadioLoud(vehicle: number, toggle: boolean): void;
declare function SetVehicleRampLaunchModifier(vehicle: number, p1: number): void;
declare function N_0xefc13b1ce30d755d(vehicle: number, p1: number): void;
declare function SetVehicleRampSidewaysLaunchMotion(vehicle: number, toggle: boolean): void;
declare function N_0x1bbac99c0bc53656(vehicle: number, toggle: boolean): void;
declare function SetVehicleRampUpwardsLaunchMotion(vehicle: number, toggle: boolean): void;
declare function N_0x756ae6e962168a04(vehicle: number, toggle: boolean): void;
declare function SetVehicleReceivesRampDamage(vehicle: number, toggle: boolean): void;
declare function SetRampVehicleReceivesRampDamage(vehicle: number, toggle: boolean): void;
declare function SetVehicleReduceGrip(vehicle: number, toggle: boolean): void;
declare function SetVehicleReduceTraction(vehicle: number, val: number): void;
declare function N_0x6dee944e1ee90cfb(vehicle: number, val: number): void;
declare function SetVehicleRocketBoostActive(vehicle: number, active: boolean): void;
declare function SetVehicleRocketBoostPercentage(vehicle: number, percentage: number): void;
declare function SetVehicleRocketBoostRefillTime(vehicle: number, time: number): void;
declare function SetVehicleRollBias(vehicle: number, value: number): void;
declare function SetVehicleRoofLivery(vehicle: number, livery: number): void;
declare function N_0xa6d3a8750dc73270(vehicle: number, livery: number): void;
declare function SetVehicleRudderBroken(vehicle: number, toggle: boolean): void;
declare function SetVehicleSearchlight(heli: number, toggle: boolean, canBeUsedByAI: boolean): void;
declare function SetVehicleShadowEffect(vehicle: number, p1: number, p2: number): void;
declare function N_0xf0e4ba16d1db546c(vehicle: number, p1: number, p2: number): void;
declare function SetVehicleShootAtTarget(driver: number, entity: number, xTarget: number, yTarget: number, zTarget: number): void;
declare function SetVehicleSilent(vehicle: number, toggle: boolean): void;
declare function N_0x9d44fcce98450843(vehicle: number, toggle: boolean): void;
declare function SetVehicleSiren(vehicle: number, toggle: boolean): void;
declare function SetVehicleSt(vehicle: number, toggle: boolean): void;
declare function N_0x1cf38d529d7441d9(vehicle: number, toggle: boolean): void;
declare function SetVehicleStartupRevSound(vehicle: number, p1: string, p2: string): void;
declare function N_0xf1f8157b8c3f171c(vehicle: number, p1: string, p2: string): void;
declare function SetVehicleSteerBias(vehicle: number, value: number): void;
declare function SetVehicleSteeringAngle(vehicle: number, angle: number): void;
declare function SetVehicleSteeringBiasScalar(vehicle: number, scalar: number): void;
declare function N_0x9007a2f21dc108d4(vehicle: number, scalar: number): void;
declare function SetVehicleSteeringScale(vehicle: number, scale: number): void;
declare function SetVehicleStrong(vehicle: number, toggle: boolean): void;
declare function SetVehicleSuspensionHeight(vehicle: number, newHeight: number): void;
declare function SetVehicleTankTurretPosition(vehicle: number, position: number, p2: boolean): void;
declare function N_0x56b94c6d7127dfba(vehicle: number, position: number, p2: boolean): void;
declare function SetVehicleTimedExplosion(vehicle: number, ped: number, toggle: boolean): void;
declare function SetVehicleTowTruckArmPosition(vehicle: number, position: number): void;
declare function SetTowTruckCraneRaised(vehicle: number, position: number): void;
declare function SetTowTruckCraneHeight(vehicle: number, position: number): void;
declare function SetVehicleTurboPressure(vehicle: number, pressure: number): void;
declare function SetVehicleTurretSpeedThisFrame(vehicle: number, speed: number): void;
declare function N_0x1093408b4b9d1146(vehicle: number, speed: number): void;
declare function SetVehicleTurretUnk(vehicle: number, index: number, toggle: boolean): void;
declare function N_0xc60060eb0d8ac7b1(vehicle: number, index: number, toggle: boolean): void;
declare function SetVehicleTyreBurst(vehicle: number, index: number, onRim: boolean, p3: number): void;
declare function SetVehicleTyreFixed(vehicle: number, tyreIndex: number): void;
declare function SetVehicleTyreSmokeColor(vehicle: number, r: number, g: number, b: number): void;
declare function SetVehicleTyresCanBurst(vehicle: number, toggle: boolean): void;
declare function SetVehicleUndriveable(vehicle: number, toggle: boolean): void;
declare function SetVehicleUnkDamageMultiplier(vehicle: number, multiplier: number): void;
declare function N_0x45a561a9421ab6ad(vehicle: number, multiplier: number): void;
declare function SetVehicleUseAlternateHandling(vehicle: number, toggle: boolean): void;
declare function N_0x1d97d1e3a70a649f(vehicle: number, toggle: boolean): void;
declare function SetVehicleUseCutsceneWheelCompression(p0: number, p1: boolean, p2: boolean, p3: boolean): number;
declare function SetAllVehiclesSpawn(p0: number, p1: boolean, p2: boolean, p3: boolean): number;
declare function N_0xe023e8ac4ef7c117(p0: number, p1: boolean, p2: boolean, p3: boolean): number;
declare function SetVehicleUsePlayerLightSettings(vehicle: number, toggle: boolean): void;
declare function N_0xc45c27ef50f36adc(vehicle: number, toggle: boolean): void;
declare function SetVehicleUsesLargeRearRamp(vehicle: number, toggle: boolean): void;
declare function N_0xcac66558b944da67(vehicle: number, toggle: boolean): void;
declare function SetVehicleWeaponCapacity(vehicle: number, weaponIndex: number, capacity: number): void;
declare function N_0x44cd1f493db2a0a6(vehicle: number, weaponIndex: number, capacity: number): void;
declare function SetVehicleWeaponsDisabled(vehicle: number, weaponSlot: number): void;
declare function N_0x86b4b6212cb8b627(vehicle: number, weaponSlot: number): void;
declare function SetVehicleWheelBrakePressure(vehicle: number, wheelIndex: number, pressure: number): void;
declare function SetVehicleWheelFlags(vehicle: number, wheelIndex: number, flags: number): void;
declare function SetVehicleWheelHealth(vehicle: number, wheelIndex: number, health: number): void;
declare function SetVehicleWheelIsPowered(vehicle: number, wheelIndex: number, powered: boolean): void;
declare function SetVehicleWheelPower(vehicle: number, wheelIndex: number, power: number): void;
declare function SetVehicleWheelRimColliderSize(vehicle: number, wheelIndex: number, value: number): void;
declare function SetVehicleWheelRotationSpeed(vehicle: number, wheelIndex: number, speed: number): void;
declare function SetVehicleWheelSize(vehicle: number, size: number): boolean;
declare function SetVehicleWheelTireColliderSize(vehicle: number, wheelIndex: number, value: number): void;
declare function SetVehicleWheelTireColliderWidth(vehicle: number, wheelIndex: number, value: number): void;
declare function SetVehicleWheelTractionVectorLength(vehicle: number, wheelIndex: number, length: number): void;
declare function SetVehicleWheelType(vehicle: number, wheelType: number): void;
declare function SetVehicleWheelWidth(vehicle: number, width: number): boolean;
declare function SetVehicleWheelXOffset(vehicle: number, wheelIndex: number, offset: number): void;
declare function SetVehicleWheelYRotation(vehicle: number, wheelIndex: number, value: number): void;
declare function SetVehicleWheelXrot(vehicle: number, wheelIndex: number, value: number): void;
declare function SetVehicleWheelieState(vehicle: number, state: number): void;
declare function SetVehicleWheelsCanBreak(vehicle: number, enabled: boolean): void;
declare function SetVehicleWheelsCanBreakOffWhenBlowUp(vehicle: number, toggle: boolean): void;
declare function SetVehicleMaxStrTrap(vehicle: number, toggle: boolean): void;
declare function SetVehicleWheelsDealDamage(vehicle: number, toggle: boolean): void;
declare function N_0x2970eaa18fd5e42f(vehicle: number, toggle: boolean): void;
declare function SetVehicleWindowTint(vehicle: number, tint: number): void;
declare function SetVehicleXenonLightsColor(vehicle: number, color: number): void;
declare function N_0xe41033b25d003a07(vehicle: number, color: number): void;
declare function SetVehicleHeadlightsColour(vehicle: number, color: number): void;
declare function SetVehicleXenonLightsColour(vehicle: number, color: number): void;
declare function SetVehicleXenonLightsCustomColor(vehicle: number, red: number, green: number, blue: number): void;
declare function SetVisualSettingFloat(name: string, value: number): void;
declare function SetWantedLevelDifficulty(player: number, difficulty: number): void;
declare function SetWantedLevelHiddenEvasionTime(player: number, wantedLevel: number, lossTime: number): void;
declare function N_0x49b856b1360c47c7(player: number, wantedLevel: number, lossTime: number): void;
declare function SetWantedLevelMultiplier(multiplier: number): void;
declare function SetWarningMessage(entryLine1: string, instructionalKey: number, entryLine2: string, p3: boolean, p4: number, background: string, p6: string, showBg: boolean, errorCode: number): void;
declare function SetWarningMessageListRow(index: number, name: string, cash: number, rp: number, lvl: number, colour: number): boolean;
declare function N_0x0c5a80a9e096d529(index: number, name: string, cash: number, rp: number, lvl: number, colour: number): boolean;
declare function SetWarningMessageWithAlert(labelTitle: string, labelMsg: string, p2: number, p3: number, labelMsg2: string, p5: boolean, p6: number, p7: number, p8: string, p9: string, background: boolean, errorCode: number): void;
declare function N_0x15803fec3b9a872b(labelTitle: string, labelMsg: string, p2: number, p3: number, labelMsg2: string, p5: boolean, p6: number, p7: number, p8: string, p9: string, background: boolean, errorCode: number): void;
declare function DrawFrontendAlert(labelTitle: string, labelMsg: string, p2: number, p3: number, labelMsg2: string, p5: boolean, p6: number, p7: number, p8: string, p9: string, background: boolean, errorCode: number): void;
declare function SetWarningMessageWithHeader(titleMsg: string, entryLine1: string, flags: number, promptMsg: string, p4: boolean, p5: number, background: boolean, showBg: boolean): number;
declare function SetWarningMessage_2(titleMsg: string, entryLine1: string, flags: number, promptMsg: string, p4: boolean, p5: number, background: boolean, showBg: boolean): number;
declare function SetWarningMessageWithHeaderAndSubstringFlags(entryHeader: string, entryLine1: string, instructionalKey: number, entryLine2: string, p4: boolean, p5: number, p6: number, p9: boolean): LuaMultiReturn<[number, number]>;
declare function SetWarningMessage_3(entryHeader: string, entryLine1: string, instructionalKey: number, entryLine2: string, p4: boolean, p5: number, p6: number, p9: boolean): LuaMultiReturn<[number, number]>;
declare function SetWarningMessageWithHeaderUnk(entryHeader: string, entryLine1: string, flags: number, entryLine2: string, p4: boolean, p5: number, showBg: boolean, p9: number, p10: number): LuaMultiReturn<[number, number]>;
declare function SetWaterAreaClipRect(minX: number, minY: number, maxX: number, maxY: number): void;
declare function SetWaterQuadAlpha(waterQuad: number, a0: number, a1: number, a2: number, a3: number): boolean;
declare function SetWaterQuadBounds(waterQuad: number, minX: number, minY: number, maxX: number, maxY: number): boolean;
declare function SetWaterQuadHasLimitedDepth(waterQuad: number, hasLimitedDepth: boolean): boolean;
declare function SetWaterQuadIsInvisible(waterQuad: number, isInvisible: boolean): boolean;
declare function SetWaterQuadLevel(waterQuad: number, level: number): boolean;
declare function SetWaterQuadNoStencil(waterQuad: number, noStencil: boolean): boolean;
declare function SetWaterQuadType(waterQuad: number, _type: number): boolean;
declare function SetWaveQuadAmplitude(waveQuad: number, amplitude: number): boolean;
declare function SetWaveQuadBounds(waveQuad: number, minX: number, minY: number, maxX: number, maxY: number): boolean;
declare function SetWaveQuadDirection(waveQuad: number, directionX: number, directionY: number): boolean;
declare function SetWaypointOff(): void;
declare function SetWeaponAnimationOverride(ped: number, animStyle: number): void;
declare function SetWeaponDamageModifier(weaponHash: number, damageMultiplier: number): void;
declare function N_0x4757f00bc6323cfe(weaponHash: number, damageMultiplier: number): void;
declare function SetWeaponDamageModifierThisFrame(weaponHash: number, damageMultiplier: number): void;
declare function SetWeaponExplosionRadiusMultiplier(weaponHash: number, multiplier: number): void;
declare function SetWeaponObjectLiveryColor(weaponObject: number, camoComponentHash: number, colorIndex: number): void;
declare function N_0x5da825a85d0ea6e6(weaponObject: number, camoComponentHash: number, colorIndex: number): void;
declare function SetWeaponObjectTintIndex(weapon: number, tintIndex: number): void;
declare function SetWeaponRecoilShakeAmplitude(weaponHash: number, amplitude: number): void;
declare function SetWeaponsNoAimBlocking(state: boolean): void;
declare function SetWeaponsNoAutoreload(state: boolean): void;
declare function SetWeaponsNoAutoswap(state: boolean): void;
declare function SetWeatherOwnedByNetwork(network: boolean): void;
declare function SetWeatherTypeNow(weatherType: string): void;
declare function SetWeatherTypeNowPersist(weatherType: string): void;
declare function SetWeatherTypeOvertimePersist(weatherType: string, time: number): void;
declare function SetWeatherTypeOverTime(weatherType: string, time: number): void;
declare function SetWeatherTypePersist(weatherType: string): void;
declare function SetWeatherTypeTransition(weatherType1: number, weatherType2: number, percentWeather2: number): void;
declare function SetWidescreenBorders(p0: boolean, p1: number): void;
declare function SetWidescreenFormat(p0: number): void;
declare function SetWind(speed: number): void;
declare function SetWindDirection(direction: number): void;
declare function SetWindSpeed(speed: number): void;
declare function SetZoneEnabled(zoneId: number, toggle: boolean): void;
declare function Settimera(value: number): void;
declare function Settimerb(value: number): void;
declare function SetupShopPedApparelQuery(p0: number, p1: number, p2: number, p3: number): number;
declare function N_0x50f457823ce6eb5f(p0: number, p1: number, p2: number, p3: number): number;
declare function SetupShopPedApparelQueryTu(character: number, p1: number, p2: number, p3: boolean, p4: number, componentId: number): number;
declare function GetNumPropsFromOutfit(character: number, p1: number, p2: number, p3: boolean, p4: number, componentId: number): number;
declare function SetupShopPedOutfitQuery(character: number, p1: boolean): number;
declare function N_0xf3fbe2d50a6a8c28(character: number, p1: boolean): number;
declare function ShakeCam(cam: number, _type: string, amplitude: number): void;
declare function ShakeCinematicCam(p0: string, p1: number): void;
declare function ShakeGameplayCam(shakeName: string, intensity: number): void;
declare function ShakeScriptGlobal(p0: string, p1: number): void;
declare function N_0xf4c8cf9e353afeca(p0: string, p1: number): void;
declare function ShiftLeft(value: number, bitShift: number): number;
declare function ShiftRight(value: number, bitShift: number): number;
declare function ShootSingleBulletBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, pureAccuracy: boolean, weaponHash: number, ownerPed: number, isAudible: boolean, isInvisible: boolean, speed: number): void;
declare function ShootSingleBulletBetweenCoordsIgnoreEntity(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: boolean, weaponHash: number, ownerPed: number, isAudible: boolean, isInvisible: boolean, speed: number, entity: number): void;
declare function N_0xe3a7742e0b7a2f8b(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: boolean, weaponHash: number, ownerPed: number, isAudible: boolean, isInvisible: boolean, speed: number, entity: number): void;
declare function ShootSingleBulletBetweenCoordsPresetParams(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: boolean, weaponHash: number, ownerPed: number, isAudible: boolean, isInvisible: boolean, speed: number, entity: number): void;
declare function ShootSingleBulletBetweenCoordsIgnoreEntityNew(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: boolean, weaponHash: number, ownerPed: number, isAudible: boolean, isInvisible: boolean, speed: number, entity: number, p14: boolean, p15: boolean, p16: boolean, p17: boolean): void;
declare function N_0xbfe5756e7407064a(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: boolean, weaponHash: number, ownerPed: number, isAudible: boolean, isInvisible: boolean, speed: number, entity: number, p14: boolean, p15: boolean, p16: boolean, p17: boolean): void;
declare function ShootSingleBulletBetweenCoordsWithExtraParams(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: boolean, weaponHash: number, ownerPed: number, isAudible: boolean, isInvisible: boolean, speed: number, entity: number, p14: boolean, p15: boolean, p16: boolean, p17: boolean): void;
declare function ShouldUseMetricMeasurements(): boolean;
declare function N_0xd3d15555431ab793(): boolean;
declare function IsGameUsingMetricMeasurementSystem(): boolean;
declare function ShowCrewIndicatorOnBlip(blip: number, toggle: boolean): void;
declare function N_0xdcfb5d4db8bf367e(blip: number, toggle: boolean): void;
declare function SetBlipCrew(blip: number, toggle: boolean): void;
declare function ShowFriendIndicatorOnBlip(blip: number, toggle: boolean): void;
declare function N_0x23c3eb807312f01a(blip: number, toggle: boolean): void;
declare function SetBlipFriend(blip: number, toggle: boolean): void;
declare function ShowHasCompletedIndicatorOnBlip(blip: number, toggle: boolean): void;
declare function ShowHeadingIndicatorOnBlip(blip: number, toggle: boolean): void;
declare function N_0x5fbca48327b914df(blip: number, toggle: boolean): void;
declare function ShowHeightOnBlip(blip: number, toggle: boolean): void;
declare function N_0x75a16c3da34f1245(blip: number, toggle: boolean): void;
declare function ShowHudComponentThisFrame(id: number): void;
declare function ShowNumberOnBlip(blip: number, _number: number): void;
declare function ShowOutlineIndicatorOnBlip(blip: number, toggle: boolean): void;
declare function N_0xb81656bc81fe24d1(blip: number, toggle: boolean): void;
declare function SetBlipFriendly(blip: number, toggle: boolean): void;
declare function ShowScriptedHudComponentThisFrame(id: number): void;
declare function ShowSigninUi(): void;
declare function N_0x60e892ba4f5bdca4(): void;
declare function ShowStartMissionInstructionalButton(p0: boolean): void;
declare function N_0xf1a6c18b35bcade6(p0: boolean): void;
declare function ShowTickOnBlip(blip: number, toggle: boolean): void;
declare function N_0x74513ea3e505181e(blip: number, toggle: boolean): void;
declare function SetBlipChecked(blip: number, toggle: boolean): void;
declare function ShutdownAndLaunchSinglePlayerGame(): void;
declare function ShutdownAndLoadMostRecentSave(): boolean;
declare function N_0x9eca15adfe141431(): boolean;
declare function ShutdownCreatorBudget(): void;
declare function N_0xcce26000e9a6fad7(): void;
declare function ShutdownLoadingScreen(): void;
declare function ShutdownLoadingScreenNui(): void;
declare function SimulatePlayerInputGait(player: number, amount: number, gaitType: number, rotationSpeed: number, p4: boolean, p5: boolean): void;
declare function Sin(value: number): number;
declare function SkipRadioForward(): void;
declare function SkipTimeInPlaybackRecordedVehicle(vehicle: number, time: number): void;
declare function SkipToEndAndStopPlaybackRecordedVehicle(vehicle: number): void;
declare function SkipToNextScriptedConversationLine(): void;
declare function SlerpNearQuaternion(t: number, x: number, y: number, z: number, w: number, x1: number, y1: number, z1: number, w1: number): LuaMultiReturn<[number, number, number, number]>;
declare function N_0xf2f6a2fa49278625(t: number, x: number, y: number, z: number, w: number, x1: number, y1: number, z1: number, w1: number): LuaMultiReturn<[number, number, number, number]>;
declare function SlideObject(object: number, toX: number, toY: number, toZ: number, speedX: number, speedY: number, speedZ: number, collision: boolean): boolean;
declare function SmashVehicleWindow(vehicle: number, windowIndex: number): void;
declare function SoundVehicleHornThisFrame(vehicle: number): void;
declare function N_0x9c11908013ea4715(vehicle: number): void;
declare function SpawnpointsCancelSearch(): void;
declare function N_0xfee4a5459472a9f8(): void;
declare function SpawnpointsGetNumSearchResults(): number;
declare function N_0xa635c11b8c44afc2(): number;
declare function SpawnpointsGetSearchResult(randomInt: number): LuaMultiReturn<[number, number, number]>;
declare function N_0x280c7e3ac7f56e90(randomInt: number): LuaMultiReturn<[number, number, number]>;
declare function SpawnpointsGetSearchResultFlags(p0: number, p1: number): number;
declare function N_0xb782f8238512bad5(p0: number, p1: number): number;
declare function SpawnpointsIsSearchActive(): boolean;
declare function N_0x3c67506996001f5e(): boolean;
declare function SpawnpointsIsSearchComplete(): boolean;
declare function N_0xa586fbeb32a53dbb(): boolean;
declare function SpawnpointsIsSearchFailed(): boolean;
declare function N_0xf445de8da80a1792(): boolean;
declare function SpawnpointsStartSearch(p0: number, p1: number, p2: number, p3: number, p4: number, interiorFlags: number, scale: number, duration: number): void;
declare function N_0x2df9038c90ad5264(p0: number, p1: number, p2: number, p3: number, p4: number, interiorFlags: number, scale: number, duration: number): void;
declare function SpawnpointsStartSearchInAngledArea(x: number, y: number, z: number, p3: number, p4: number, p5: number, p6: number, interiorFlags: number, scale: number, duration: number): void;
declare function N_0xb2aff10216defa2f(x: number, y: number, z: number, p3: number, p4: number, p5: number, p6: number, interiorFlags: number, scale: number, duration: number): void;
declare function SpecialAbilityActivate(player: number): void;
declare function N_0x821fdc827d6f4090(player: number): void;
declare function SpecialAbilityChargeAbsolute(player: number, p1: number, p2: boolean): void;
declare function SpecialAbilityChargeContinuous(player: number, p2: number): void;
declare function SpecialAbilityChargeLarge(player: number, p1: boolean, p2: boolean): void;
declare function SpecialAbilityChargeMedium(player: number, p1: boolean, p2: boolean): void;
declare function SpecialAbilityChargeNormalized(player: number, normalizedValue: number, p2: boolean): void;
declare function ResetSpecialAbilityControlsCinematic(player: number, normalizedValue: number, p2: boolean): void;
declare function SpecialAbilityChargeOnMissionFailed(player: number): void;
declare function N_0xc9a763d8fe87436a(player: number): void;
declare function SpecialAbilityChargeSmall(player: number, p1: boolean, p2: boolean): void;
declare function SpecialAbilityDeactivate(player: number): void;
declare function SpecialAbilityDeactivateFast(player: number): void;
declare function SpecialAbilityDeplete(p0: number): void;
declare function N_0x17f7471eaca78290(p0: number): void;
declare function SpecialAbilityDepleteMeter(player: number, p1: boolean): void;
declare function SpecialAbilityFillMeter(player: number, p1: boolean): void;
declare function SpecialAbilityLock(playerModel: number): void;
declare function SpecialAbilityReset(player: number): void;
declare function SpecialAbilityUnlock(playerModel: number): void;
declare function Sqrt(value: number): number;
declare function StabiliseEntityAttachedToHeli(vehicle: number, entity: number, p2: number): void;
declare function N_0x374706271354cb18(vehicle: number, entity: number, p2: number): void;
declare function StartAlarm(alarmName: string, p2: boolean): void;
declare function StartAudioScene(scene: string): boolean;
declare function StartBenchmarkRecording(): void;
declare function N_0x92790862e36c2ada(): void;
declare function StartCutscene(flags: number): void;
declare function StartCutsceneAtCoords(x: number, y: number, z: number, flags: number): void;
declare function StartEntityFire(entity: number): number;
declare function StartExpensiveSynchronousShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number, p8: number): number;
declare function CastRayPointToPoint(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number, p8: number): number;
declare function StartShapeTestRay(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number, p8: number): number;
declare function StartFindExternalKvp(resourceName: string, prefix: string): number;
declare function StartFindKvp(prefix: string): number;
declare function StartFiringAmnesty(duration: number): void;
declare function StartGpsCustomRoute(hudColor: number, displayOnFoot: boolean, followPlayer: boolean): void;
declare function N_0xdb34e8d56fc13b08(hudColor: number, displayOnFoot: boolean, followPlayer: boolean): void;
declare function StartGpsMultiRoute(hudColor: number, routeFromPlayer: boolean, displayOnFoot: boolean): void;
declare function N_0x3d3d15af7bcaaf83(hudColor: number, routeFromPlayer: boolean, displayOnFoot: boolean): void;
declare function StartNetworkedParticleFxLoopedOnEntity(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
declare function N_0x6f60e89a7b64ee1d(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
declare function StartParticleFxLoopedOnEntity_2(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
declare function StartNetworkedParticleFxLoopedOnEntityBone(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
declare function N_0xdde23f30cc5a0f03(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
declare function StartParticleFxLoopedOnEntityBone_2(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
declare function StartNetworkedParticleFxNonLoopedAtCoord(effectName: string, xPos: number, yPos: number, zPos: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): boolean;
declare function StartParticleFxNonLoopedAtCoord_2(effectName: string, xPos: number, yPos: number, zPos: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): boolean;
declare function StartNetworkedParticleFxNonLoopedOnEntity(effectName: string, entity: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
declare function StartParticleFxNonLoopedOnEntity_2(effectName: string, entity: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
declare function StartNetworkedParticleFxNonLoopedOnEntityBone(effectName: string, entity: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
declare function StartNetworkedParticleFxNonLoopedOnPedBone(effectName: string, ped: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
declare function StartParticleFxNonLoopedOnPedBone_2(effectName: string, ped: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
declare function StartNewScript(scriptName: string, stackSize: number): number;
declare function StartNewScriptWithArgs(scriptName: string, argCount: number, stackSize: number): LuaMultiReturn<[number, number]>;
declare function StartNewScriptWithNameHash(scriptHash: number, stackSize: number): number;
declare function StartNewStreamedScript(scriptHash: number, stackSize: number): number;
declare function StartNewScriptWithNameHashAndArgs(scriptHash: number, argCount: number, stackSize: number): LuaMultiReturn<[number, number]>;
declare function StartNewStreamedScriptWithArgs(scriptHash: number, argCount: number, stackSize: number): LuaMultiReturn<[number, number]>;
declare function StartParticleFxLoopedAtCoord(effectName: string, x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean, p11: boolean): number;
declare function StartParticleFxLoopedOnEntity(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
declare function StartParticleFxLoopedOnEntityBone(effectName: string, entity: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
declare function StartParticleFxLoopedOnPedBone(effectName: string, ped: number, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
declare function StartParticleFxNonLoopedAtCoord(effectName: string, xPos: number, yPos: number, zPos: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
declare function StartParticleFxNonLoopedOnEntity(effectName: string, entity: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
declare function StartParticleFxNonLoopedOnPedBone(effectName: string, ped: number, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
declare function StartPetrolTrailDecals(p0: number): void;
declare function N_0x99ac7f0d8b9c893d(p0: number): void;
declare function StartPlaybackRecordedVehicle(vehicle: number, recording: number, script: string, p3: boolean): void;
declare function StartPlaybackRecordedVehicleUsingAi(vehicle: number, recording: number, script: string, speed: number, drivingStyle: number): void;
declare function StartPlaybackRecordedVehicleWithFlags(vehicle: number, recording: number, script: string, flags: number, time: number, drivingStyle: number): void;
declare function StartPlayerSwitch(_from: number, to: number, flags: number, switchType: number): void;
declare function StartPlayerTeleport(player: number, x: number, y: number, z: number, heading: number, teleportWithVehicle: boolean, findCollisionLand: boolean, p7: boolean): void;
declare function StartPreloadedConversation(): void;
declare function StartRecording(mode: number): void;
declare function N_0xc3ac2fff9612ac81(mode: number): void;
declare function StartRopeUnwindingFront(ropeId: number): void;
declare function StartRopeWinding(ropeId: number): void;
declare function StartSaveArrayWithSize(size: number, arrayName: string): number;
declare function StartSaveArray(size: number, arrayName: string): number;
declare function StartSaveData(p1: number, p2: boolean): number;
declare function StartSaveStructWithSize(size: number, structName: string): number;
declare function StartSaveStruct(size: number, structName: string): number;
declare function StartScriptConversation(p0: boolean, p1: boolean, p2: boolean, p3: boolean): void;
declare function StartScriptFire(X: number, Y: number, Z: number, maxChildren: number, isGasFire: boolean): number;
declare function StartScriptPhoneConversation(p0: boolean, p1: boolean): void;
declare function StartShapeTestBound(entity: number, flags1: number, flags2: number): number;
declare function N_0x37181417ce7c8900(entity: number, flags1: number, flags2: number): number;
declare function StartShapeTestBoundingBox(entity: number, flags1: number, flags2: number): number;
declare function N_0x052837721a854ec7(entity: number, flags1: number, flags2: number): number;
declare function StartShapeTestBox(x: number, y: number, z: number, x1: number, y1: number, z1: number, rotX: number, rotY: number, rotZ: number, p9: number, flags: number, entity: number, p12: number): number;
declare function N_0xfe466162c4401d18(x: number, y: number, z: number, x1: number, y1: number, z1: number, rotX: number, rotY: number, rotZ: number, p9: number, flags: number, entity: number, p12: number): number;
declare function StartShapeTestCapsule(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number, p9: number): number;
declare function Cast_3dRayPointToPoint(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number, p9: number): number;
declare function StartShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number, p8: number): number;
declare function N_0x7ee9f5d83dd4f90e(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number, p8: number): number;
declare function StartShapeTestSurroundingCoords(flag: number, entity: number, flag2: number): LuaMultiReturn<[number, number, Vector3]>;
declare function N_0xff6be494c7987f34(flag: number, entity: number, flag2: number): LuaMultiReturn<[number, number, Vector3]>;
declare function StartShapeTestSweptSphere(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number, p9: number): number;
declare function N_0xe6ac6c45fbe83004(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number, p9: number): number;
declare function StartShapeTestCapsule_2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number, p9: number): number;
declare function StartVehicleAlarm(vehicle: number): void;
declare function StartVehicleHorn(vehicle: number, duration: number, mode: number, forever: boolean): void;
declare function StatClearSlotForReload(statSlot: number): number;
declare function StatDeleteSlot(p0: number): number;
declare function StatGetBool(statHash: number, p2: number): LuaMultiReturn<[boolean, boolean]>;
declare function StatGetBoolMasked(statName: number, mask: number, p2: number): boolean;
declare function StatGetCancelSaveMigrationStatus(): number;
declare function N_0x567384dfa67029e6(): number;
declare function StatGetDate(statHash: number, p2: number, p3: number): LuaMultiReturn<[boolean, number]>;
declare function StatGetFloat(statHash: number, p2: number): LuaMultiReturn<[boolean, number]>;
declare function StatGetInt(statHash: number, p2: number): LuaMultiReturn<[boolean, number]>;
declare function StatGetLicensePlate(statName: number): string;
declare function StatGetMaskedInt(p0: number, p2: number, p3: number, p4: number): LuaMultiReturn<[boolean, number]>;
declare function StatGetNumberOfDays(statName: number): number;
declare function N_0xe0e854f5280fb769(statName: number): number;
declare function StatGetNumberOfHours(statName: number): number;
declare function N_0xf2d4b2fe415aafc3(statName: number): number;
declare function StatGetNumberOfMinutes(statName: number): number;
declare function N_0x7583b4be4c5a41b5(statName: number): number;
declare function StatGetNumberOfSeconds(statName: number): number;
declare function N_0x2ce056ff3723f00b(statName: number): number;
declare function StatGetPackedBoolMask(p0: number): number;
declare function N_0xf4d8e7ac2a27758c(p0: number): number;
declare function StatGetPackedIntMask(p0: number): number;
declare function N_0x94f12abf9c79e339(p0: number): number;
declare function StatGetPos(p0: number, p4: number): LuaMultiReturn<[boolean, number, number, number]>;
declare function StatGetSaveMigrationConsumeContentUnlockStatus(p0: number): LuaMultiReturn<[number, number]>;
declare function N_0xce5aa445aba8dee0(p0: number): LuaMultiReturn<[number, number]>;
declare function StatGetSaveMigrationStatus(data: number): LuaMultiReturn<[number, number]>;
declare function N_0x886913bbeaca68c1(data: number): LuaMultiReturn<[number, number]>;
declare function StatGetString(statHash: number, p1: number): string;
declare function StatGetUserId(p0: number): string;
declare function StatIncrement(statName: number, value: number): void;
declare function StatLoad(p0: number): boolean;
declare function StatLoadPending(p0: number): boolean;
declare function StatMigrateSave(platformName: string): boolean;
declare function N_0xa5c80d8e768a9e66(platformName: string): boolean;
declare function StatSave(p0: number, p1: boolean, p2: number): boolean;
declare function StatSaveMigrationCancel(): boolean;
declare function N_0x4fef53183c3c6414(): boolean;
declare function StatSaveMigrationConsumeContentUnlock(contentId: number, srcPlatform: string, srcGamerHandle: string): boolean;
declare function N_0x3270f67eed31fbc1(contentId: number, srcPlatform: string, srcGamerHandle: string): boolean;
declare function StatSaveMigrationStatusStart(): boolean;
declare function N_0xc70ddce56d0d3a99(): boolean;
declare function StatSavePending(): boolean;
declare function StatSavePendingOrRequested(): boolean;
declare function StatSetBlockSaves(toggle: boolean): void;
declare function N_0xf434a10ba01c37d0(toggle: boolean): void;
declare function StatSetBool(statName: number, value: boolean, save: boolean): boolean;
declare function StatSetBoolMasked(statName: number, value: boolean, mask: number, save: boolean): boolean;
declare function StatSetCheatIsActive(): void;
declare function N_0x047cbed6f6f8b63c(): void;
declare function StatSetCurrentPosixTime(statName: number, p1: boolean): boolean;
declare function StatSetDate(statName: number, numFields: number, save: boolean): LuaMultiReturn<[boolean, number]>;
declare function StatSetFloat(statName: number, value: number, save: boolean): boolean;
declare function StatSetGxtLabel(statName: number, value: string, save: boolean): boolean;
declare function StatSetInt(statName: number, value: number, save: boolean): boolean;
declare function StatSetLicensePlate(statName: number, str: string): boolean;
declare function StatSetMaskedInt(statName: number, p1: number, p2: number, p3: number, save: boolean): boolean;
declare function StatSetPos(statName: number, x: number, y: number, z: number, save: boolean): boolean;
declare function StatSetProfileSettingValue(profileSetting: number, value: number): void;
declare function N_0x68f01422be1d838f(profileSetting: number, value: number): void;
declare function StatSetProfileSetting(profileSetting: number, value: number): void;
declare function StatSetString(statName: number, value: string, save: boolean): boolean;
declare function StatSetUserId(statName: number, value: string, save: boolean): boolean;
declare function StatSlotIsLoaded(p0: number): boolean;
declare function StopAlarm(alarmName: string, toggle: boolean): void;
declare function StopAllAlarms(stop: boolean): void;
declare function StopAllGarageActivity(): void;
declare function StopAnimPlayback(ped: number, p1: number, p2: boolean): void;
declare function StopAnimTask(ped: number, animDictionary: string, animationName: string, animExitSpeed: number): void;
declare function StopAnyPedModelBeingSuppressed(): void;
declare function StopAudioScene(scene: string): void;
declare function StopAudioScenes(): void;
declare function StopBenchmarkRecording(): void;
declare function N_0xc7db36c24634f52b(): void;
declare function StopBinkMovie(binkMovie: number): void;
declare function StopBringVehicleToHalt(vehicle: number): void;
declare function N_0x7c06330bfdda182e(vehicle: number): void;
declare function StopCamPointing(cam: number): void;
declare function StopCamShaking(cam: number, p1: boolean): void;
declare function StopCinematicCamShaking(p0: boolean): void;
declare function StopCinematicShot(p0: number): void;
declare function StopCurrentPlayingAmbientSpeech(ped: number): void;
declare function StopCurrentPlayingSpeech(ped: number): void;
declare function N_0x7a73d05a607734c7(ped: number): void;
declare function SetPedMute(ped: number): void;
declare function StopCutscene(p0: boolean): void;
declare function StopCutsceneAudio(): void;
declare function N_0x806058bbdc136e06(): void;
declare function StopCutsceneCamShaking(): void;
declare function StopCutsceneImmediately(): void;
declare function StopEntityAnim(entity: number, animation: string, animGroup: string, p3: number): number;
declare function StopEntityFire(entity: number): void;
declare function StopFireInRange(x: number, y: number, z: number, radius: number): void;
declare function StopGameplayCamShaking(bStopImmediately: boolean): void;
declare function StopGameplayHint(p0: boolean): void;
declare function StopPadShake(padIndex: number): void;
declare function StopParticleFxLooped(ptfxHandle: number, p1: boolean): void;
declare function StopPedRingtone(ped: number): void;
declare function StopPedSpeaking(ped: number, shaking: boolean): void;
declare function StopPedWeaponFiringWhenDropped(ped: number): void;
declare function StopPlaybackRecordedVehicle(vehicle: number): void;
declare function StopPlayerSwitch(): void;
declare function StopPlayerTeleport(): void;
declare function StopRecordingAndDiscardClip(): void;
declare function N_0x88bb3507ed41a240(): void;
declare function StopRecordingAndSaveClip(): void;
declare function StopRecording(): void;
declare function StopRecordingThisFrame(): void;
declare function N_0xeb2d525b57f42b40(): void;
declare function StopRenderingScriptCamsUsingCatchUp(render: boolean, p1: number, p2: number): void;
declare function N_0xc819f3cbb62bf692(render: boolean, p1: number, p2: number): void;
declare function RenderFirstPersonCam(render: boolean, p1: number, p2: number): void;
declare function StopRopeUnwindingFront(ropeId: number): void;
declare function StopRopeWinding(ropeId: number): void;
declare function StopSaveArray(): void;
declare function StopSaveData(): void;
declare function StopSaveStruct(): void;
declare function StopScriptGlobalShaking(p0: boolean): void;
declare function N_0x1c9d7949fa533490(p0: boolean): void;
declare function StopScriptedConversation(p0: boolean): number;
declare function StopSound(soundId: number): void;
declare function StopStream(): void;
declare function StopSynchronizedAudioEvent(p0: number): boolean;
declare function StopSynchronizedEntityAnim(entity: number, p1: number, p2: boolean): boolean;
declare function StopSynchronizedMapEntityAnim(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): boolean;
declare function StreamvolCreateFrustum(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): number;
declare function N_0x1f3f018bc3afa77c(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): number;
declare function StreamvolCreateLine(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;
declare function N_0x0ad9710cee2f590f(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;
declare function StreamvolCreateSphere(x: number, y: number, z: number, rad: number, p4: number, p5: number): number;
declare function N_0x219c7b8d53e429fd(x: number, y: number, z: number, rad: number, p4: number, p5: number): number;
declare function FormatFocusHeading(x: number, y: number, z: number, rad: number, p4: number, p5: number): number;
declare function StreamvolDelete(unused: number): void;
declare function N_0x1ee7d8df4425f053(unused: number): void;
declare function StreamvolHasLoaded(unused: number): boolean;
declare function N_0x7d41e9d2d17c5b2d(unused: number): boolean;
declare function StreamvolIsValid(unused: number): boolean;
declare function N_0x07c313f94746702c(unused: number): boolean;
declare function StringToInt(_string: string, outInteger: number): LuaMultiReturn<[boolean, number]>;
declare function SuppressAgitationEventsNextFrame(): void;
declare function SuppressFrontendRenderingThisFrame(): void;
declare function N_0xba751764f0821256(): void;
declare function SuppressShockingEventTypeNextFrame(eventType: number): void;
declare function SuppressShockingEventsNextFrame(): void;
declare function SwitchCrimeType(player: number, p1: number): void;
declare function N_0x9a987297ed8bd838(player: number, p1: number): void;
declare function SwitchToInputMappingScheme(name: string): boolean;
declare function N_0x3d42b92563939375(name: string): boolean;
declare function SwitchToInputMappingScheme_2(name: string): boolean;
declare function N_0x4683149ed1dde7a1(name: string): boolean;
declare function SwitchToMultiFirstpart(ped: number, flags: number, switchType: number): void;
declare function N_0xaab3200ed59016bc(ped: number, flags: number, switchType: number): void;
declare function SwitchOutPlayer(ped: number, flags: number, switchType: number): void;
declare function SwitchToMultiSecondpart(ped: number): void;
declare function N_0xd8295af639fd9cb8(ped: number): void;
declare function SwitchInPlayer(ped: number): void;
declare function SwitchTrainTrack(trackId: number, state: boolean): void;
declare function TakeControlOfFrontend(): void;
declare function N_0xec9264727eec0f28(): void;
declare function Tan(p0: number): number;
declare function TaskAchieveHeading(ped: number, heading: number, timeout: number): void;
declare function TaskAgitatedAction(ped: number, ped2: number): void;
declare function N_0x19d1b791cb3670fe(ped: number, ped2: number): void;
declare function TaskAimGunAtCoord(ped: number, x: number, y: number, z: number, time: number, p5: boolean, p6: boolean): void;
declare function TaskAimGunAtEntity(ped: number, entity: number, duration: number, p3: boolean): void;
declare function TaskAimGunScripted(ped: number, scriptTask: number, p2: boolean, p3: boolean): void;
declare function TaskAimGunScriptedWithTarget(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: boolean): void;
declare function TaskArrestPed(ped: number, target: number): void;
declare function TaskBoatMission(pedDriver: number, boat: number, p2: number, p3: number, x: number, y: number, z: number, p7: number, maxSpeed: number, drivingStyle: number, p10: number, p11: number): void;
declare function TaskChatToPed(ped: number, target: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number): void;
declare function TaskClearDefensiveArea(p0: number): void;
declare function TaskClearLookAt(ped: number): void;
declare function TaskClimb(ped: number, unused: boolean): void;
declare function TaskClimbLadder(ped: number, p1: number): void;
declare function TaskCombatHatedTargetsAroundPed(ped: number, radius: number, p2: number): void;
declare function TaskCombatHatedTargetsAroundPedTimed(p0: number, p1: number, p2: number, p3: number): void;
declare function TaskCombatHatedTargetsInArea(ped: number, x: number, y: number, z: number, radius: number, p5: number): void;
declare function TaskCombatPed(ped: number, targetPed: number, p2: number, p3: number): void;
declare function TaskCombatPedTimed(p0: number, ped: number, p2: number, p3: number): void;
declare function TaskCower(ped: number, duration: number): void;
declare function TaskDriveBy(driverPed: number, targetPed: number, targetVehicle: number, targetX: number, targetY: number, targetZ: number, distanceToShoot: number, pedAccuracy: number, p8: boolean, firingPattern: number): void;
declare function TaskEnterVehicle(ped: number, vehicle: number, timeout: number, seatIndex: number, speed: number, flag: number, p6: number): void;
declare function TaskEveryoneLeaveVehicle(vehicle: number): void;
declare function TaskExitCover(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function TaskExtendRoute(x: number, y: number, z: number): void;
declare function TaskFlushRoute(): void;
declare function TaskFollowNavMeshToCoord(ped: number, x: number, y: number, z: number, speed: number, timeout: number, stoppingRange: number, persistFollowing: boolean, unk: number): void;
declare function TaskFollowNavMeshToCoordAdvanced(ped: number, x: number, y: number, z: number, speed: number, timeout: number, unkFloat: number, unkInt: number, unkX: number, unkY: number, unkZ: number, unk_40000f: number): void;
declare function TaskFollowPointRoute(ped: number, speed: number, unknown: number): void;
declare function TaskFollowToOffsetOfEntity(ped: number, entity: number, offsetX: number, offsetY: number, offsetZ: number, movementSpeed: number, timeout: number, stoppingRange: number, persistFollowing: boolean): void;
declare function TaskFollowWaypointRecording(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function TaskForceMotionState(ped: number, state: number, p2: boolean): void;
declare function TaskGetOffBoat(ped: number, boat: number): void;
declare function TaskGoStraightToCoord(ped: number, x: number, y: number, z: number, speed: number, timeout: number, targetHeading: number, distanceToSlide: number): void;
declare function TaskGoStraightToCoordRelativeToEntity(entity1: number, entity2: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function TaskGoToCoordAndAimAtHatedEntitiesNearCoord(pedHandle: number, goToLocationX: number, goToLocationY: number, goToLocationZ: number, focusLocationX: number, focusLocationY: number, focusLocationZ: number, speed: number, shootAtEnemies: boolean, distanceToStopAt: number, noRoadsDistance: number, unkTrue: boolean, unkFlag: number, aimingFlag: number, firingPattern: number): void;
declare function TaskGoToCoordAnyMeans(ped: number, x: number, y: number, z: number, speed: number, p5: number, p6: boolean, walkingStyle: number, p8: number): void;
declare function TaskGoToCoordAnyMeansExtraParams(ped: number, x: number, y: number, z: number, speed: number, p5: number, p6: boolean, walkingStyle: number, p8: number, p9: number, p10: number, p11: number): void;
declare function TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped: number, x: number, y: number, z: number, speed: number, p5: number, p6: boolean, walkingStyle: number, p8: number, p9: number, p10: number, p11: number, p12: number): void;
declare function TaskGoToCoordWhileAimingAtCoord(ped: number, x: number, y: number, z: number, aimAtX: number, aimAtY: number, aimAtZ: number, moveSpeed: number, shoot: boolean, p9: number, p10: number, p11: boolean, flags: number, p13: boolean, firingPattern: number): void;
declare function TaskGoToCoordWhileAimingAtEntity(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: number, p8: number, p9: boolean, p10: number, p11: boolean, p12: number, p13: number): void;
declare function TaskGoToEntity(entity: number, target: number, duration: number, distance: number, speed: number, p5: number, p6: number): void;
declare function TaskGoToEntityWhileAimingAtCoord(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: number, p8: number, p9: boolean, p10: boolean, p11: number): void;
declare function TaskGoToEntityWhileAimingAtEntity(ped: number, entityToWalkTo: number, entityToAimAt: number, speed: number, shootatEntity: boolean, p5: number, p6: number, p7: boolean, p8: boolean, firingPattern: number): void;
declare function TaskGotoEntityAiming(ped: number, target: number, distanceToStopAt: number, StartAimingDist: number): void;
declare function TaskGotoEntityOffset(ped: number, p1: number, p2: number, x: number, y: number, z: number, duration: number): void;
declare function TaskGotoEntityOffsetXy(ped: number, entity: number, duration: number, xOffset: number, yOffset: number, zOffset: number, moveBlendRatio: number, useNavmesh: boolean): void;
declare function TaskGuardAssignedDefensiveArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function TaskGuardCurrentPosition(p0: number, p1: number, p2: number, p3: boolean): void;
declare function TaskGuardSphereDefensiveArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number): void;
declare function TaskHandsUp(ped: number, duration: number, facingPed: number, p3: number, p4: boolean): void;
declare function TaskHeliChase(pilot: number, entityToFollow: number, x: number, y: number, z: number): void;
declare function TaskHeliEscortHeli(pilot: number, heli1: number, heli2: number, p3: number, p4: number, p5: number): void;
declare function TaskHeliMission(pilot: number, aircraft: number, targetVehicle: number, targetPed: number, destinationX: number, destinationY: number, destinationZ: number, missionFlag: number, maxSpeed: number, landingRadius: number, targetHeading: number, unk1: number, unk2: number, unk3: number, landingFlags: number): void;
declare function TaskJump(ped: number, unused: boolean): void;
declare function TaskLeaveAnyVehicle(ped: number, p1: number, flags: number): void;
declare function TaskLeaveVehicle(ped: number, vehicle: number, flags: number): void;
declare function TaskLookAtCoord(entity: number, x: number, y: number, z: number, duration: number, p5: number, p6: number): void;
declare function TaskLookAtEntity(ped: number, lookAt: number, duration: number, unknown1: number, unknown2: number): void;
declare function TaskMoveNetworkAdvancedByName(ped: number, p1: string, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: boolean, animDict: string, flags: number): void;
declare function N_0xd5b35bea41919acb(ped: number, p1: string, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: boolean, animDict: string, flags: number): void;
declare function TaskMoveNetworkAdvanced(ped: number, p1: string, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: boolean, animDict: string, flags: number): void;
declare function TaskMoveNetworkByName(ped: number, task: string, multiplier: number, p3: boolean, animDict: string, flags: number): void;
declare function N_0x2d537ba194896636(ped: number, task: string, multiplier: number, p3: boolean, animDict: string, flags: number): void;
declare function TaskMoveNetwork(ped: number, task: string, multiplier: number, p3: boolean, animDict: string, flags: number): void;
declare function TaskMoveNetworkByNameWithInitParams(ped: number, p1: string, p3: number, p4: boolean, animDict: string, flags: number): number;
declare function TaskMoveNetworkScripted(ped: number, p1: string, p3: number, p4: boolean, animDict: string, flags: number): number;
declare function TaskOpenVehicleDoor(ped: number, vehicle: number, timeOut: number, seat: number, speed: number): void;
declare function TaskParachute(ped: number, p1: boolean): void;
declare function TaskParachuteToTarget(ped: number, x: number, y: number, z: number): void;
declare function TaskPatrol(ped: number, p1: string, p2: number, p3: boolean, p4: boolean): void;
declare function TaskPause(ped: number, ms: number): void;
declare function TaskPedSlideToCoord(ped: number, x: number, y: number, z: number, heading: number, duration: number): void;
declare function TaskPedSlideToCoordHdgRate(ped: number, x: number, y: number, z: number, heading: number, p5: number, p6: number): void;
declare function TaskPerformSequence(ped: number, taskSequenceId: number): void;
declare function TaskPerformSequenceFromProgress(p0: number, p1: number, p2: number, p3: number): void;
declare function TaskPerformSequenceLocally(ped: number, taskSequenceId: number): void;
declare function N_0x8c33220c8d78ca0d(ped: number, taskSequenceId: number): void;
declare function TaskPlaneChase(pilot: number, entityToFollow: number, x: number, y: number, z: number): void;
declare function TaskPlaneGotoPreciseVtol(ped: number, vehicle: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number): void;
declare function TaskPlaneLand(pilot: number, plane: number, runwayStartX: number, runwayStartY: number, runwayStartZ: number, runwayEndX: number, runwayEndY: number, runwayEndZ: number): void;
declare function TaskPlaneMission(pilot: number, aircraft: number, targetVehicle: number, targetPed: number, destinationX: number, destinationY: number, destinationZ: number, missionFlag: number, angularDrag: number, unk: number, targetHeading: number, maxZ: number, minZ: number): void;
declare function TaskPlaneTaxi(pilot: number, aircraft: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function N_0x92c360b5f15d2302(pilot: number, aircraft: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
declare function TaskPlantBomb(ped: number, x: number, y: number, z: number, heading: number): void;
declare function TaskPlayAnim(ped: number, animDictionary: string, animationName: string, blendInSpeed: number, blendOutSpeed: number, duration: number, flag: number, playbackRate: number, lockX: boolean, lockY: boolean, lockZ: boolean): void;
declare function TaskPlayAnimAdvanced(ped: number, animDict: string, animName: string, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, animEnterSpeed: number, animExitSpeed: number, duration: number, flag: number, animTime: number, p14: number, p15: number): void;
declare function TaskPlayPhoneGestureAnimation(ped: number, animDict: string, animation: string, boneMaskType: string, p4: number, p5: number, p6: boolean, p7: boolean): void;
declare function TaskPutPedDirectlyIntoCover(ped: number, x: number, y: number, z: number, timeout: number, p5: boolean, p6: number, p7: boolean, p8: boolean, p9: number, p10: boolean): void;
declare function TaskPutPedDirectlyIntoMelee(ped: number, meleeTarget: number, p2: number, p3: number, p4: number, p5: boolean): void;
declare function TaskRappelDownWall(ped: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, minZ: number, ropeId: number, clipset: string, p10: number): void;
declare function N_0xeaf66acddc794793(ped: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, minZ: number, ropeId: number, clipset: string, p10: number): void;
declare function TaskRappelFromHeli(ped: number, unused: number): void;
declare function TaskReactAndFleePed(ped: number, fleeTarget: number): void;
declare function TaskReloadWeapon(ped: number, unused: boolean): void;
declare function TaskScriptedAnimation(ped: number, p4: number, p5: number): LuaMultiReturn<[number, number, number]>;
declare function TaskSeekCoverFromPed(ped: number, target: number, duration: number, p3: boolean): void;
declare function TaskSeekCoverFromPos(ped: number, x: number, y: number, z: number, duration: number, p5: boolean): void;
declare function TaskSeekCoverToCoords(ped: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p7: number, p8: boolean): void;
declare function TaskSeekCoverToCoverPoint(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: boolean): void;
declare function TaskSetBlockingOfNonTemporaryEvents(ped: number, toggle: boolean): void;
declare function TaskSetDecisionMaker(ped: number, p1: number): void;
declare function TaskSetSphereDefensiveArea(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function TaskShockingEventReact(ped: number, eventHandle: number): void;
declare function TaskShootAtCoord(ped: number, x: number, y: number, z: number, duration: number, firingPattern: number): void;
declare function TaskShootAtEntity(entity: number, target: number, duration: number, firingPattern: number): void;
declare function TaskShuffleToNextVehicleSeat(ped: number, vehicle: number): void;
declare function TaskSkyDive(ped: number): void;
declare function TaskSmartFleeCoord(ped: number, x: number, y: number, z: number, distance: number, time: number, p6: boolean, p7: boolean): void;
declare function TaskSmartFleePed(ped: number, fleeTarget: number, distance: number, fleeTime: number, p4: boolean, p5: boolean): void;
declare function TaskStandGuard(ped: number, x: number, y: number, z: number, heading: number, scenarioName: string): void;
declare function TaskStandStill(ped: number, time: number): void;
declare function TaskStartScenarioAtPosition(ped: number, scenarioName: string, x: number, y: number, z: number, heading: number, duration: number, sittingScenario: boolean, teleport: boolean): void;
declare function TaskStartScenarioInPlace(ped: number, scenarioName: string, unkDelay: number, playEnterAnim: boolean): void;
declare function TaskStayInCover(ped: number): void;
declare function TaskStealthKill(killer: number, target: number, actionType: number, p3: number, p4: number): void;
declare function TaskStopPhoneGestureAnimation(ped: number): void;
declare function TaskSubmarineGotoAndStop(p0: number, submarine: number, x: number, y: number, z: number, p5: number): void;
declare function TaskSwapWeapon(ped: number, p1: boolean): void;
declare function TaskSweepAimEntity(ped: number, anim: string, p2: string, p3: string, p4: string, p5: number, vehicle: number, p7: number, p8: number): void;
declare function TaskSweepAimPosition(p0: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number): LuaMultiReturn<[number, number, number, number]>;
declare function TaskSynchronizedScene(ped: number, scene: number, animDictionary: string, animationName: string, speed: number, speedMultiplier: number, duration: number, flag: number, playbackRate: number, p9: number): void;
declare function TaskThrowProjectile(ped: number, x: number, y: number, z: number): void;
declare function TaskToggleDuck(p0: boolean, p1: boolean): void;
declare function TaskTurnPedToFaceCoord(ped: number, x: number, y: number, z: number, duration: number): void;
declare function TaskTurnPedToFaceEntity(ped: number, entity: number, duration: number): void;
declare function TaskUseMobilePhone(ped: number, p1: number): void;
declare function TaskUseMobilePhoneTimed(ped: number, duration: number): void;
declare function TaskUseNearestScenarioChainToCoord(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function TaskUseNearestScenarioChainToCoordWarp(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
declare function TaskUseNearestScenarioToCoord(ped: number, x: number, y: number, z: number, distance: number, duration: number): void;
declare function TaskUseNearestScenarioToCoordWarp(ped: number, x: number, y: number, z: number, radius: number, p5: number): void;
declare function TaskVehicleAimAtCoord(ped: number, x: number, y: number, z: number): void;
declare function TaskVehicleAimAtPed(ped: number, target: number): void;
declare function TaskVehicleChase(driver: number, targetEnt: number): void;
declare function TaskVehicleDriveToCoord(ped: number, vehicle: number, x: number, y: number, z: number, speed: number, p6: number, vehicleModel: number, drivingMode: number, stopRange: number, p10: number): void;
declare function TaskVehicleDriveToCoordLongrange(ped: number, vehicle: number, x: number, y: number, z: number, speed: number, driveMode: number, stopRange: number): void;
declare function TaskVehicleDriveWander(ped: number, vehicle: number, speed: number, drivingStyle: number): void;
declare function TaskVehicleEscort(ped: number, vehicle: number, targetVehicle: number, mode: number, speed: number, drivingStyle: number, minDistance: number, p7: number, noRoadsDistance: number): void;
declare function TaskVehicleFollow(driver: number, vehicle: number, targetEntity: number, speed: number, drivingStyle: number, minDistance: number): void;
declare function TaskVehicleFollowWaypointRecording(ped: number, vehicle: number, WPRecording: string, p3: number, p4: number, p5: number, p6: number, p7: number, p8: boolean, p9: number): void;
declare function TaskVehicleGotoNavmesh(ped: number, vehicle: number, x: number, y: number, z: number, speed: number, behaviorFlag: number, stoppingRange: number): void;
declare function TaskVehicleHeliProtect(pilot: number, vehicle: number, entityToFollow: number, targetSpeed: number, p4: number, radius: number, altitude: number, p7: number): void;
declare function TaskVehicleMission(driver: number, vehicle: number, vehicleTarget: number, missionType: number, p4: number, p5: number, p6: number, p7: number, DriveAgainstTraffic: boolean): void;
declare function TaskVehicleMissionCoorsTarget(ped: number, vehicle: number, x: number, y: number, z: number, p5: number, p6: number, p7: number, p8: number, p9: number, DriveAgainstTraffic: boolean): void;
declare function TaskVehicleMissionPedTarget(ped: number, vehicle: number, pedTarget: number, missionType: number, maxSpeed: number, drivingStyle: number, minDistance: number, p7: number, DriveAgainstTraffic: boolean): void;
declare function TaskVehiclePark(ped: number, vehicle: number, x: number, y: number, z: number, heading: number, mode: number, radius: number, keepEngineOn: boolean): void;
declare function TaskVehiclePlayAnim(vehicle: number, animationSet: string, animationName: string): void;
declare function TaskVehicleShootAtCoord(ped: number, x: number, y: number, z: number, p4: number): void;
declare function TaskVehicleShootAtPed(ped: number, target: number, p2: number): void;
declare function TaskVehicleTempAction(driver: number, vehicle: number, action: number, time: number): void;
declare function TaskWanderInArea(ped: number, x: number, y: number, z: number, radius: number, minimalLength: number, timeBetweenWalks: number): void;
declare function TaskWanderSpecific(p0: number, p1: number, p2: number, p3: number): void;
declare function TaskWanderStandard(ped: number, p1: number, p2: number): void;
declare function TaskWarpPedIntoVehicle(ped: number, vehicle: number, seatIndex: number): void;
declare function TaskWrithe(ped: number, target: number, time: number, p3: number): void;
declare function TerminateAllScriptsWithThisName(scriptName: string): void;
declare function TerminateThisThread(): void;
declare function TerminateThread(threadId: number): void;
declare function TerraingridActivate(toggle: boolean): void;
declare function N_0xa356990e161c9e65(toggle: boolean): void;
declare function TerraingridSetColours(lowR: number, lowG: number, lowB: number, lowAlpha: number, R: number, G: number, B: number, Alpha: number, highR: number, highG: number, highB: number, highAlpha: number): void;
declare function N_0x5ce62918f8d703c7(lowR: number, lowG: number, lowB: number, lowAlpha: number, R: number, G: number, B: number, Alpha: number, highR: number, highG: number, highB: number, highAlpha: number): void;
declare function TerraingridSetParams(x: number, y: number, z: number, p3: number, rotation: number, p5: number, width: number, height: number, p8: number, scale: number, glowIntensity: number, normalHeight: number, heightDiff: number): void;
declare function N_0x1c4fc5752bcd8e48(x: number, y: number, z: number, p3: number, rotation: number, p5: number, width: number, height: number, p8: number, scale: number, glowIntensity: number, normalHeight: number, heightDiff: number): void;
declare function TestProbeAgainstAllWater(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flag: number): LuaMultiReturn<[boolean, Vector3]>;
declare function TestProbeAgainstWater(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): LuaMultiReturn<[boolean, Vector3]>;
declare function TestVerticalProbeAgainstAllWater(x: number, y: number, z: number, flag: number, height: number): LuaMultiReturn<[boolean, number]>;
declare function TextureDownloadGetName(p0: number): string;
declare function TextureDownloadHasFailed(p0: number): boolean;
declare function N_0x5776ed562c134687(p0: number): boolean;
declare function TextureDownloadRelease(p0: number): void;
declare function TextureDownloadRequest(FilePath: string, Name: string, p3: boolean): LuaMultiReturn<[number, number]>;
declare function ThefeedClearFrozenPost(): void;
declare function N_0x80fe4f3ab4e1b62a(): void;
declare function ThefeedFlushPersistent(): void;
declare function ThefeedCommentTeleportPoolOff(): void;
declare function N_0xaded7f5748acafe6(): void;
declare function ThefeedShowGtaoTooltips(): void;
declare function ThefeedCommentTeleportPoolOn(): void;
declare function N_0x56c8b608cfd49854(): void;
declare function ThefeedDisableLoadingScreenTips(): void;
declare function N_0x32888337579a5970(): void;
declare function ThefeedDisable(): void;
declare function ThefeedDisplayLoadingScreenTips(): void;
declare function N_0x15cfa549788d35ef(): void;
declare function ThefeedEnable(): void;
declare function ThefeedFlushQueue(): void;
declare function N_0xa8fdb297a8d25fba(): void;
declare function ThefeedForceRenderOff(): void;
declare function N_0x583049884a2eee3c(): void;
declare function ThefeedHideGtaoTooltips(): void;
declare function ThefeedForceRenderOn(): void;
declare function N_0xa13c11e1b5c06bfc(): void;
declare function ThefeedFreezeNextPost(): void;
declare function N_0xfdec055ab549e328(): void;
declare function ThefeedSetNextPostPersistent(): void;
declare function ThefeedGetFirstVisibleDeleteRemaining(): number;
declare function N_0x82352748437638ca(): number;
declare function GetCurrentNotification(): number;
declare function ThefeedGetCurrentNotification(): number;
declare function ThefeedHideThisFrame(): void;
declare function N_0x25f87b30c382fca7(): void;
declare function HideHudNotificationsThisFrame(): void;
declare function ThefeedIsPaused(): boolean;
declare function N_0xa9cbfd40b3fa3010(): boolean;
declare function ThefeedOnlyShowTooltips(toggle: boolean): void;
declare function N_0x6f1554b0cc2089fa(toggle: boolean): void;
declare function ThefeedPause(): void;
declare function N_0xfdb423997fa30340(): void;
declare function ThefeedRemoveItem(notificationId: number): void;
declare function RemoveNotification(notificationId: number): void;
declare function ThefeedResetAllParameters(): void;
declare function N_0xfdd85225b2dea55e(): void;
declare function ThefeedClearAnimpostfx(): void;
declare function ThefeedResume(): void;
declare function N_0xe1cd1e48e025e661(): void;
declare function ThefeedSetAnimpostfxColor(red: number, green: number, blue: number, alpha: number): void;
declare function N_0x17430b918701c342(red: number, green: number, blue: number, alpha: number): void;
declare function SetNotificationFlashColor(red: number, green: number, blue: number, alpha: number): void;
declare function ThefeedSetAnimpostfxCount(count: number): void;
declare function N_0x17ad8c9706bdd88a(count: number): void;
declare function ThefeedSetAnimpostfxSound(toggle: boolean): void;
declare function N_0x4a0c7c9bb10abb36(toggle: boolean): void;
declare function ThefeedSetFlushAnimpostfx(toggle: boolean): void;
declare function N_0xbae4f9b97cd43b30(toggle: boolean): void;
declare function ThefeedSetNextPostBackgroundColor(hudColorIndex: number): void;
declare function N_0x92f0da1e27db96dc(hudColorIndex: number): void;
declare function SetNotificationBackgroundColor(hudColorIndex: number): void;
declare function ThefeedNextPostBackgroundColor(hudColorIndex: number): void;
declare function ThefeedSetScriptedMenuHeight(pos: number): void;
declare function N_0x55598d21339cb998(pos: number): void;
declare function ClearNotificationsPos(pos: number): void;
declare function ThefeedSpsExtendWidescreenOff(): void;
declare function N_0xb695e2cd0a2da9ee(): void;
declare function ThefeedDisableBaselineOffset(): void;
declare function ThefeedSpsExtendWidescreenOn(): void;
declare function N_0xd4438c0564490e63(): void;
declare function ThefeedEnableBaselineOffset(): void;
declare function ThefeedUpdateItemTexture(txdString1: string, txnString1: string, txdString2: string, txnString2: string): void;
declare function N_0x317eba71d7543f52(txdString1: string, txnString1: string, txdString2: string, txnString2: string): void;
declare function ThefeedAddTxdRef(txdString1: string, txnString1: string, txdString2: string, txnString2: string): void;
declare function Timera(): number;
declare function Timerb(): number;
declare function Timestep(): number;
declare function TitleTextureDownloadRequest(FilePath: string, Name: string, p2: boolean): number;
declare function N_0x0b203b4afde53a4f(FilePath: string, Name: string, p2: boolean): number;
declare function ToFloat(value: number): number;
declare function TogglePausedRenderphases(toggle: boolean): void;
declare function EnableGameplayCam(toggle: boolean): void;
declare function SetFrozenRenderingDisabled(toggle: boolean): void;
declare function ToggleStealthRadar(toggle: boolean): void;
declare function ToggleUsePickupsForPlayer(player: number, pickupHash: number, toggle: boolean): void;
declare function N_0x616093ec6b139dd9(player: number, pickupHash: number, toggle: boolean): void;
declare function ToggleVehicleMod(vehicle: number, modType: number, toggle: boolean): void;
declare function TrackObjectVisibility(object: number): void;
declare function TrackVehicleVisibility(vehicle: number): void;
declare function TransformToCar(vehicle: number, instantly: boolean): void;
declare function N_0x2a69ffd1b42bff9e(vehicle: number, instantly: boolean): void;
declare function TransformStormbergToRoadVehicle(vehicle: number, instantly: boolean): void;
declare function TransformSubmarineToVehicle(vehicle: number, instantly: boolean): void;
declare function TransformToSubmarine(vehicle: number, instantly: boolean): void;
declare function N_0xbe4c854ffdb6eebe(vehicle: number, instantly: boolean): void;
declare function TransformStormbergToWaterVehicle(vehicle: number, instantly: boolean): void;
declare function TransformVehicleToSubmarine(vehicle: number, instantly: boolean): void;
declare function TriggerEventInternal(eventName: string, eventPayload: string, payloadLength: number): void;
declare function TriggerLatentServerEventInternal(eventName: string, eventPayload: string, payloadLength: number, bps: number): void;
declare function TriggerMusicEvent(eventName: string): boolean;
declare function TriggerScreenblurFadeIn(transitionTime: number): boolean;
declare function TransitionToBlurred(transitionTime: number): boolean;
declare function TriggerScreenblurFadeOut(transitionTime: number): boolean;
declare function TransitionFromBlurred(transitionTime: number): boolean;
declare function TriggerScriptCrcCheckOnPlayer(player: number, p1: number, scriptHash: number): boolean;
declare function N_0x46fb3ed415c7641c(player: number, p1: number, scriptHash: number): boolean;
declare function NetworkIsPlayerInScript(player: number, p1: number, scriptHash: number): boolean;
declare function TriggerScriptEvent(eventGroup: number, eventDataSize: number, playerBits: number): number;
declare function TriggerScriptEvent_2(eventGroup: number, eventDataSize: number, playerBits: number): number;
declare function N_0xa40cc53df8e50837(eventGroup: number, eventDataSize: number, playerBits: number): number;
declare function TriggerServerEventInternal(eventName: string, eventPayload: string, payloadLength: number): void;
declare function TriggerSiren(vehicle: number): void;
declare function N_0x66c3fb05206041ba(vehicle: number): void;
declare function TriggerSonarBlip(posX: number, posY: number, posZ: number, radius: number, p4: number): void;
declare function N_0x72dd432f3cdfc0ee(posX: number, posY: number, posZ: number, radius: number, p4: number): void;
declare function UgcCancelQuery(): void;
declare function N_0xe9b99b6853181409(): void;
declare function UgcClearCreateResult(): void;
declare function N_0x17440aa15d1d3739(): void;
declare function UgcClearModifyResult(): void;
declare function N_0xa1e5e0204a6fcc70(): void;
declare function UgcClearOfflineQuery(): void;
declare function N_0x61a885d3f7cfee9a(): void;
declare function UgcClearQueryResults(): void;
declare function N_0xba96394a0eecfa65(): void;
declare function UgcCopyContent(): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x152d90e4c1b4738a(): LuaMultiReturn<[boolean, number, number]>;
declare function UgcCreateContent(data: string, dataCount: number, contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: boolean): boolean;
declare function N_0xc84527e235fca219(data: string, dataCount: number, contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: boolean): boolean;
declare function UgcCreateMission(contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: boolean): boolean;
declare function N_0xa5efc3e847d60507(contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: boolean): boolean;
declare function UgcDidGetSucceed(): number;
declare function N_0x941e5306bcd7c2c7(): number;
declare function UgcGetBookmarkedContent(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xd5a4b59980401588(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function UgcGetCachedDescription(p0: number, p1: number): string;
declare function N_0x40f7e66472df3e5c(p0: number, p1: number): string;
declare function UgcGetContentCategory(p0: number): number;
declare function N_0xa7bab11e7c9c6c5a(p0: number): number;
declare function GetContentCategory(p0: number): number;
declare function UgcGetContentDescriptionHash(p0: number): number;
declare function N_0x7cf0448787b23758(p0: number): number;
declare function GetContentDescriptionHash(p0: number): number;
declare function UgcGetContentFileVersion(p0: number, p1: number): number;
declare function N_0x37025b27d9b658b1(p0: number, p1: number): number;
declare function GetContentFileVersion(p0: number, p1: number): number;
declare function UgcGetContentHasPlayerBookmarked(p0: number): boolean;
declare function N_0x993cbe59d350d225(p0: number): boolean;
declare function UgcGetContentHasPlayerRecord(p0: number): boolean;
declare function N_0x70ea8da57840f9be(p0: number): boolean;
declare function UgcGetContentHash(): number;
declare function N_0x3a17a27d75c74887(): number;
declare function UgcGetContentId(p0: number): string;
declare function N_0x55aa95f481d694d2(p0: number): string;
declare function GetContentId(p0: number): string;
declare function UgcGetContentIsPublished(p0: number): boolean;
declare function N_0x3054f114121c21ea(p0: number): boolean;
declare function UgcGetContentIsVerified(p0: number): boolean;
declare function N_0xa9240a96c74cca13(p0: number): boolean;
declare function UgcGetContentLanguage(p0: number): number;
declare function N_0x32dd916f3f7c9672(p0: number): number;
declare function UgcGetContentName(p0: number): string;
declare function N_0xbf09786a7fcab582(p0: number): string;
declare function UgcGetContentNum(): number;
declare function N_0xe0a6138401bcb837(): number;
declare function UgcGetContentPath(p0: number, p1: number): string;
declare function N_0xbaf6babf9e7ccc13(p0: number, p1: number): string;
declare function UgcGetCloudPath(p0: number, p1: number): string;
declare function UgcGetContentRating(p0: number, p1: number): number;
declare function N_0x1accfba3d8dab2ee(p0: number, p1: number): number;
declare function UgcGetContentRatingCount(p0: number, p1: number): number;
declare function N_0x759299c5bb31d2a9(p0: number, p1: number): number;
declare function UgcGetContentRatingNegativeCount(p0: number, p1: number): number;
declare function N_0x4e548c0d7ae39ff9(p0: number, p1: number): number;
declare function UgcGetContentRatingPositiveCount(p0: number, p1: number): number;
declare function N_0x87e5c46c187fe0ae(p0: number, p1: number): number;
declare function UgcGetContentTotal(): number;
declare function N_0x769951e2455e2eb5(): number;
declare function UgcGetContentUpdatedDate(p0: number, p1: number): number;
declare function N_0xcfd115b373c0df63(p0: number, p1: number): number;
declare function UgcGetContentUserId(p0: number): string;
declare function N_0xcd67ad041a394c9c(p0: number): string;
declare function GetContentUserId(p0: number): string;
declare function GetPlayerAdvancedModifierPrivileges(p0: number): string;
declare function UgcGetContentUserName(p0: number): string;
declare function N_0x703f12425eca8bf5(p0: number): string;
declare function UgcGetCreateContentId(): string;
declare function N_0xc55a0b40ffb1ed23(): string;
declare function UgcGetCreateResult(): number;
declare function N_0xfbc5e768c7a77a6a(): number;
declare function UgcGetCreatorNum(): number;
declare function N_0x597f8dba9b206fc7(): number;
declare function UgcGetCrewContent(p0: number, p1: number, p2: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x9f6e2821885caee2(p0: number, p1: number, p2: number): LuaMultiReturn<[boolean, number, number]>;
declare function UgcGetFriendContent(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xf9e1ccae8ba4c281(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function UgcGetGetByCategory(p0: number, p1: number, p2: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x678bb03c1a3bd51e(p0: number, p1: number, p2: number): LuaMultiReturn<[boolean, number, number]>;
declare function UgcGetModifyResult(): number;
declare function N_0x5a0a3d1a186a5508(): number;
declare function UgcGetMyContent(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function N_0x3195f8dd0d531052(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
declare function UgcGetQueryResult(): number;
declare function N_0xedf7f927136c224b(): number;
declare function UgcGetRootContentId(p0: number): string;
declare function N_0xc0173d6bff4e0348(p0: number): string;
declare function GetRootContentId(p0: number): string;
declare function UgcHasCreateFinished(): boolean;
declare function N_0x5e24341a7f92a74b(): boolean;
declare function UgcHasGetFinished(): boolean;
declare function N_0x02ada21ea2f6918f(): boolean;
declare function UgcHasModifyFinished(): boolean;
declare function N_0x299ef3c576773506(): boolean;
declare function UgcIsGetting(): boolean;
declare function N_0xd53acdbef24a46e8(): boolean;
declare function UgcIsLanguageSupported(p0: number): boolean;
declare function N_0xf53e48461b71eecb(p0: number): boolean;
declare function UgcPoliciesMakePrivate(p0: number): boolean;
declare function N_0x5cae833b0ee0c500(p0: number): boolean;
declare function UgcPublish(contentId: string, baseContentId: string, contentTypeName: string): boolean;
declare function N_0x1de0f5f50d723caa(contentId: string, baseContentId: string, contentTypeName: string): boolean;
declare function UgcQueryByContentId(contentId: string, latestVersion: boolean, contentTypeName: string): boolean;
declare function N_0x158ec424f35ec469(contentId: string, latestVersion: boolean, contentTypeName: string): boolean;
declare function UgcQueryByContentIds(count: number, latestVersion: boolean, contentTypeName: string): LuaMultiReturn<[boolean, number]>;
declare function N_0xc7397a83f7a2a462(count: number, latestVersion: boolean, contentTypeName: string): LuaMultiReturn<[boolean, number]>;
declare function UgcQueryMyContent(p0: number, p1: number, p3: number, p4: number, p5: number): LuaMultiReturn<[boolean, number]>;
declare function N_0x9bf438815f5d96ea(p0: number, p1: number, p3: number, p4: number, p5: number): LuaMultiReturn<[boolean, number]>;
declare function UgcQueryRecentlyCreatedContent(offset: number, count: number, contentTypeName: string, p3: number): boolean;
declare function N_0x6d4cb481fac835e8(offset: number, count: number, contentTypeName: string, p3: number): boolean;
declare function UgcRequestCachedDescription(p0: number): number;
declare function N_0x5e0165278f6339ee(p0: number): number;
declare function UgcRequestContentDataFromIndex(p0: number, p1: number): number;
declare function N_0x171df6a0c07fb3dc(p0: number, p1: number): number;
declare function UgcRequestContentDataFromParams(contentTypeName: string, contentId: string, p2: number, p3: number, p4: number): number;
declare function N_0x7fd2990af016795e(contentTypeName: string, contentId: string, p2: number, p3: number, p4: number): number;
declare function UgcSetBookmarked(contentId: string, bookmarked: boolean, contentTypeName: string): boolean;
declare function N_0x274a1519dfc1094f(contentId: string, bookmarked: boolean, contentTypeName: string): boolean;
declare function UgcSetDeleted(p1: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function N_0xd05d1a6c74da3498(p1: boolean): LuaMultiReturn<[boolean, number, number]>;
declare function UgcSetPlayerData(contentId: string, rating: number, contentTypeName: string): boolean;
declare function N_0x692d808c34a82143(contentId: string, rating: number, contentTypeName: string): boolean;
declare function UgcSetQueryDataFromOffline(p0: boolean): void;
declare function N_0xf98dde0a8ed09323(p0: boolean): void;
declare function UgcTextureDownloadRequest(p1: number, p2: number, p3: number, p5: boolean): LuaMultiReturn<[number, number, number]>;
declare function N_0x308f96458b7087cc(p1: number, p2: number, p3: number, p5: boolean): LuaMultiReturn<[number, number, number]>;
declare function UgcUpdateContent(contentId: string, dataCount: number, contentName: string, description: string, tagsCsv: string, contentTypeName: string): LuaMultiReturn<[boolean, number]>;
declare function N_0x648e7a5434af7969(contentId: string, dataCount: number, contentName: string, description: string, tagsCsv: string, contentTypeName: string): LuaMultiReturn<[boolean, number]>;
declare function UgcUpdateMission(contentId: string, contentName: string, description: string, tagsCsv: string, contentTypeName: string): boolean;
declare function N_0x4645de9980999e93(contentId: string, contentName: string, description: string, tagsCsv: string, contentTypeName: string): boolean;
declare function Ui3dsceneIsAvailable(): boolean;
declare function N_0xd3a10fc7fd8d98cd(): boolean;
declare function Ui3dscenePushPreset(presetName: string): boolean;
declare function N_0xf1cea8a4198d8e9a(presetName: string): boolean;
declare function UiIsSingleplayerPauseMenuActive(): boolean;
declare function N_0xea2f2061875eed90(): boolean;
declare function UnblockDecisionMakerEvent(name: number, eventType: number): void;
declare function UncuffPed(ped: number): void;
declare function UnfreezeRadioStation(radioStation: string): void;
declare function UnloadCloudHat(name: string, p1: number): void;
declare function N_0xa74802fb8d0b7814(name: string, p1: number): void;
declare function UnloadContentChangeSetGroup(hash: number): void;
declare function UnlockMinimapAngle(): void;
declare function UnlockMinimapPosition(): void;
declare function UnlockMissionNewsStory(newsStory: number): void;
declare function UnlockRadioStationTrackList(radioStation: string, trackListName: string): void;
declare function N_0x031acb6aba18c729(radioStation: string, trackListName: string): void;
declare function UnpatchDecalDiffuseMap(decalType: number): void;
declare function N_0xb7ed70c49521a61d(decalType: number): void;
declare function UndoDecalTextureOverride(decalType: number): void;
declare function UnpausePlaybackRecordedVehicle(vehicle: number): void;
declare function UnpinInterior(interior: number): void;
declare function UnpinRopeVertex(ropeId: number, vertex: number): void;
declare function UnregisterPedheadshot(id: number): void;
declare function UnregisterRawNuiCallback(callbackType: string): void;
declare function UnregisterScriptWithAudio(): void;
declare function UpdateLightsOnEntity(entity: number): void;
declare function N_0xdeadc0dedeadc0de(entity: number): void;
declare function EntityDescriptionText(entity: number): void;
declare function UpdateLsur(enableMixes: boolean): void;
declare function UpdateMapdataEntity(mapdata: number, entity: number, entityDef: any): void;
declare function UpdateNavmeshBlockingObject(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): void;
declare function UpdateOnscreenKeyboard(): number;
declare function UpdatePedHeadBlendData(ped: number, shapeMix: number, skinMix: number, thirdMix: number): void;
declare function UpdatePlayerTeleport(player: number): boolean;
declare function N_0xe23d5873c2394c61(player: number): boolean;
declare function HasPlayerTeleportFinished(player: number): boolean;
declare function UpdateTaskAimGunScriptedTarget(p0: number, p1: number, p2: number, p3: number, p4: number, p5: boolean): void;
declare function UpdateTaskHandsUpDuration(ped: number, duration: number): void;
declare function UpdateTaskSweepAimEntity(ped: number, entity: number): void;
declare function UpdateTaskSweepAimPosition(p0: number, p1: number, p2: number, p3: number): void;
declare function UseFakeMpCash(p0: boolean): void;
declare function N_0x170f541e1cadd1de(p0: boolean): void;
declare function UseParticleFxAsset(name: string): void;
declare function SetPtfxAssetNextCall(name: string): void;
declare function UseParticleFxAssetNextCall(name: string): void;
declare function UsePlayerColourInsteadOfTeamColour(toggle: boolean): void;
declare function UseSirenAsHorn(vehicle: number, toggle: boolean): void;
declare function UseStuntCameraThisFrame(): void;
declare function N_0x6493cf69859b116a(): void;
declare function UseWaypointRecordingAsAssistedMovementRoute(name: string, p1: boolean, p2: number, p3: number): void;
declare function UsingMissionCreator(toggle: boolean): void;
declare function Vdist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
declare function Vdist2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
declare function VehToNet(vehicle: number): number;
declare function VehicleWaypointPlaybackOverrideSpeed(vehicle: number, speed: number): void;
declare function VehicleWaypointPlaybackPause(vehicle: number): void;
declare function VehicleWaypointPlaybackResume(vehicle: number): void;
declare function VehicleWaypointPlaybackUseDefaultSpeed(vehicle: number): void;
declare function Vmag(x: number, y: number, z: number): number;
declare function Vmag2(x: number, y: number, z: number): number;
declare function Wait(ms: number): void;
declare function WasCutsceneSkipped(): boolean;
declare function WasEventCanceled(): boolean;
declare function WasPedKilledByStealth(ped: number): boolean;
declare function WasPedKilledByTakedown(ped: number): boolean;
declare function WasPedKnockedOut(ped: number): boolean;
declare function N_0x61767f73eaceed21(ped: number): boolean;
declare function WasPedSkeletonUpdated(ped: number): boolean;
declare function WashDecalsFromVehicle(vehicle: number, p1: number): void;
declare function WashDecalsInRange(p0: number, p1: number, p2: number, p3: number, p4: number): void;
declare function WaterOverrideFadeIn(p0: number): void;
declare function N_0xa8434f1dff41d6e7(p0: number): void;
declare function WaterOverrideFadeOut(p0: number): void;
declare function N_0xc3c221addde31a11(p0: number): void;
declare function WaterOverrideSetOceannoiseminamplitude(minAmplitude: number): void;
declare function N_0x31727907b2c43c55(minAmplitude: number): void;
declare function WaterOverrideSetOceanwaveamplitude(amplitude: number): void;
declare function N_0x405591ec8fd9096d(amplitude: number): void;
declare function WaterOverrideSetOceanwavemaxamplitude(maxAmplitude: number): void;
declare function N_0xb3e6360dde733e82(maxAmplitude: number): void;
declare function WaterOverrideSetOceanwaveminamplitude(minAmplitude: number): void;
declare function N_0xf751b16fb32abc1d(minAmplitude: number): void;
declare function WaterOverrideSetRipplebumpiness(bumpiness: number): void;
declare function N_0x7c9c0b1eeb1f9072(bumpiness: number): void;
declare function WaterOverrideSetRippledisturb(disturb: number): void;
declare function N_0xb9854dfde0d833d6(disturb: number): void;
declare function WaterOverrideSetRipplemaxbumpiness(maxBumpiness: number): void;
declare function N_0x9f5e6bb6b34540da(maxBumpiness: number): void;
declare function WaterOverrideSetRippleminbumpiness(minBumpiness: number): void;
declare function N_0x6216b116083a7cb4(minBumpiness: number): void;
declare function WaterOverrideSetShorewaveamplitude(amplitude: number): void;
declare function N_0xb8f87ead7533b176(amplitude: number): void;
declare function WaterOverrideSetShorewavemaxamplitude(maxAmplitude: number): void;
declare function N_0xa7a1127490312c36(maxAmplitude: number): void;
declare function WaterOverrideSetShorewaveminamplitude(minAmplitude: number): void;
declare function N_0xc3ead29ab273ece8(minAmplitude: number): void;
declare function WaterOverrideSetStrength(strength: number): void;
declare function N_0xc54a08c85ae4d410(strength: number): void;
declare function WaypointPlaybackGetIsPaused(p0: number): boolean;
declare function WaypointPlaybackOverrideSpeed(p0: number, p1: number, p2: boolean): void;
declare function WaypointPlaybackPause(p0: number, p1: boolean, p2: boolean): void;
declare function WaypointPlaybackResume(p0: number, p1: boolean, p2: number, p3: number): void;
declare function WaypointPlaybackStartAimingAtCoord(p0: number, p1: number, p2: number, p3: number, p4: boolean): void;
declare function WaypointPlaybackStartAimingAtPed(p0: number, p1: number, p2: boolean): void;
declare function WaypointPlaybackStartShootingAtCoord(p0: number, p1: number, p2: number, p3: number, p4: boolean, p5: number): void;
declare function WaypointPlaybackStartShootingAtPed(p0: number, p1: number, p2: boolean, p3: number): void;
declare function N_0xe70ba7b90f8390dc(p0: number, p1: number, p2: boolean, p3: number): void;
declare function WaypointPlaybackStopAimingOrShooting(p0: number): void;
declare function WaypointPlaybackUseDefaultSpeed(p0: number): void;
declare function WaypointRecordingGetClosestWaypoint(name: string, x: number, y: number, z: number, point: number): LuaMultiReturn<[boolean, number]>;
declare function WaypointRecordingGetCoord(name: string, point: number): LuaMultiReturn<[boolean, Vector3]>;
declare function WaypointRecordingGetNumPoints(name: string, points: number): LuaMultiReturn<[boolean, number]>;
declare function WaypointRecordingGetSpeedAtPoint(name: string, point: number): number;
declare function WithdrawVc(amount: number): number;
declare function N_0xf70efa14fe091429(amount: number): number;
declare function WouldEntityBeOccluded(entityModelHash: number, x: number, y: number, z: number, p4: boolean): boolean;
